サーバ構築時の注意点

【RASISについて】
基本的な考え方として、「RASIS」という５つの項目があります。

①信頼性[Reliability]
　障害や問題の起きにくさ
　
　→セキュリティ対策がされていること(ウイルス対策/ふるまい検知/エンドポイント対策/更新プログラム/脆弱性対策)
　→不正アクセス対策がされていること(ファイアウォール/フォルダアクセス権/セキュリティグループなど)
　　外部サーバや外部ネットワークとのやりとりがある場合は、対象サーバ、ネットワーク機器、ポート、帯域などを確認する。
　→サーバタスクの実行アカウントの権限や対象となるフォルダのアクセス権の精査
　　サーバタスクの実行アカウント権限の精査（ローカルアカウントで良いもの/ドメインアカウントで良いもの）
　　ドメインアカウントで設定する場合は、パスワードの運用なども考慮が必要。
　　ローカルカウントであっても、タスクに利用する場合は、パスワードの有効期限設定などにより障害が起こる場合がある。
　→既にドメインが存在する場合はグループポリシーなどで、サーバ機能やアクセスに関連するポリシーが適用されていないか確認する。
　→テストフェーズ(単体/結合/総合)※要件に合った機能や処理が行われているか？

②可用性[Availability]
　提供サービス(機能)の止まりにくさ
　
　→冗長化されているか？(レイド/無停電装置/電源/アクティブスタンバイ/アベイラビリティーゾーン)
　→ＯＳやミドルウェア、アプリケーションが必要とする(ＣＰＵ/メモリ/ディスク)などが用意されているか？
　　※データベースやファイルサーバを構築する場合は、ディスクの速度やIOPSも考慮する必要がある。

③保守性[Serviceability]
　障害復旧・メンテナンスのしやすさ
　
　→冗長化されているか？(自動切換え/手動切替え)
　→リポジトリやWSUSの設計はされていて、脆弱性の対策が即時に対応可能となっているか？
　→データベースなどは静止点が取れるバックアップ方式になっているか？
　
　　<バックアップについて>
　　　バックアップが必要な場合は、バックアップ領域やバックアップデバイスなどの選定が必要です。
　　　例えばＶＳＳやフルバックアップ、差分バックアップなどでも必要な容量はことなるため、知識は必要。
　　　またバックアップの種類によって、性質があるものを選ぶ必要がありますし、見積もりから行う場合はコストの観点も必要となります。
　　　監査用に必要なだけであれば、バックアップサーバや外部媒体、保管用ストレージに格納するパターンもあります。
　
　→サーバの状態監視がされているか？(死活監視/提供サービスの稼働状態/サーバサービスの稼働状態/リソースの使用量など)
　→ざくっと縮退運転の可否や、ある程度の障害を見込んだユーザ影響範囲やコンチプランなどを考えておく。

④完全性[Integrity]※ここに関しては大半が開発側の話になります。
　データの保障および一貫性の確保※主にデータベースや共有ファイルなど対象とします。
　
　完全性には以下の４つの分類が存在します。

　●網羅性
　　必要なデータが必要なだけあること。
　　※データ移行や、共有フォルダ移行、アプリケーション更改、レプリケーションサーバの構築時には考慮が必要。
　●正確性
　　データの内容が正しいこと。
　　※データの文字化けやデータベース数、テーブル数、レコード数などが正しいことを確認する。
　　※※ただし、アプリケーションにより作成されている部分については、開発ベンダの責任の範囲。
　　※フォルダ数、ファイル数、ファイルサイズ、アクセス権が正しいこと。
　　※※特にLinuxやWindowsのように異なるＯＳ間でファイルの移行については、隠しファイルやアクセス権の扱いが異なるため注意が必要。
　●整合性
　　データが論理的に矛盾なく一貫していること。
　　※扱うデータの文字コードの正しさやロケーション(地域/時刻)情報が正しいこと。
　●安全性※データのバックアップや冗長化、余計なアクセス権がないなど構築の設計に関連します。
　　データが安全に保護されていること。

⑤機密性[Security]
　許可されたユーザしか情報を閲覧できない、第三者に漏洩しない。※内容は信頼性にも含まれています。
　
　→ネットワーク設計/ウイルス対策設計(EPP/EDR/振る舞い検知)/ファイアウォール設計(サーバファイアウォール/セキュリティグループ)
　→不要なポートと閉じる。不要なユーザにアクセス権を付与しない。

以下はフェーズ毎で注意していることを記載しています。

【設計フェーズ】
RASISを踏まえた設計をします。
ただしこの時点で明確になっていない情報などもあるため、調整が可能な見積もりを出すことが大切。

【テストフェーズ】
テスト工程は主に４つ程度あり、受け入れテストはユーザの操作による最終テストになります。
●単体テスト
　ＯＳやアプリケーションの設定確認と動作のテストを実施します。
●結合テスト
　他のサーバや他のシステムと処理やデータの連携が発生するものに対してテストを実施します。
●総合テスト
　実際ユーザが利用する状態を想定してテスト実施します。
　※データベースやグループウェアのようにデータが保存されるものについては、データをもとに戻せる手順も用意しておく必要があります。
　※またともに戻す方法がない場合は、完全な静止点をとったバックアップをもとに復元をします。
　※クライアントからのアクセスなどもこの時点でテストします。
●受入テスト
　実際ユーザが利用を行いテストを実施します。

【構築前にすること】
　対象のＯＳならびにアプリケーションが抱えている潜在的なバグやエラーの対処策を収集する。
　※ＯＳ、アプリケーションが利用するポート番号や通信の方向などを確認する。
　※更新プログラムや最新バージョン、最新パッチなどの情報を収集する。
　※時間がかかるため、提供機能部分を優先的に調べる。

【構築後～運用１、２ヶ月ですること】
　・不要なエラー抑止
　　サーバが稼働可能な状態になっても、エラーが発生するケースは多々あります。
　　恒久対応が可能なものであれば対処し、運用的に対処できるものは運用対処とします。
　　ユーザの操作により発生するものは、ユーザに周知も必要となります。
　　<例>
　　　アカウントパスワードの連続変更による、レプリケーションエラー
　　　サインアウトをしない状態でのリモデ切断後のＧＰＯ適用エラー
　　　サーバサインイン後のアプリケーションエラーやハングエラー
　　　外部通信ができない状態のCortanaの検索によるエラー
　　
　　出力されたエラーがサーバの動作に影響がないものであれば、監視の段階で抑止します。
　　<注意点>
　　一見問題がないとされているものでも、連続して発生した場合は問題ありみたいなものは単純に抑止すると危険です。
　・提供サービスの応答速度のチューニング
　　最適なチューニングがされていなかった場合に発生する遅延やエラーへの対応。

殴り書きで書いてしまったので、不備があるかもしれません。
追加で聞きたいことや疑問があればお気軽に質問してください。
