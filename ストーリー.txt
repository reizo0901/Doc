0. ■座学  
  0-1. ・WEBサーバーの概要について
  0-2. ・今回作成するAWSリソースの名称や機能について
  0-3. ※座学は手順書と別に違うファイルで資料作ろうかなと思います
1. AWSコンソールへログイン  
2. 仮想ネットワークの構築  
  2-1. VPC作成
  2-2. VPCにサブネットを作成
  2-3. インターネットゲートウェイ作成、VPCに紐づけ
  2-4. ルートテーブル作成
    2-4-1. ルートテーブルの設定
    2-4-2. ルートテーブルを編集
  2-4-3. サブネットの関連付けを編集
3. EC2(a)の構築  
  3-1. AWS EC2(インスタンス)起動
  3-2. 名前とタグの追加
  3-3. アプリケーションおよびOSイメージ(AMI)の指定
    →Amazon Linux 2 AMI(HVM) - Kernel 5.10 ,SSD Volume Typeを選択
  3-4. インスタンスタイプの指定
  3-5. キーペア(ログイン用の鍵)作成
  3-6. VPC、サブネット設定
    →作成したVPCを必ず選択すること
  3-7. ストレージを設定
  3-8. インスタンスを起動
  3-9. EC2(a)にElasticIPを割り当てる

4. EC2(a)にElastic IP アドレス割り当てと関連付け
  1.[新しいアドレスの割り当て]をクリック
  2.[Elastic IPアドレスを割り当てる]画面で、以下を設定し、[割り当て]をクリック
    [Elastic IP アドレスの設定]
      ネットワークボーダーグループ
        ap-northeast-1
      パブリック IPv4アドレスプール
        ●Amazon の IPv4アドレスプール
        〇AWSアカウントで持ち込むパブリックIPv4アドレス(プールが見つからなかったためにオプションが無効化されています。)
        〇顧客所有のIPv4アドレスのプール(顧客所有のプールが見つからなかったためオプションが無効です。)
      グローバル静的IPアドレス
        ※設定不要
    [タグ - オプション]
      [新規タグを追加]をクリック
      [キー] Name
      [値] eip-a-<※ローマ字表記の名前>
      [新規タグを追加]をクリック
      [キー]author
      [値]giken.tarou
  3.[Elastic IP アドレス]画面右上の、[このElastic IPアドレスを関連付ける]をクリック
  4.[Elastic IP アドレスの関連付け]画面で以下を設定し、[関連付ける]をクリック
    [リソースタイプ]
      ●インスタンス
      〇ネットワークインターフェイス
    [インスタンス]
      [EC2-Nginx-a-<※ローマ字表記の名前>]
    [プライベート IP アドレス]
      ※入力しない
    [再関連付け]
      ※チェックなし

↓リナンバリングが必要！！

5. Webサーバ(1a)構築  
  5-1. Amazon EC2にSSH接続
    5-1-1. キーペアのアクセス権の変更
    5-1-2. Amazon EC2にSSHで接続
    →パブリックIPアドレスを確認する画面を載せる？
  5-2. Web(Nginx)をインストール
  5-3. Nginxを起動
    →enabledになっていることを確認する。←これをしないと後で面倒くさいことになる。
    →rebootコマンドを一度発行する。
  5-4. ブラウザでサイト(Webサーバ)に接続
  5-5. サイト(1a)コンテンツを修正
  5-6. ブラウザでサイト(Webサーバ)に接続
    →表示内容が変更されたことを確認する。

6. 作成したインスタンスからマイAMI(独自アマゾンマシーンイメージ)を作成
  6-1. Amazon EC2(a)インスタンスの停止
    EC2のリソース画面から[インスタンス]をクリック
    インスタンスの一覧から[EC2-Nginx-a-<※ローマ字表記の名前>]のチェックを入れ、[インスタンスの状態]から[インスタンス停止]をクリック
    一覧の該当のインスタンスの[インスタンスの状態]が[停止中]になっていることを確認
  6-2. Amazon EC2(a)インスタンスからマイAMIを作成
    インスタンスの一覧から[EC2-Nginx-a-<※ローマ字表記の名前>]の[インスタンスID]をクリック
    メニューから[アクション]>[イメージとテンプレート]>[イメージを作成]をクリック
    [イメージを作成]画面で以下を設定し、[イメージ]を作成をクリック
      [イメージ名]
        [ami-<※ローマ字表記の名前>]
      [イメージの説明 - オプション]
        [ami-<※ローマ字表記の名前>]
      [再起動しない]
        □有効化
      [インスタンスボリューム]
        [サイズ] 8
      [タグ - オプション] author
        [キー]
        [値 - オプション] giken.tarou

7. EC2(c)構築  
  7-1. Amazon EC2(インスタンス)起動
  7-2. 名前とタグの追加
  7-3. アプリケーションおよびOSイメージ(AMI)の指定
  7-4. インスタンスタイプの指定
  7-5. キーペア(ログイン用の鍵)設定
  7-6. VPC、サブネット設定
    →VPCの選択をちゃんとする。
    →セキュリティグループルールを追加をクリックする画像を入れる。
  7-8. ストレージを設定
  7-9. インスタンスを起動

8. EC2(a)にElastic IP アドレス割り当てと関連付け
  1.[新しいアドレスの割り当て]をクリック
  2.[Elastic IPアドレスを割り当てる]画面で、以下を設定し、[割り当て]をクリック
    [Elastic IP アドレスの設定]
      ネットワークボーダーグループ
        ap-northeast-1
      パブリック IPv4アドレスプール
        ●Amazon の IPv4アドレスプール
        〇AWSアカウントで持ち込むパブリックIPv4アドレス(プールが見つからなかったためにオプションが無効化されています。)
        〇顧客所有のIPv4アドレスのプール(顧客所有のプールが見つからなかったためオプションが無効です。)
      グローバル静的IPアドレス
        ※設定不要
    [タグ - オプション]
      [新規タグを追加]をクリック
      [キー] Name
      [値] eip-c-<※ローマ字表記の名前>
      [新規タグを追加]をクリック
      [キー]author
      [値]giken.tarou
  3.[Elastic IP アドレス]画面右上の、[このElastic IPアドレスを関連付ける]をクリック
  4.[Elastic IP アドレスの関連付け]画面で以下を設定し、[関連付ける]をクリック
    [リソースタイプ]
      ●インスタンス
      〇ネットワークインターフェイス
    [インスタンス]
      [EC2-Nginx-a-<※ローマ字表記の名前>]
    [プライベート IP アドレス]
      ※入力しない
    [再関連付け]
      ※チェックなし

9. Webサーバ(1c)構築
  9-1. Amazon EC2にSSH接続
    9-1-1. キーエペアのアクセス権の変更
    9-1-2. Amazon EC2にSSHで接続
  9-2. Web(Nginx)をインストール
  9-3. Nginxを起動
  9-4. ブラウザでサイト(Webサーバ)に接続
  9-5. サイト(1c)コンテンツを修正
  9-6. ブラウザでサイト(Webサーバ)に接続

10. ElasticIPを関連付けの解除と解放をする  
  10-1. Amazon EC2(a)のElasticIPの関連付け解除と解放
    1.左ペインで[Elastic IP]をクリック
    2.[Elastic IP アドレス]画面で、[eip-a-<※ローマ字表記の名前>]にチェック
    3.[アクション]>[Elastic IP アドレス関連付け解除]をクリック
    4.[Elastic IP アドレスの関連付けの解除]画面で[関連付け解除]をクリック
        このElastic IP アドレスの関連付けを解除すると、そのアドレスを別のリソースに再度関連付けすることができます。Elastic IP アドレスのアカウントへの割り当ては維持されます。
        実行中のインスタンスに１つのElastic IP(EIP)アドレスを無料で関連付けることができます。追加のEIP毎に按分ベースで課金されます。追加のEIPはAmazon VPVでのみ利用できます。
        Elastic IP アドレスを効率的に使用できるように、これらのIPアドレスが実行中のインスタンスに関連付けされていない場合、または停止したインスタンスやアタッチされていない
        ネットワークンターフェイスに関連付けされている場合、時間帯の少額の料金が課金されます。
    5.[Elastic IP アドレス]画面で、[eip-a-<※ローマ字表記の名前>]にチェック
    6.[アクション]>[Elastic IP アドレス解放]をクリック
    7.[Elastic IP アドレスの開放]画面で[解放]をクリック

  10-2. Amazon EC2(c)のElasticIPを解除する

11. ALBの構築  


  11-1. ALB用のセキュリティグループを作成
    1.左ペインで[セキュリティグループ]をクリック
    2.[セキュリティグループ]の画面で[セキュリティグループを作成]をクリック
    3.[セキュリティグループを作成]画面で以下を設定し、[セキュリティグループを作成]をクリック
      [基本的な詳細]
    
    
    
    
    
    
  11-2. ターゲットグループを作成する（EC2-aとEC2-cを選択）
    
  11-3. ALBを作成する（ターゲットグループを選択）
    
  11-4. ALBのDNS名へブラウザから接続できることの確認

12. リソースの削除  
  12-1. Amazon EC2(a)とAmazon EC2(c)を終了
  12-2. VPCを削除
  12-3. マイAMIを削除
  12-4. スナップショットを削除


--SSH--
The authenticity of host '52.198.188.58 (52.198.188.58)' can't be established.
ED25519 key fingerprint is SHA256:aofmy6VdgGlCqRkk1d2+QLe774z651ULYSu8uUeu3KQ.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])?

Warning: Permanently added '52.198.188.58' (ED25519) to the list of known hosts.

       __|  __|_  )
       _|  (     /   Amazon Linux 2 AMI
      ___|\___|___|

https://aws.amazon.com/amazon-linux-2/
[ec2-user@ip-10-0-1-57 ~]$

[ec2-user@ip-10-0-1-57 ~]$ amazon-linux-extras
  0  ansible2                 available    \
        [ =2.4.2  =2.4.6  =2.8  =stable ]
  2  httpd_modules            available    [ =1.0  =stable ]
  3  memcached1.5             available    \
        [ =1.5.1  =1.5.16  =1.5.17 ]
  6  postgresql10             available    [ =10  =stable ]
  9  R3.4                     available    [ =3.4.3  =stable ]
 10  rust1                    available    \
        [ =1.22.1  =1.26.0  =1.26.1  =1.27.2  =1.31.0  =1.38.0
          =stable ]
 18  libreoffice              available    \
        [ =5.0.6.2_15  =5.3.6.1  =stable ]
 19  gimp                     available    [ =2.8.22 ]
 20  docker=latest            enabled      \
        [ =17.12.1  =18.03.1  =18.06.1  =18.09.9  =stable ]
 21  mate-desktop1.x          available    \
        [ =1.19.0  =1.20.0  =stable ]
 22  GraphicsMagick1.3        available    \
        [ =1.3.29  =1.3.32  =1.3.34  =stable ]
 23  tomcat8.5                available    \
        [ =8.5.31  =8.5.32  =8.5.38  =8.5.40  =8.5.42  =8.5.50
          =stable ]
 24  epel                     available    [ =7.11  =stable ]
 25  testing                  available    [ =1.0  =stable ]
 26  ecs                      available    [ =stable ]
 27  corretto8                available    \
        [ =1.8.0_192  =1.8.0_202  =1.8.0_212  =1.8.0_222  =1.8.0_232
          =1.8.0_242  =stable ]
 29  golang1.11               available    \
        [ =1.11.3  =1.11.11  =1.11.13  =stable ]
 30  squid4                   available    [ =4  =stable ]
 32  lustre2.10               available    \
        [ =2.10.5  =2.10.8  =stable ]
 33  java-openjdk11           available    [ =11  =stable ]
 34  lynis                    available    [ =stable ]
 36  BCC                      available    [ =0.x  =stable ]
 37  mono                     available    [ =5.x  =stable ]
 38  nginx1                   available    [ =stable ]
 40  mock                     available    [ =stable ]
 41  postgresql11             available    [ =11  =stable ]
 43  livepatch                available    [ =stable ]
 44  python3.8                available    [ =stable ]
 45  haproxy2                 available    [ =stable ]
 46  collectd                 available    [ =stable ]
 47  aws-nitro-enclaves-cli   available    [ =stable ]
 48  R4                       available    [ =stable ]
  _  kernel-5.4               available    [ =stable ]
 50  selinux-ng               available    [ =stable ]
 51  php8.0                   available    [ =stable ]
 52  tomcat9                  available    [ =stable ]
 53  unbound1.13              available    [ =stable ]
 54  mariadb10.5              available    [ =stable ]
 55  kernel-5.10=latest       enabled      [ =stable ]
 56  redis6                   available    [ =stable ]
 57  ruby3.0                  available    [ =stable ]
 58  postgresql12             available    [ =stable ]
 59  postgresql13             available    [ =stable ]
 60  mock2                    available    [ =stable ]
 61  dnsmasq2.85              available    [ =stable ]
 62  kernel-5.15              available    [ =stable ]
 63  postgresql14             available    [ =stable ]
 64  firefox                  available    [ =stable ]
 65  lustre                   available    [ =stable ]
 66  php8.1                   available    [ =stable ]
 67  awscli1                  available    [ =stable ]
 68  php8.2                   available    [ =stable ]
 69  dnsmasq                  available    [ =stable ]
 70  unbound1.17              available    [ =stable ]
 71  golang1.19               available    [ =stable ]
[ec2-user@ip-10-0-1-57 ~]$



[ec2-user@ip-10-0-1-57 ~]$ sudo amazon-linux-extras install nginx1
Installing nginx
Loaded plugins: extras_suggestions, langpacks, priorities, update-motd
Cleaning repos: amzn2-core amzn2extra-docker amzn2extra-kernel-5.10 amzn2extra-nginx1
0 metadata files removed
0 sqlite files removed
0 metadata files removed
Loaded plugins: extras_suggestions, langpacks, priorities, update-motd
amzn2-core                                                                                       | 3.7 kB  00:00:00
amzn2extra-docker                                                                                | 3.0 kB  00:00:00
amzn2extra-kernel-5.10                                                                           | 3.0 kB  00:00:00
amzn2extra-nginx1                                                                                | 3.0 kB  00:00:00
(1/9): amzn2-core/2/x86_64/group_gz                                                              | 2.5 kB  00:00:00
(2/9): amzn2-core/2/x86_64/updateinfo                                                            | 586 kB  00:00:00
(3/9): amzn2extra-docker/2/x86_64/updateinfo                                                     | 9.1 kB  00:00:00
(4/9): amzn2extra-nginx1/2/x86_64/updateinfo                                                     |   76 B  00:00:00
(5/9): amzn2extra-docker/2/x86_64/primary_db                                                     | 105 kB  00:00:00
(6/9): amzn2extra-nginx1/2/x86_64/primary_db                                                     |  60 kB  00:00:00
(7/9): amzn2extra-kernel-5.10/2/x86_64/updateinfo                                                |  26 kB  00:00:00
(8/9): amzn2extra-kernel-5.10/2/x86_64/primary_db                                                |  16 MB  00:00:00
(9/9): amzn2-core/2/x86_64/primary_db                                                            |  71 MB  00:00:01
Resolving Dependencies
--> Running transaction check
---> Package nginx.x86_64 1:1.22.1-1.amzn2.0.2 will be installed
--> Processing Dependency: nginx-filesystem = 1:1.22.1-1.amzn2.0.2 for package: 1:nginx-1.22.1-1.amzn2.0.2.x86_64
--> Processing Dependency: nginx-core = 1:1.22.1-1.amzn2.0.2 for package: 1:nginx-1.22.1-1.amzn2.0.2.x86_64
--> Running transaction check
---> Package nginx-core.x86_64 1:1.22.1-1.amzn2.0.2 will be installed
--> Processing Dependency: libssl.so.1.1(OPENSSL_1_1_1)(64bit) for package: 1:nginx-core-1.22.1-1.amzn2.0.2.x86_64
--> Processing Dependency: libssl.so.1.1(OPENSSL_1_1_0)(64bit) for package: 1:nginx-core-1.22.1-1.amzn2.0.2.x86_64
--> Processing Dependency: libcrypto.so.1.1(OPENSSL_1_1_0)(64bit) for package: 1:nginx-core-1.22.1-1.amzn2.0.2.x86_64
--> Processing Dependency: libssl.so.1.1()(64bit) for package: 1:nginx-core-1.22.1-1.amzn2.0.2.x86_64
--> Processing Dependency: libprofiler.so.0()(64bit) for package: 1:nginx-core-1.22.1-1.amzn2.0.2.x86_64
--> Processing Dependency: libcrypto.so.1.1()(64bit) for package: 1:nginx-core-1.22.1-1.amzn2.0.2.x86_64
---> Package nginx-filesystem.noarch 1:1.22.1-1.amzn2.0.2 will be installed
--> Running transaction check
---> Package gperftools-libs.x86_64 0:2.6.1-1.amzn2 will be installed
---> Package openssl11-libs.x86_64 1:1.1.1g-12.amzn2.0.13 will be installed
--> Processing Dependency: openssl11-pkcs11 for package: 1:openssl11-libs-1.1.1g-12.amzn2.0.13.x86_64
--> Running transaction check
---> Package openssl11-pkcs11.x86_64 0:0.4.10-6.amzn2.0.1 will be installed
--> Finished Dependency Resolution

Dependencies Resolved

========================================================================================================================
 Package                      Arch               Version                            Repository                     Size
========================================================================================================================
Installing:
 nginx                        x86_64             1:1.22.1-1.amzn2.0.2               amzn2extra-nginx1              55 k
Installing for dependencies:
 gperftools-libs              x86_64             2.6.1-1.amzn2                      amzn2-core                    274 k
 nginx-core                   x86_64             1:1.22.1-1.amzn2.0.2               amzn2extra-nginx1             559 k
 nginx-filesystem             noarch             1:1.22.1-1.amzn2.0.2               amzn2extra-nginx1              25 k
 openssl11-libs               x86_64             1:1.1.1g-12.amzn2.0.13             amzn2-core                    1.4 M
 openssl11-pkcs11             x86_64             0.4.10-6.amzn2.0.1                 amzn2-core                     61 k

Transaction Summary
========================================================================================================================
Install  1 Package (+5 Dependent packages)

Total download size: 2.4 M
Installed size: 6.7 M
Is this ok [y/d/N]:



Is this ok [y/d/N]: y
Downloading packages:
(1/6): gperftools-libs-2.6.1-1.amzn2.x86_64.rpm                                                  | 274 kB  00:00:00
(2/6): nginx-1.22.1-1.amzn2.0.2.x86_64.rpm                                                       |  55 kB  00:00:00
(3/6): nginx-core-1.22.1-1.amzn2.0.2.x86_64.rpm                                                  | 559 kB  00:00:00
(4/6): nginx-filesystem-1.22.1-1.amzn2.0.2.noarch.rpm                                            |  25 kB  00:00:00
(5/6): openssl11-pkcs11-0.4.10-6.amzn2.0.1.x86_64.rpm                                            |  61 kB  00:00:00
(6/6): openssl11-libs-1.1.1g-12.amzn2.0.13.x86_64.rpm                                            | 1.4 MB  00:00:00
------------------------------------------------------------------------------------------------------------------------
Total                                                                                   6.0 MB/s | 2.4 MB  00:00:00
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : 1:nginx-filesystem-1.22.1-1.amzn2.0.2.noarch                                                         1/6
  Installing : 1:openssl11-libs-1.1.1g-12.amzn2.0.13.x86_64                                                         2/6
  Installing : openssl11-pkcs11-0.4.10-6.amzn2.0.1.x86_64                                                           3/6
  Installing : gperftools-libs-2.6.1-1.amzn2.x86_64                                                                 4/6
  Installing : 1:nginx-core-1.22.1-1.amzn2.0.2.x86_64                                                               5/6
  Installing : 1:nginx-1.22.1-1.amzn2.0.2.x86_64                                                                    6/6
  Verifying  : gperftools-libs-2.6.1-1.amzn2.x86_64                                                                 1/6
  Verifying  : 1:nginx-filesystem-1.22.1-1.amzn2.0.2.noarch                                                         2/6
  Verifying  : 1:nginx-1.22.1-1.amzn2.0.2.x86_64                                                                    3/6
  Verifying  : 1:nginx-core-1.22.1-1.amzn2.0.2.x86_64                                                               4/6
  Verifying  : openssl11-pkcs11-0.4.10-6.amzn2.0.1.x86_64                                                           5/6
  Verifying  : 1:openssl11-libs-1.1.1g-12.amzn2.0.13.x86_64                                                         6/6

Installed:
  nginx.x86_64 1:1.22.1-1.amzn2.0.2

Dependency Installed:
  gperftools-libs.x86_64 0:2.6.1-1.amzn2                     nginx-core.x86_64 1:1.22.1-1.amzn2.0.2
  nginx-filesystem.noarch 1:1.22.1-1.amzn2.0.2               openssl11-libs.x86_64 1:1.1.1g-12.amzn2.0.13
  openssl11-pkcs11.x86_64 0:0.4.10-6.amzn2.0.1

Complete!
  0  ansible2                 available    \
        [ =2.4.2  =2.4.6  =2.8  =stable ]
  2  httpd_modules            available    [ =1.0  =stable ]
  3  memcached1.5             available    \
        [ =1.5.1  =1.5.16  =1.5.17 ]
  6  postgresql10             available    [ =10  =stable ]
  9  R3.4                     available    [ =3.4.3  =stable ]
 10  rust1                    available    \
        [ =1.22.1  =1.26.0  =1.26.1  =1.27.2  =1.31.0  =1.38.0
          =stable ]
 18  libreoffice              available    \
        [ =5.0.6.2_15  =5.3.6.1  =stable ]
 19  gimp                     available    [ =2.8.22 ]
 20  docker=latest            enabled      \
        [ =17.12.1  =18.03.1  =18.06.1  =18.09.9  =stable ]
 21  mate-desktop1.x          available    \
        [ =1.19.0  =1.20.0  =stable ]
 22  GraphicsMagick1.3        available    \
        [ =1.3.29  =1.3.32  =1.3.34  =stable ]
 23  tomcat8.5                available    \
        [ =8.5.31  =8.5.32  =8.5.38  =8.5.40  =8.5.42  =8.5.50
          =stable ]
 24  epel                     available    [ =7.11  =stable ]
 25  testing                  available    [ =1.0  =stable ]
 26  ecs                      available    [ =stable ]
 27  corretto8                available    \
        [ =1.8.0_192  =1.8.0_202  =1.8.0_212  =1.8.0_222  =1.8.0_232
          =1.8.0_242  =stable ]
 29  golang1.11               available    \
        [ =1.11.3  =1.11.11  =1.11.13  =stable ]
 30  squid4                   available    [ =4  =stable ]
 32  lustre2.10               available    \
        [ =2.10.5  =2.10.8  =stable ]
 33  java-openjdk11           available    [ =11  =stable ]
 34  lynis                    available    [ =stable ]
 36  BCC                      available    [ =0.x  =stable ]
 37  mono                     available    [ =5.x  =stable ]
 38  nginx1=latest            enabled      [ =stable ]
 40  mock                     available    [ =stable ]
 41  postgresql11             available    [ =11  =stable ]
 43  livepatch                available    [ =stable ]
 44  python3.8                available    [ =stable ]
 45  haproxy2                 available    [ =stable ]
 46  collectd                 available    [ =stable ]
 47  aws-nitro-enclaves-cli   available    [ =stable ]
 48  R4                       available    [ =stable ]
  _  kernel-5.4               available    [ =stable ]
 50  selinux-ng               available    [ =stable ]
 51  php8.0                   available    [ =stable ]
 52  tomcat9                  available    [ =stable ]
 53  unbound1.13              available    [ =stable ]
 54  mariadb10.5              available    [ =stable ]
 55  kernel-5.10=latest       enabled      [ =stable ]
 56  redis6                   available    [ =stable ]
 57  ruby3.0                  available    [ =stable ]
 58  postgresql12             available    [ =stable ]
 59  postgresql13             available    [ =stable ]
 60  mock2                    available    [ =stable ]
 61  dnsmasq2.85              available    [ =stable ]
 62  kernel-5.15              available    [ =stable ]
 63  postgresql14             available    [ =stable ]
 64  firefox                  available    [ =stable ]
 65  lustre                   available    [ =stable ]
 66  php8.1                   available    [ =stable ]
 67  awscli1                  available    [ =stable ]
 68  php8.2                   available    [ =stable ]
 69  dnsmasq                  available    [ =stable ]
 70  unbound1.17              available    [ =stable ]
 71  golang1.19               available    [ =stable ]
[ec2-user@ip-10-0-1-57 ~]$


nginx version: nginx/1.22.1


● nginx.service - The nginx HTTP and reverse proxy server
   Loaded: loaded (/usr/lib/systemd/system/nginx.service; disabled; vendor preset: disabled)
   Active: active (running) since Tue 2023-04-11 12:40:38 UTC; 20s ago
  Process: 3460 ExecStart=/usr/sbin/nginx (code=exited, status=0/SUCCESS)
  Process: 3456 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=0/SUCCESS)
  Process: 3455 ExecStartPre=/usr/bin/rm -f /run/nginx.pid (code=exited, status=0/SUCCESS)
 Main PID: 3462 (nginx)
   CGroup: /system.slice/nginx.service
           ├─3462 nginx: master process /usr/sbin/nginx
           └─3463 nginx: worker process

Apr 11 12:40:38 ip-10-0-1-57.ap-northeast-1.compute.internal systemd[1]: Starting The nginx HTTP and reverse proxy .....
Apr 11 12:40:38 ip-10-0-1-57.ap-northeast-1.compute.internal nginx[3456]: nginx: the configuration file /etc/nginx/...ok
Apr 11 12:40:38 ip-10-0-1-57.ap-northeast-1.compute.internal nginx[3456]: nginx: configuration file /etc/nginx/ngin...ul
Apr 11 12:40:38 ip-10-0-1-57.ap-northeast-1.compute.internal systemd[1]: Started The nginx HTTP and reverse proxy s...r.
Hint: Some lines were ellipsized, use -l to show in full.
[ec2-user@ip-10-0-1-57 ~]$


/usr/share/nginx/html;



<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx by EC2 1a giken!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx by EC2 1a giken!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>


[ec2-user@ip-10-0-1-145 ~]$ sudo reboot
Connection to 18.178.224.127 closed by remote host.
Connection to 18.178.224.127 closed.

