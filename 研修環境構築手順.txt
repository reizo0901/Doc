

●OSのアップデートを行う。
yum update -y

●OSのアップグレードを行う。
yum upgrade -y

●Dockerをインストールする。
curl -sSL https://get.docker.com/ | sh

●Dockerデーモンを起動する。
systemctl docker start

●Dockerコンテナをダウンロードする。
docker pull dockerfiles/django-uwsgi-nginx

●Dockerデーモンを常時起動にする。
systemctl enable docker

●ec2-userをグループに追加する。
usermod -aG adm ec2-user
usermod -aG wheel ec2-user
usermod -aG systemd-journal ec2-user
usermod -aG docker ec2-user

●ec2-user用の環境を作成する。
mkdir /home/ec2-user/docker/code

●Dockerイメージをビルドして実行する。
docker run -it -d -p 80:80 --name webapp -v /home/ec2-user/docker/code:/home/docker/code dockerfiles/django-uwsgi-nginx 

●Dockerコンテナ内にvimをインストールする。
docker exec -it webapp apt-get install -y vim

●追加設定で書き換える。
<ホストから変更>

以下のドキュメントを開く
/home/ec2-user/docker/code/app/website/settings.py

以下の項目を編集する。
ALLOWED_HOSTS = []
↓
ALLOWED_HOSTS = ['<外部IPアドレス>',]
例：ALLOWED_HOSTS = ['192.168.1.2',]

LANGUAGE_CODE = 'en-us'
↓
LANGUAGE_CODE = 'ja'

TIME_ZONE = 'UTC'
↓
TIME_ZONE = 'Asia/Tokyo'

●コンテナ内のuwsgiを再起動する。
docker exec -it webapp supervisorctl restart app-uwsgi

●ブラウザからサーバのIPアドレスに接続する。
http://192.168.1,2

※正常にDjangoのロケットが表示されたら、問題はありません。
curl 192.168.1.2

●Djangoようにデータベースのマイグレート
cd /home/docker/code/app/
python3 manage.py migrate

●テーブル確認
sqlite3 db.sqlite3
.table
.exit

●
