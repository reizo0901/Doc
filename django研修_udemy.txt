
************************************************************
セクション5:Hello worldアプリ(Django2)
13.はじめに
************************************************************
はい。

それでは、実際にJANGOを使ってアプリを作っていこうという風に思いますで、これから作っていくのはアプリを作っていくって言うんです

けれども、このアプリって何かというと、WEBアプリケーションと言っていまして、もう少しわかりやすく言うと平たく言うとウェブサイトを作るという

ようなイメージを持っていただければなというふうに思います。

ですので、これはHELLOWORLDという文字を表示するウェブサイトを作っていこうというものです。

で初めにですね。

完成したアプリケーション、つまりウェブサイトを確認してみましょうで、このブラウザを見てみるとですね。

中にはHELLOWORLDという文字列が入っていてで、ここのURLが何か打ち込まれてるなというのが確認できますで、これを見るだけ

ではですね。

非常に簡単というか質素というか、そんなウェブサイトになっていくんですけれども、DJANGOの1の基礎的な部分を押さえる上ではこのアプリ

でですね。

HELLOWORLDをしっかりと表示させるということを学んでいくということが非常に重要になってきます。

でですね。

これから実際にJANGOのインストールがもう終わってますので、実際にそのファイルを使いながらですね。

コードを書いていくんですけれども、その前にですね。

ちょっともう一回一歩。

そのジャンゴというのが何なのかというのをですね。

一歩上の視点から、もう一度こう新しい観点で学んでいきたいなという。

風に思っていますで、その前にですね。

DJANGOを使ってウェブサイトを作る場合とですね。

そうではなくて、普通のジャンゴを使わないでウェブサイトを作る場合とその2つを比較しながらですね。

見ていこうかなというふうに思います。

で普通のウェブサイトの場合ですね。

これは左側に。

HTMLファイルがあって、右側にブラウザがありますで左側の。

HTMLファイルにですね。

そのこの。

HTMLというルールに従った形でコードが書かれていてで、そのファイルをブラウザが読み込むことによって、このタグ色んなルールに基づいて書か

れているものですね。

それをブラウザー解釈してこう見た目奇麗にこの場合は。

エイチワンタグっていうのは文字を大きく表示する目立たせるようなイメージがありますので、このように大きな文字になって表示されるということ

が分かります。

で、ブラウザとサーバーの関係を踏まえながらですね。

もう少しちょっと突っ込んでみていきたいなという風に思いますで、普通のWEBサイトDJANGOと比較した場合のですね。

DJANGOを使わないWEBサイトの場合はですね。

ブラウザからこう上のバーにですね。

URLを打ち込むと、それはリクエストを送ると言うんですけれども、サーバーにリクエストを送ると、そのサーバーが送られたリクエストに対してその

対象となるファイルを持ってきて、それをブラウザに返してあげるというのが、一般的なWEBサイトの役割になりますで、ウェブサイトのURL

っていうのはですね。

ここに書いたんですけれども、ユニフォームリソースロケータと言うことで、こう単一の茂ます。

単一のただ、一つのそのファイルを特定するようなものっていうのが、このURLっていう意味なんですね。

ですので、特定のURLを打ち込むと、例えばこの場合ですね。

HTTPSでドットコムスラッシュドットHTMLと言うのを打ち込むと、それに対応したファイルがこう戻ってくるというようなイメージですね。

で、これもちょっとこれからDJANGOの説明をするんですけれども、その理解をさらに深めるために敢えてちょっと違う例を使って、この普通の

ウェブサイトを使う普通のWEBサイトを作る場合について、お話をしようという風に思います。

普通のウェブサイトを作る場合ですね。

これをお店料理のお店に例えて、ちょっと考えていきたいんですけれども、今回はですね。

この普通のウェブサイトの場合っていうのは、ドーナツ屋さんのようなイメージを持っていただきたいなという風に思います。

これは何かというと、もう完成された商品が並んでいてで購入する立場からすると、一つ一つのドーナツをそのままこう手に取って買って

いくということしかできないですので、例えばこれが何て言うんですかね。

チョコが掛かったドーナツすれば、チョコが掛かったドーナツをくださいと言うと、店員さんがそのドーナツを持ってくるとで、もしくはイチゴの

ドーナツが欲しいと言えば、店員さんがこのイチゴのドーナツを持ってきてくれるというようなイメージですね。

こう注文のオーダーと出てくるものが一対一の関係にあるというようなものが、普通のウェブサイトのイメージという風に考えていただければなと

いう風に思います。
************************************************************
14.Djangoのイメージ
************************************************************
えー。

では次にですね。

ジャンゴの全体像について見ていこうというふうに思いますで、この右側のですね。

緑緑で囲まれた部分というのが、このジャンゴの全体像のイメージになりますで、ちょっとファイルが多くて分かりづらいのかなと取っ付きづらい

かなという部分もあるかなというふうに思いますのでまずですね。

このジャンゴの場合は、具体的な例を使って、ちょっと話をしていこうという風に思いますで先程ですね。

ウェブサイトの場合は、ドーナツ屋さんで一対一の関係にありますよという話をしたんですけれども、ジャンゴの場合はですね。

イメージとしてはラーメン屋さんのようなものを考えていただきたいなという。

風に思っていますで、ラーメン屋さんでこのブラウザがですね。

ラーメンのオーダーをする注文する人になりますで、ここでですね。

例えばある人がですね。

じゃあ、味噌ラーメンの大盛りをくださいという。

リクエストを投げたとしましょう。

そうするとラーメン屋さんは、事前に出来上がったラーメンが置いてある訳ではなくて、注文を受けてから初めてそのラーメンを作るというのが

どなたさんとの違いになるんですけれども、今回もですね。

味噌ラーメンの大盛りをくださいという。

リクエストを投げると、そのリクエストをですね。

このURLドットというファイルこれ注文を受けるウエイトレスさん、ウェイターさんみたいなイメージなんですけれども、その人がまず注文を受け取ります。

で、今回の場合は味噌ラーメンの大盛りというリクエストを受けました。

でリクエストを受けるとですね。

このURLゾッドっていうのはですね。

次のビューズドットというのに対して指示を出すんですね。

でどういう指示を出すかっていうと、このラーメンの例でいきますと、味噌ラーメンの大盛りを作りなさいという。

指示を出してますで、味噌ラーメンの大盛りを作りなさいという。

指示を受けたこのビューズドットはですね。

大きくざっくりとお話をすると2つのことをします。

一つはこのテンプレートを持ってくるというDJANGOの中でこう言われてるんですけれども、テンプレートを持ってくるっていうのは何かって言う

と、ラーメンでいうところのこうそれぞれの大きさのどんぶりを持ってくるようなイメージです。

ですので、今回の例でいきますとちっちゃい丼中ぐらいの丼おっきいどんぶりとその3つの3種類のどんぶりがあるというようなイメージですね。

で、今回は味噌ラーメンの大盛りを注文したので、大盛りのどんぶりをまず持ってきますで、その持ってきた大盛り用の丼に対して、もう1個

することがあってですね。

それ何かって言うと、そのみそラーメン用の具材とかですね。

味噌とかスープとかそういったものをこの。

DJANGOでいうところのモデル図ってもデータベースになるんですけれども、ここにラーメンでいうところの具材とか食材とかいろんなものが入っ

ているというふうに考えてくださいで、このたくさんの食材が入ってる。

キッチンとか冷蔵庫とかそういった場所から味噌ラーメンを作るために必要な材料を持ってきてで、大盛りの丼にみそラーメンの材料を入れて、

それで完成したものをこうレスポンスとして返していくというのが、DJANGOと普通のWEBサイトの違いという風になります。

ですので、この場合、何がいいかっていうと細かい。

そのカスタマイズというか違うリクエストにも対応しやすいということが言えます。

例えばですね。

味噌ラーメンの小森でネギ大盛りとかいうリクエストがあった場合ですね。

そういったリクエストを送っていくと、この井原冷蔵とPIがそのリクエストを受け取ってで次のビュースポットにですね。

みそラーメンの小森ねぎ大盛りというものを作りなさいという。

指示を出していてで、このリゾットは丼の中から小森用の丼を持ってきてで、さらにこの具材が入っているところから、味噌ラーメンを

作るための具材を持ってきますで、さらにですね。

ネギ大盛りと言われてますので、たくさんのネギをですね。

普段以上に持ってきて、その完成した味噌ラーメンをレスポンスとして返していくということをしているというようなのが、このざっくりと

した大きなJANGOの中でやっているような仕組みになりますで、このイメージだと何となく分かるのかなというふうに思うんですけれども、

さらにですね。

これを実際のウェブサイトの例でもう少し整理を進めていこうというふうに思います。

で次はですね。

YOUTUBEの例を使って、このDJANGOの全体像の理解を深めていこうという風に思います。

YOUTUBEも先ほどお話し通ですね。

DJANGOで作られているんですけれども、例えばこのJANGOにおいてですね。

このYOUTUBEというウェブサイトにおいて、ユーザーがリクエストあるリクエストを投げたとしましょうで、そのリクエストの内容は何かっていうと、

YOUTUBEドットコムスラッシュ0TESTと言うことで、最新の新しい動画を見たいなという。

リクエストが送られてきたという風にします。

そうすると、そのURLを受け取ったですね。

URLRAYS。

ドット。

By。

っていうのは、新しい動画が見れるようなこうウェブサイトを作ってくれという指示をこうUSEDとbyになる出すんですね。

で、今回は例えばビューズのというBEAUを実行してくれというリクエストを出したとしましょう。

そうするとこのビューズ法っていうのは、色んなまずテンプレートがある中で、動画を並べて表示するために適したようなテンプレートHTMLファイル

っていうのをこう選んできて、それをまず引っ張ってきます。

で、動画を並べて並べて並べやすいようなサイトの上にですね。

このモデルスロットPi。

データーベースの中にたくさん入っている動画の情報の中からですね。

新しい動画の情報を引っ張ってきてで、それを動画を並べるのに適した。

テンプレートに動画をぺたぺたとこうくっ付けていってですねで、それで完成したものをレスポンスとして、これどうぞという風に返していくと

いうようなイメージですねで、もう1個違う例を見ていきたいんです。

けれどもじゃ次はですね。

自分のプロフィールをちょっと見たいなという。

リクエストが送られたとしますで、ここを見てほしいんですけれども、ユーザーYOUTUBEドットコムプロフィール。

TAROということでTAROさんていう人がログインをしていて、自分のプロフィールを見たいなという。

リクエストを送ったとしますでそうするとですね。

このリクエストを受け取ったURLとPIはですね。

えじゃ太郎さんのプロフィールを表示するようなウェブサイトを作ってくださいねと。

例えばそれがビューのだとしましょう。

そうすると、VIEWのを実行してくれという良性をですね。

このビューずっと上に出しますで、MUSEドットPO様は何をするのかというと、まずはテンプレートの中からユーザーの情報を表示するのに

適したテンプレートHTMLファイルですね。

今回、ここにユーザーIDとHTMLというファイルがあるんですけれども、このファイルをまず持ってきますで、その上でそのファイルの上にです

ね。

データーベースに入っている情報を持ってくるんですけれども、今回は動画の情報ではなくて、ユーザーたくさんのユーザーが登録してるんですけれども、

その中で太郎さんていうユーザーの情報を持ってきて、それをユーザーIDとHTMLというファイルに、そのデーターを入れ込んで完成したもの

をレスポンスとしてブラウザに返していくということをしています。

でこの流れを見た上でですね。

こういった仕組みを使わないで、YOUTUBEのようなサイトを作っていくということをイメージすると、結構ものすごく大変というかこうごちゃごちゃ

になっちゃうっていうのは、何となくイメージつきやすいのかなという風に思います。

たくさんデータがあるからこそ、こう必要な情報を必要なところから取ってきて、それを組み合わせることによってウェブサイトを作っていくとでそう

することによって、効率的にウェブサイトを作ることができるという。

イメージを持っていただきたいなという。

風に思っています。
************************************************************
15.startproject
************************************************************
はい。

ここまでがですね。

ジャンゴの全体像という話になりますで、ここまでの流れを見た上でですね。

やっとというか、実際にコードを打ちながらですね。

ジャンゴのプロジェクトを作っていこうという風に思いますで、ジャンゴのプロジェクトを作っていくときにですね。

まず始めにすることがあるんですけれども、それは何かっていうとスタートプロジェクトと言うコマンドを打っていきます。

で、スタートプロジェクトが何かというとですね。

何をするのかというと、一言で言うと、ジャンゴを使ったウェブサイトを作るときに必要なファイル群1連のファイル群をですね。

コピーしてくるということを言います。

で、ジャンゴというのは章の方でお話しした通りですね。

フレームワークなんですけれども、そのフレームワークっていうのはあってもなくても、ウェブサイトというのは作ることができます。

ただ、それを便利に作るためにジャンゴという機能があって、それは突き詰めていくと一個一個のファイルとかフォルダーの集まりなんですけれども、

その必要なファイルをコピーしてくるというのがスタートプロジェクトというコマンドです。

で、実際にこのジャンゴの全体像の中でこういったこうURLとPiだったりと、PI上、ずっとPIというのが一つの主要なジャンゴを

構成するファイルになるんですけれども、こういったファイルをコピーしてくるということがスタートプロジェクトをするということになります。

では、実際にですね。

スタートプロジェクトをして、DJANGOに必要なファイルをコピーしていきましょうで、今はですね。

このVISUALSTUDIOコードの中でどのフォルダーにいるかというとですね。

これ私はこれ。

デスクトップ環境なんですけれども、このデスクトップ環境でHELLOWORLDというフォルダを作りました。

で、これは普通にWINDOWSで作ることができるフォルダーですね。

で作ったフォルダを今選択してるという状況です。

ですので、デスクトップの次のHELLOWORLDとというフォルダに入ってるという状況になりますで、ここで実際にコマンドを打っていくんです

けれども、スタートプロジェクトをするために使うコマンドは決まっていてですね。

それは何かっていうと、ジャンゴハイフンあ土民。

スペーススターとプロジェクトとで、このようなコマンドをてきますで、このDJANGOAND美郷プロジェクトっていうのはですね。

このスタートプロジェクトをしてファイルをコピーするために必要なコマンドになりましてで、このスタートプロジェクトという名前の次に任意のプロジェクト

名をつけることで、そのプロジェクト名でのプロジェクトを作るということになります。

今回はですね。

HELLOWORLDを表示するプロジェクトですので、HELLOWORLDプロジェクトとしましょう。

でENTERを押すと。

何もないように見えるんですけれども、ここでLSコマンドを打ってみると、HELLOWORLDプロジェクトと言うフォルダができていることが分かり

ますで、このフォルダに移動してみましょう。

HELLOWORLDプロジェクトに移動すると、はい中にですね。

何かまた、同じ名前のフォルダとあとは一つファイルができているということが分かります。

で、これをですね。

実際にどういったファイル化できているのかというのを見ていくとですね。

こういった。

いくつかのファイルができていると言うことがわかります。

で、これで実際、スタートプロジェクトをして必要な最低限のファイル群をコピーするということが完了したというような状況になりますで、

ここでですね。

それぞれ一個一個ファイルの説明はしていくんですけれども、このDJANGOのスタートプロジェクトをすることによって、ファイルをコピーするだけ

ではなくてですね。

実際、DJANGOを使ってウェブサイトを作る時に便利な機能もたくさんですね。

インストールというか入れることができていますで、その便利な機能たくさんあるんですけれども、これからですね。

よく使っていく機能の一つをですね。

実際に使ってみようという風に思いますで、そのコマンドはですね。

LANサーバーというコマンドになりますで、LANサーバーは何かって言うとサーバーを立ち上げるという。

コマンドですねでサーバーを立ち上げるっていうのは、ブラウザからリクエストを受けて、そのリクエストを受けることができる状態にしてで、さらに

受け取ったリクエストに応じて必要なファイルを返してあげるというようなこうお店とかでいうところの開店する準備を整えると、客さんを受け入れる

準備を集えるというようなことがLANサーバーをするということになります。

で、実際にDJANGOの開発を進めていく上ではですね。

実際、ブラウザでこうURLを打ち込みながら、ちゃんと開発が進んでるのかなっていうのを確認していくのがですね。

非常に大切になってくるんですけれども、その時に1からWEBサーバーを立ち上げていくと、なかなかその設定とかも大変なので、そういった

実際のDJANGOの開発とは関係ないようなところはなるべくですね。

手間を掛けないで確認とかができるようになると、効率的に今開発が進めますよね。

ということで、LANサーバーという機能が備わっていますで、実際にLANサーバーのコマンドを打ってみましょう。

でLANサーバーを始めとするですね。

便利なDJANGOの機能っていうのは、基本的にはマネー1ドットと言うファイルを使うことによって実行することができます。

で、これはというファイルが付いてますので、PIという拡張子が付いてますので、PYTHONファイルなんですけれども、このPYTHONファイル

を色んな引数を与えて実行することによって便利な機能を使うことができます。

ですので、実際に乱数サーバーのコマンドを押していくんですけれども、PYTHONファイルを実行するということで、まずPYTHON3と言う。

コマンドを打ってPYTHONマネージドとBYSPACEで乱数サーバーと言うコマンドを打ちます。

そうするとですね。

このようにスターティングディベロップメントサーバー後。

HTB1270018000という表示が出ました。

でこれで何ができているのかというのを見ていきましょう。

先程指示されたですね。

知見7ドット0を0。

18000と。

というURLを入れると、こんな画面が出てきました。

でこの画面はですね。

JANGOのインストールがちゃんとできましたよとデフォルトでLANサーバーを押したときに表示する画面なんですけれども、これが出ているという

ことは、しっかりとサーバーが立ち上がってる。

つまり、リクエストを出してちゃんとレスポンスリターンが返ってきているということが言えるというところと、DJANGOがちゃんとインストールされ

ているということが言えるということになります。
************************************************************
16. Djangoのバージョンが3.1以降の方へ
************************************************************
Djangoのバージョンが3.1以降の方へ
Django3.1からsettings.pyファイル内の記載内容が若干変更となりました。

Djangoのバージョンは、settings.pyファイル内の上Djangoのバージョンは 、settings.pyファイル内の3行目で確認することができます。

3行目に
Generated by 'django-admin startproject' using Django 3.1

という記載がある場合（Djangoの先の数字が3.1以上の場合）、

本講義のコードで実行するとエラーになりますので、

エラーを避けるため、settings.py ファイルの任意の場所

（先頭が良いかと思います）に


import os

を追記してください。
************************************************************
17. （VPSの方向け）VPS上でrunserverをしてアクセスをする方法
************************************************************
でここからはですね。

VPSを使ってDJANGOのコードをですね。

書き始めてる方向けにですね。

LANサーバーを置きた時にですね。

ちょっと追加の設定が必要になってきますので、そのやり方についてお話をしていきます。

で、何でそうなるかって言うとですね。

このDJANGOのLANサーバー機能っていうのはざっくり言うと、この手元のパソコンで開発をする時にですね。

使いやすいように設定されてるものと言うことができまして初めからですね。

VPSを使って、外部のサーバーを借りて実行していく場合はですね。

LANサーバーをただ、単にするだけではですね。

そのままブラウザにですね。

IPアドレス落ち込んでアクセスしようとしてもアクセスできないということが起こってしまうということが挙げられますで、この辺ですね。

細かいところはですね。

なかなかちょっと難しい部分もありますし、実際のですね。

VPSを使ってデプロイするところはですね。

最後のところで詳しく説明をしておりますのでで今回はですね。

まず、そのアクセスする方法についてですね。

そのやり方を中心にお話をしていきます。

で今ですね。

PUTTYの画面がありまして、そのPUTTYの画面からこのバルチラのVPSにまずアクセスをしていきますでここで。

IPアドレスを入力します。

ここの情報をですね。

この情報を入れていきます。

4576221136。

でオープンします。

ええログインでユーザーネームもこれですね。

そのままルートと入れていきます。

ENTERを押してでPASSWORDこれでコピーをして。

パスワードをはりつけます。

やり切るのはですね。

これ。

右クリックマウスの右ボタンをですね。

一回クリックするとコピーしたものを張り付けることができますので、その後、貼り付けをしてENTERを押していきます。

でもちろんですね。

ここパスワードを出して、そのまま手入力で入れててば同じです構いません。

どちらでも大丈夫ですで今ですね。

これでログインが完了しました。

で私先程もですね。

このHELLOWORLDというプロジェクトを作ってですね。

その中で。

このようにですね。

HELLOWORLDプロジェクトというDJANGOのプロジェクトをもう作っていますで、ここでですね。

ちょっと設定をしていく必要があるんですけれども、大きく分けると3つですね設定するとます。

まず1つ目はですね。

ユニコーンというアプリを入れていく必要があります。

で、これはですね。

入れ方はPIPSPIPSビーカーエPYTHONツーの方ですね。

PYTHONをPIPSリージョンがぱピップで大丈夫ですで、PIPS裏インストールフックにコマンドを入れていきます。

でこれはですね。

ざっくり言うとIPアドレスで受け取ったものをですね。

受け取ったアクセスを違う。

PYTHONファイルに流し込むようなイメージですね。

もうこの言葉だけだと、かなりちょっと分かりづらいかなと思うんですけれども、内部でちょっと複雑な処理をするために、このシステムこのパッケージ

が必要ということをちょっと思っていただければなと思いますで、これをしたらですね。

インストールが無事に完了しました。

次にですね。

HELLOWORLDプロジェクトの中に入って、その中のですね。

セッティングスロットファイルをちょっといじっていく必要があります。

これを開いていきましょうで開くためにはですね。

VIMというテキストエディタですね。

これはこのVBSにあらかじめ入っているテキストエディタですで、これを使っていきます。

で、VIMの使い方はですね。

これちょっとややこしくて難しいですので、これもですね。

最後のデプロイするところにですね。

VIMの使い方簡単に説明していますので、そちらを参考にしていただければなと思いますで、ENTERをしてきましょう。

はい、これがですね。

セッティングすると、ファイルの中身になっていきます。

で順番にですね。

下の方に設定進んでいくんですけれども、VIMの場合はですね。

下ボタンを押してもいいですし、あとJAボタンを押してもですね。

下の方に行くことができます。

はいでこのアラードホスというところの設定をちょっとしていく必要があります。

で、これでですね。

ちょっと情報出てくるんですけれども、入れるためにはですね。

この順番に具体的にコードを行っていきますので、一緒に打っていきましょう。

まずですね。

該当する場所に入ってああいうボタンを押します。

開いてインサートという行挿入モードという風になっていきますでAIをそうですね。

この下のところにインサートという表示が出たのがちょっと分かるかなと思いますで、このインサートモード抜けるのはですね。

ESCAPEボタンを押すとはい。

これが消えたのが分かります。

はい、もう一回インサートモードに入って、これで文字を直接入力できるようになりますで、ここでですね。

情報入れていくんですけれども、どの情報を入れるかというとですね。

このバルチラのIPアドレスですね。

これを入れていきます。

なのでこの数字の45と76とと1000と136ですね。

はい。

これを打ち込んででこれを保存して、このテキストは一体一回閉じるんですけれども、その中ではですね。

このまず、挿入モードから抜けるためにエスケープボタン回をしますで、その後にですね。

コロンですね。

コロンをして、ダブルキューというふうに入れてENTER押してください。

はい。

これでセーブをしてテキストレター終わるという。

命令をしたことになりますで、これでですね。

設定が完了しましたのではい今ですね。

これ、特にマネージしろとPAファイルの場所に戻る必要なんですけれども、LANサーバーする場合は、このPYTHONスリーマネー注とBYERROR

サーバーという形でコマンドていくんですけれども、VBSの場合はですね。

グリーコーンというものを使って、LANサーバーするようなイメージになってきますで、具体的なコマンドはですね。

分に今ハイフンハイフンバインドスペース0000。

この8000ですね。

STSでプロジェクト名ですね。

HELLOWORLDプロジェクト。

盗撮WSGIと入れてください。

これでENTERを。

HELLO

ちょっと違いますね。

このオールドプロジェクトですね。

はいプリンタを押していきます。

で、これでですね。

リスニングということで、これこの後、ニコ音がですね。

IPアドレスに入れられたアドレスから情報を持ってきて、それを次のWITHにファイルにですね。

流し込むという処理をしていますということをこれを示していますで、これで設定完了しましたので、ここでですね。

アクセスをしていきましょう。

ブラウザに戻ってきて、先程のですね。

このIPアドレスを出てきます。

45度と76とと今日と133と。

はい。

これでですね。

ジャンゴの画面が出てきました。

これはですね。

外部で書いたVPSのIPアドレスにアクセスをして、そこでジャンゴが無事にインストールできているということをこれで確認することができます。

で、正直でこれ結構難しいところが多くてですね。

あまり細かい理由についてはですね。

だんだんと分かってくる部分とあとは最後の。

VPSデプロイ編でですね。

お話をしていますので、今はですね。

まず、このジャングルの使い方に慣れるという意味ではこれから。

VPS借りてる方はLANサーバーをする代わりにこのようにですね。

ぐにこんを使ってアクセスをしていくということを。

を実行していってください。
************************************************************
18. localostとは？
************************************************************
はいで、これで無事にジャンゴのサーバージャンゴの中に備わっているサーバーを立ち上げることができたんですけれども、ここでですね。

ちょっと先程ここのURLにですね。

127ドット0。

ドット0ドット1コロン8000というURLを入れたんですけれども、これこれが何なのかと何でこれを打って、この画面が出たのかという

のがよくわかんないという方もいるのかなというふうに思います。

ですので、ここのちょっとこう一人なら001っていうのが。

8についてお話をしていこうというふうに思います。

この127ドット0ドット0ドット位置っていうのは何かというとですね。

これLOCALHOSTという別名もあるんですけれども、一言で言うとこれはですね。

自分のパソコンのことを示しています。

で、ウェブサーバーっていうのは何であれあるどっかにあるパソコンとか機械ですね。

その機械が世界中にあって、そのそれぞれのパソコンがですね。

IPアドレスというこう1位他と干渉し合わないような住所ですねっていうのが与えられていますですので。

ええヤフーでもそうですし、グーグルでもそうですし、一個一個のサイトっていうのは。

IPアドレスが付与されていますで、そのIPアドレスにリクエストを投げることによって、そのウェブサーバーからデーターを持ってくることができる

んですけれども、この127001っていうのをですね。

特殊な。

IPアドレスでして、これは全世界に公開されていなくてですね。

こう身内と言うか、自分の中だけで参照できるIPアドレスになります。

ですので、他のブラウザと言うか、他のパソコンのブラウザから12700位置というのを得たらですね。

そのほかのパソコンのことを示しているだけで、この自分のパソコンに対しては他のパソコンからはアクセスができませんで、ここにアクセスし

て何で先程のJANGOの映像が出たのかというとですね。

この自分のパソコンの中にJANGOのデータをインストールしたからですね。

ですので、この自分のパソコンのブラウザからですね。

自分のパソコンに対してアクセスをすることによってJANGOの。

元の映像っていうのが表示されたということになります。

で次にですね。

このコロンの先に8000というのがあるんですけども、これはポートと言われてまして、このウェブサーバーいろんなウェブサーバーのみならずです

ね。

色んな機能を持った機械っていうのはまあ、インターネットに繋がってパソコン同士コミュニケーション取り合ってるんですけれども、このパソコンが持って

いる機能っていうのはウェブサーバーだけではなくてですね。

例えば、データーベースサーバーとか色んな機能を持っていますで、色んな機能を持っているものがですね。

他のパソコンからこのリクエストっていうのは何に関するリクエストなのかというのをですね。

分かりやすくするっていう目的もありますし、後はセキュリティー上ですね。

あるパソコンが違うパソコンからですね。

もうこうどんな情報でも受け入れますよということをしていると、セキュリティー上もよくないということでウェブサーバーをですね。

こう立ち上げる時に8000番ポートの番号をですね。

今回8,000万にしたんですけども、8,000万という番号を指定することができます。

で指定すると、逆にこのブラウザからアクセスする時にはですね。

この8000番のポートにリクエストを投げますよという。

指定をしないと、このウェブサーバーっていうのはレスポンスを返してくれないという。

風になりますで、実際のウェブサイトはですね。

この8000とかいちいち打ち込まないんですけれども、これはデフォルトで80万で通信しますよということがですね。

暗黙の了解と言うか、そういうルールが決まってるからなんですね。

ですので、実際のWEBサーバーのコミュニケーションでもポートというのは使っているということを、ちょっと頭に入れておいていただければなと

いう風に思います。
************************************************************
19.startprojectでできるファイル
************************************************************
はい。
ここからはですね。
STARTPROJECTコマンドを打つことによってできてきたですね。
ファイルの中身について簡単にですね。
概要をお話していこうという風に思いますで、順番に見ていくんですけれども、この上から見ていきましょう。
まず初めにですね。
これユニットPiというファイルがあるんですけれども、このファイルはですね。
PYTHONの範囲になりまして、このユニットPIというファイルをフォルダに入れることによってですね。
このフォルダっていうのはPYTHONパッケージいや、PYTHONのファイルが入っているものですよということを認識させることができるというもの
になってきますでえーとですね。
ちょっとセッティングスロートPiを飛ばしましてですね。
で、URLスロットファイルもこの次でですね。
詳しく説明をしていきます。
で、このWITHKEYというファイルWSGIという書いてあるファイルなんですけれども、これはですね。
WEBサーバーとあと、アプリケーションURLドットファイルとか、そのファイルが入っている場所のですね。
こう間の。
あのこう仲介役のような役割を担っているファイルになりますで、この辺はですね。
ちょっと後程。
また、改めて簡単にその流れを御紹介するんですけれども、ウェブサーバーだけじゃなくてですね。
このDJANGOを動かすためには、その間にちょっとファイルを入れる必要があるということを、ちょっとこう頭に置いていただければなという風に
思いますで、今回ご紹介するものの中でですね。
一番のメーンがこのセッティングスロットファイルということになります。
セッティングスロットPIファイルの中身について見ていこうかなというふうに思います。
で、上から順番に見ていきましょうでですね。
これ、結構、抽象的な説明が結構多くなっちゃうのかなという風に思っていまして、なかなかちょっとイメージを開きづらいかなという方も
多いのかなというふうに思いますですのでですね。
ここはですね。
ちょっとさらさらっと聞いていただきながらですね。
こんなもんなのかなということでですね。
ちょっと頭の片隅に置いておいていただければいいのかなというふうに思います。
はい。
では、早速上から見ていきましょう。
一番上ですね。
これインポートOSとあるんですけれども、これはPYTHONモジュールですね。
PYTHONのOSモジュールをインポートしてきていて、これを使うことができるようにしてるというものですねで次ですね。
そのOSまさにこれ使われてるんですけれども、ベースDIRというものがありまして、これが何かというとですね。
これは今後PYTHONじゃなくてください。
DJANGOで色んなHTMLファイルとかCSSファイルを作っていくんですけれども、そのファイルをですね。
どこかに保存する必要があります。
で、どこかに保存する必要があるんですけれども、その保存する時にですね。
どこに保存してるのかということを、DJANGOに伝える時にその伝える基準となるような場所のことをベースディレクトリーというふうに言います
で、このベースディレクトリーはですね後程。
また詳しく一つちょっと講座というか章を割いてですね。
説明をしていっていきますので、このBASEディレクトリーが何かということは後ほど。
ちょっと詳しく学んでいただければなというふうに思います。
はいで主催していきましょう。
はい次ですね。
これシークレットキーというのがあります。
で、これは何かというとですね。
これDJANGOでプロジェクトを作る時に一個一個作られるものなんですけれども、これは実際の開発において特に意識することはありませんので、
DJANGOでプロジェクトを作るとこういった。
そのセキュリティ上の秘密の鍵が作られるんだなということを、ちょっと頭に置いておけばいいのかなというふうに思います。
はい、次ですね。
これデバックに関してですで、デバッグはですね。
今TRUEってなってるんですけれども、これはTRUEという設定とFALSEという設定をすることができます。
で、デバッグイコールTRUEとホルストンの違い、何かというとですね。
エラーが出た時にブラウザに表示させる内容が変わってきます。
デバッグイコールTRUEですと、このエラーのですね。
中身というか理由が結構細かくバーッとこうブラウザ上に表示させてくれるような感じになります。
その一方でですね。
デバッグイコールFALSEにすると、そういった細かいエラーの情報は出てこないという形になります。
ですので、このデバッグイコールTRUEっていうのは開発中ですね。
本番環境ではなくて、実際に開発してる時はデバッグイコールをTRUEにして、エラーが来たら何でそのエラーが出たのかという理由をちゃんと
教えてもらうというような形にしていきますで、その一方でですね。
ちゃんとこのウェブサイトを公開した場合は、デバッグイコールFALSEにしなければですね。
不必要な情報を知らない人に与えてしまうとなってしまいますので、公開するときはFALSEにするということを頭に置いていただければな
というふうに思いますで次ですね。
このデバッグでも関係してくるんですけれども、アラウンドホストということでこれはですね。
AXEジャンゴが受け取る元となるサーバーのIPを設定していきます。
これはですね。
これから外部のサーバーVPSを借りてですね。
そこの中で、WEBサイトのいろんな作り込みをしていくんですけれども、その外部で借りたウェブサーバーのIPアドレスを入れていくという形
になります。
で、これはですね。
デバッグイコールトゥルーですと、そういった全世界の公開はしていなくて、手元でやっているだけですので、特に設定はしなくていいんです
けれども、デバッグイコールFALSEにするとですね。
ここの設定をして、ちゃんと指定したサーバーからだけのアクセスを受け付けますよという。
設定をしていく必要があるということを、頭に入れていただければなというふうに思いますで次ですね。
これインストールとアップスというのがあるんですけれども、これはですね。
DJANGOのプロジェクトを作っていくときにですね。
いろんな機能ごとにアプリを作って、その機能ごとに作ったアプリで細かいコードの書き込みをしていくっていうのが一般的な開発の流れになり
ましてで、このアプリのですね。
仕組みとかっていうのについては、今回のこのHELLOWORLDの後半でお話をしていきますので、そこでちょっとこう理解を深めていただければな
というふうに思うんですけれども、色んな機能をですね。
細切れに分けていて、その分けていた機能をそれぞれここでこうDJANGOに認識させているという。
イメージを持っていただければなというふうに思います。
例えば、この上のアドビっていうのをですね。
管理画面ですね。
管理画面に関する機能がまとめられたものという形になります。
はい次ですね。
ミドルウェアというのがあるんですけれども、これは何かというとですね。
何か処理が行われる時に間に入ってですね。
何かしてくれるものというようなイメージを持っていただければなというふうに思いますで、例えばですね。
この中身1個見た方がわかりやすいかなというふうに思いますでこうセッションとあるんですけれども、セッションていうのはこうログインしたユーザー
がですね。
ちゃんとログインした状態を保てるように、ブラウザで記録していくような仕組みになるんですけれども、そういったセッションを管理するためのミドル
ウェアってのをここに書いてありまして、こういったミドルウェアを使うことによって実際にですね。
こうDJANGOがアクセスをもらった時に何かこのセッションミドルが何かセッションに関する処理をごちゃごちゃとして、このセッションの情報をちゃんと
保持できるような仕組みを整えているというようなイメージを持っていただければなというふうに思いますで今回ですね。
このDJANGOの構造においては、このセッションミドルウェアではなくて、このミドルウェアっていうものは結構上級編というかですね。
基本的な開発においては特に必要ないというか。
今回ご紹介するアプリにおいては、特にここの実装は進めていきませんので、ちょっとこんなものもあるんだなということだけ。
ちょっと頭に入れていただければなというとに思います。
はい次ですね。
はいルートURLコンプということで、これが何かというとですね。
ブラウザで何かURLを打つとですね。
DJANGOが揃う受け取るんですけれども、1にですね。
その受け取る場所を指定していますで、これはHELLOWORLDプロジェクトのこのフォルダの中のURLファイルですね。
こうHELLOWORLDプロジェクトを今スタートプロジェクトで作ったこのファイルをまずは呼び出しますよというような指示をここでしてあげています。
はい、次ですね。
テンプレートですねでテンプレート何かって言うとですね。
これはざっくりとしたイメージですと。
HTMLファイルとか静的ファイルですね。
特に。
HTMLファイルをどこに入れるのかという指定をしていくような場所になりますで、今後ですね。
ベースディレクトリーの設定をして設定ではなくてですね。
説明をしていくんですけれども、その説明をした後に、ここの中に実際にコードを書き込んでテンプレートが入っている。
フォルダーはどこですかというような指示をしていくような形になっていきます。
はい、次ですね。
これ水着アプリケーションとあるんですけれども、これはですね。
その水着のファイルが入っている場所ですね。
WEBサーバーと実際のDJANGOのアプリケーションの間の取り持っているWITHファイルがどこに入ってるのかということを、ここで指定して
あげています。
はい、次ですね。
データベースでいうとあるんですけれども、データベースに関してはこの次の講座ですね。
POODLEリストのところで詳しく説明していくんですけれども、このジャングルにおいてはですね。
たくさんのデータは使っていきますので、データベースを使ってそのデータを管理していくという形で進めていくんですけれども、そのデータベース
はですね。
このDJANGOの中に入っているというよりは、ほかの場所でデータベースサーバーとかと接続をして設定をしていたりとかですね。
これはデフォルトではDJANGOが準備してくれているデータベースからなんですけれども、いずれにせよ、データベースがどこにあるのかということ
を指定して、そのデータベースに接続をしてデータベースの管理をしていくということ。
必要がありますので、そのデータベースに関しての設定をしていくというのが、ここのデータベースヘッズというところの中身になります。
はい次ですね。
大洲パスワードバリーデータですということがあると書いてありますが、これはですね。
パスワードのバリデーションですね。
パスワードを何かユーザーが登録する時にこう文字が短すぎたりとかですね。
あとはその英語を入れてくださいとか、数字を入れてくださいとか、そういったいろんな条件を追加していくことがあるかなと思うんですけれども、
そういったバリデーションパスワードのバリエーションの管理をここでしていくようなものになります。
はい。
これ次ですね。
いろんなものがあるんですけれども、ここは時間とか言語とかそういったものの設定をしていくのになりますで、今これ英語になっていたりと
かですね。
このタイムゾーンは東京じゃないんですけれども、こういったのを変更することによって実際のですね。
言語を変えたりとか、あとはどこの時間でいろんなデータを扱っていくのかというような設定をしていくことができるようになります。
はい、最後ですね。
これスタティックURLというのがあるんですけれども、ここはですね。
ここから色んなことをこれから具体的には第1番最後ですね。
一番最後の社内SNSアプリのところでいろいろ書いていくんですけれども、ここはですね。
CSSファイルとかあと画像ファイルですね。
そういったものを保存される場所とか、あとはどういったURLで呼び出すのかとかですね。
そういった設定をしていく場所になります。
ですので、今後ですね。
こう色んな設定をこれからしていくとかですね。
SNSアプリを作っていく時にここをいじっていくんですけれども、そういった設定をここでやっていくんだなというようなイメージを持って
いただければなというふうに思います。
はいでこれがですね。
セッティング外のざっくりとしたお話になるんですけれども、ここはですね。
まあ、結構情報が多くて頭がパンパンになっちゃうのかなという部分もあるかなと思いますので、まずはざっくりとしたイメージだけ本当に持っ
ていただければいいのかなというふうに思いますで、次はですね。
ここからちょっと個別の大事なファイルの1個であるURLずっとですね。
このファイルについて詳しくちょっと中身を見ていこうかなというふうに思います。
************************************************************
20. urls.pyファイル
************************************************************
次にですね。
URLドッドファイルについてお話をしていこうという風に思います。
URLドットファイルっていうのはですね。
先程の味噌ラーメンの例で言ったところのこうオーダーを受けてですねで、そのオーダーに応じて料理を作りなさいという。
指示を出すところというお話をしました。
味噌ラーメンであれば、味噌ラーメン大盛りという注文を受けたら、味噌ラーメン大盛りという注文を受けてで、大盛りのラーメンを作ってくださいという
指示を出すということですねで、これを実際の行動を見ながらですね。
どういったことをやっているのかという点について見ていこうという風に思いますで、DJANGOのサイトの中のですね。
URLドットPIというファイルの中身を見ていきましょうで、このファイル。
これデフォルトで元に書かれてるものなんですけれども、上の方にあるこの長い文章があるんですけれども、これはですね。
このURLとファイルをですの取扱説明書みたいなものですね。
で、ここに色々書いてあるんですけれども、これを見ただけではなかなか理解するのも難しいと思いますし、これから細かいところをちゃんと説明
をしていきますので、ちょっとこうごちゃごちゃっとしちゃうので、この部分は消していきますで、このURLスロットファイルでですね。
意識したいというか大事なところっていうのがこのURLパターンですというものですで、ここのパターンに応じて色んなこう注文を受けて、次の
指示を出すということをしていく。
注文をリクエストを受けてで、次の指示を出す。
その指示書みたいなものが、このURLパターン図というものという風にイメージしていただければなという風に思います。
で1日ですね。
これ何も私追加追記してないんですけれども、1から書かれてるものとしてですね。
このURLパターン図の中にPATHで、アノミーンとADD民青というAヘルズというものがあるんですけれども、この2つの文字列の中でです
ね。
この前半ていうのが実際に受け取るリクエストのことを示していますで、この次のですね。
アドミンサイとURウェルズっていうのが次に出す指示のことを意味しています。
ですので、ここの場合はドメインというリクエストを受けると、このアドビにサイと言われる。
これ実はですね。
これは管理画面を出しなさいという。
指示なんですけれども、そういった指示を出しているということになりますですのでですね。
この設定に従ってドメインというリクエストを投げれば、管理画面が出るはずなんですね。
ですので、実際にですね。
管理画面をこれで出してみようという風に思います。
ただですね。
これちょっとこの管理画面に出すためにはですね。
ちょっと作業をする必要がありまして、これは後でちゃんと説明しますので、次の章ですね。
次のツールアプリのところで説明していきますので、ここではあまり意識をしなくても。
大丈夫です。
ありがとうございますはい。
LANサーバーしてみましょう。
卵サーバーを押して。
サーバーを立ち上げてで、実際にURLをリクエストを投げるんですけれども、先程アドミンというのがありましたので、実際にこのアドミンという
URLを投げてみましょう。
そうするとですね。
このようにDJANGOアドミニストレーションという画面が出てきましたで、これがまさにですね。
管理画面に入るためのログイン画面ですね。
で、今はそのユーザーとしてログインしていないので、このログイン画面が出てくるんですけれども、いずれにせよ、ちゃんと管理画面にこのアド
ミンというURLを入れることによって管理画面に入ることができたというのが一つ大きなポイントとして意識していただきたいなというふうに思います
でですね。
ここアノミーというのがあるのでは、土民というリクエストを投げてちゃんと上に画面出たんですけれどもじゃこのあどみんていうのを変えると
どうなるのかというのをちょっと見てみようという風に思います。
例えばですね。
今回、このHELLOWORLDプロジェクトと言うものを作りますので、HELLOWORLDという。
風に言って整備してあげますで、その上でもう一回アクセスをして、このあどみんという言われるままENTERをしてみます。
そうするとページの外ファンドということで、この何て言うんですかね。
JANGOは受け取ったリクエストがですね。
この元々書かれているURLパターン。
その中にどれにも合致しなかったので、次の指示を出せませんでしたよ、というエラーを出してくれているんですね。
これは。
今、このドメインをHELLOWORLDに変えたので、HELLOWORLDと打ってあげましょう。
そうするとHELLOWORLDなんですけど、ちゃんとこう管理画面に写ってると言うことが確認できます。
ですので、URLをどのように変えてもですね。
何て言うでしょう。
このURLパターン図で設定をすることによって、ちゃんと次の指示を出すことができるということを頭にまず入れていただきたいなという風に
思います。
で、これがURLイズデッドファイルなのですね。
使い方というか、ざっくりとしたイメージになります。

************************************************************
21. views.pyファイル
************************************************************
はい。
では、次にですね。
VIEW都度っとPIファイルについて見ていこうというふうに思いますでビューズドット。
Pi。
ファイルっていうのをですね。
このラーメン屋さんの例で行くと、ラーメン味噌ラーメン作ってくれというリクエストを受けて、そのリクエストに応じて具材と丼の器を持って
きてで、それを組み合わせてリターンとしてRESPONSEとしてブラウザに返してあげるということをしていました。
で、それの仕組みをですね。
実際にコードを書きながら、イメージを膨らませていこうという風に思いますで、ここ見るとですね。
ビューズどっとファイルっていうのはありませんので、実際に作っていきましょうで何でですね。
ビューズドッドファイルがデフォルトと言うか元にないのかという点についてはですね。
この次のツールアプリのところでお話をしていきますので、まずはですね。
こうあんまり気にせずにファイルを作っていって、実際にHELLOWORLDという表示を出していこうという風に思いますでタッチビューズドット
POLと。
鹿野すみません、これ作る場所を間違えてしまいましたね。
このビューゾッドPDFファイルは、URLゾッドファイルと同じ場所に入れる必要がありますので、はい移動させてみました。
はいでこれからビューとbyファイルの編集をしていくんですけれども、ビューどっとファイルがやっていることっていうのをですね。
ざっくりとまだちょっとまだちょっと抽象的なところからお話をしていこうという風に思いますで、何でこのお話をするかっていうとですね。
この話をしないままコードを書いていくとですね。
だから、細かすぎて何やってるのかよくわかんないということになってしまいますので、これ結構大事ですので、ちゃんと聞いていただければなという
ふうに思いますで、ビュースポットPCファイルがやってることっていうのは何か。
これはDJANGOがやっていることにも通じてくるんですけれども、このDJANGOというプロジェクトが何をやっているのかというと。
一言で簡潔に言うとですね。
リクエストを受け取ってリクエストオブジェクトを受け取ってレスポンスオブジェクトを返すということをやっています。
それがミューズドットPRがやってることですねで、もう少し細かい流れでいくと、このサーバーがあって、先程の水着の説明もさせていただい
たんですけれども、このサーバーとよりその間に入っている水着ファイルこのアプリとDJANGOとサーバーをつなぐものですね。
そこからリクエストオブジェクトというものを受け取ります。
言われるぞと言われる上で受け取ったリクエストオブジェクトですね。
その次の指示を出した場所に、またそのリクエストオブジェクトを投げます。
で、リクエストオブジェクトを受け取ったミューズゾッドPiはですね。
その中で何か色々ぐちゃぐちゃとやってでレスポンスオブジェクトを作って、そのレスポンスオブジェクトをこの水着に返してあげるんですねで、この
流れを知っているっていうのが、このDJANGOの中でやっていることになります。
ですので、これからコードを書いていく時にやることというか、やらなければいけないこと。
最低限しなければいけないことっていうのは、リクエストを受け取るということとレスポンスを返すということをやらなければいけませんですので、ミューズ
ドットファイルの中でもですね。
リクエストを受け取ってレスポンスを返すということをやっていきます。
んで、先程の画面に戻ってですね。
実際にミューズドットbyファイルの編集をしていきましょう。
で編集をする前にですね。
このURLドットファイルを使ってですね。
このURLドットファイルで何かリクエストをもらった時に、HELLOWORLDを表示させるような指示を出す流れを作っていきます。
で、流れはですね。
先程この管理画面ですが、これADDMEANに戻しておきます。
この管理画面で指示がされているような同じような流れで作っていきます。
これも何でもいいんですけれども、HELLO例えばHELLOWORLDとします。
でHELLOWORLDを押してで、この後に何を書くかなんですけれども、このビューズドットファイルの中にはですね。
大きく起きるとファンクション関数とメソッドと、あとはクラスこの2種類ですね。
2種類のどちらかを書いていく必要があるんですけれども、今回はファンクションをベースにした構成にしていきますので、ファンクションを書い
ていくんですけれども、その名前っていうのをですね。
もうまさにこのこれからビューズ、どっとファイルの中で指定するファンクションの名前を書いていきます。
でこれから付ける名前を、例えばHELLOWORLDファンクションとしましょう。
で、これ独居です。
FNの場合は、この名前をそのまま指定してあげることによって、このファンクションを個々のURLを受けると、この次のHELLOWORLDファンクション
を呼び出しますよという。
指示をすることができます。
ただ、このHELLOWORLDファンクションがどこにあるのかというのがわからないとこのURLずっと。
Byファイルは困ってしまいますので、どこにあるのかということを指示してあげます。
CHROMEVIEWインポートHELLOWORLDFNと言うことで、同じフォルダーの中にあるビューズドットPIFファイルの中からHELLOWORLDファンクション
というファンクションを呼び出しますよという指示を出しておきます。
で、ミューズドットbyファイルに戻りましょうで先程ファングループですか来ません。
HELLOWORLD。
ファンクションという名前を付けましたので。
まず最低限のこの関数の形を作りました。
で、先程の話にちょっと戻っていくと、このビューずっとPi。
ファイルっていうのはリクエストを受け取ってレスポンスを返すというお話をしました。
ですので、この中で関数の定義をする時にはですね。
リクエスト引数としてリクエスト受け取る人がおりますでこれ。
リクエストという名前じゃなくてもいいんですけれども、必ずそのリクエストをもらってますので、リクエストという名前が分かりやすいかなということ
で、基本的にはリクエストという名前にしますで、これ何も入れないとですね。
何も受け取ることができないので、またこれもエラーが出てしまいますので、注意するようにしましょう。
でリクエストを受け取ってですね。
その後にリターンをするんですけれども、リターンをするのは何かって言うと先ほどお話ストーリーですね。
レスポンスオブジェクトを作って、それをリターンしてあげるということをする必要がありますでですね。
レスポンスオブジェクトを返す方法っていうのがたくさんあるんですけれども、今回は一番シンプルな方法についてご紹介をしようという風に思いますで、
それは何かというとですね。
HTTPDRESPONSEと言うクラスを使う方法ですね。
HELLOWORLDとでこのHTTPDRESPONSEというのは、DJANGOで予め備えられているクラスなんですけれども、そのクラスからオブジェクト
を作って、そのオブジェクトを返してあげるということをしていきます。
ですので、もう少し分かりやすい例でいくとですね。
リターンオブジェクトが。
でリターンリターンOBJECTとした方が分かりやすいかもしれないですね。
で、これはこのクラスから新しくオブジェクトを作って、そのオブジェクトを返してあげるということをしています。
で、このときHTTPSポンスっていうクラスを使ってますので、これをどこにあるのかということを指示してあげる必要があります。
で指示する時にですね。
実際に今回はフロム。
全5000TDP。
という形で、このDJANGOTDPモジュールの中のTDPRESPONSEというのをインポートしてますよと指示してるんですけれども、こういった
のをですね。
一個一個どういうふうに学んでいくかしていくか覚えていくかということを簡単にちょっとお話ししたいんですけれども、これはですね。
端的にはもうネットを使って調べて、ググってやっていくというのが一番早いのかなというふうに思います。
で例えばですね。
TTPレスポンスの場合は、TTPレスポンスとDJANGOとしますで、私の場合はですね。
デフォルトでこれ英語のサイトが出やすいような設定をしているんですけれども、何でそうしてるのかって言うと、このDJANGOっていうのは
日本語で検索してもなかなかこのオフィシャルサイトがひっかかってこないんですねでですので、こう私の場合は英語で検索をした上でで、この
URLのところにですね。
エンイングリッシュってあるんですけれども、これをJAとするとですね。
同じサイトの日本語版のページを出してくれますので、そうすると結構検索がしやすいのかなという。
風に思いますで、この中で検索コントロールを押すとですね。
このブラウザの中の指定したものを検索することができますので、これでTTPレスポンスという風な行動を打ってあげますで、その中でこの
クラスがありますよっていうのも分かったりするんですけれども、これを見ていくとどこかにですね。
どういう風にインポートしていくのかという情報が出てきたりするんですけれども、ここは載ってこないですねですので。
違うURLに行きます。
HTTPDRESPONSEとしてあげるとありました。
ここにフロムDJANGOHTTPD。
インポートFTPレスポンスという表示がありました。
ですので、こういうのを見ながらですね。
HTTRESPONSEを使うためには、このDJANGOHTTモジュールから持ってくる必要があるんだなというのを一個一個調べながらやっていく
というのが一番早いのかなというふうに思います。
はいでは戻りましょうで、これで実際にリクエストをこの日はですね。
リクエストもオブジェクトを受け取ってでレスポンスオブジェクトを返すという仕組みを作ることができました。
で、その中身で返すのはHELLOWORLDという文字列を返していきますよという指示を出しています。
ですので、これでHELLOWORLDというURLをリクエストすることによって、HELLOWORLDファンクションを呼び出してで呼び出された。
これがですね。
HELLOWORLDというものを返してくれるはずですですね。
これでサーバーを立ち上げて、実際に表示を見てみましょう。
フランスサーバーをしてサーバーを立ち上げました。
で先ほどのページからですね。
HELLOWORLDといってみます。
はい、そうするとHELLOWORLDという表示が無事に出たということが確認できました。
で、これ普通にHTMLファイルに打ち込んだ方が早いと思う方も多いと思うんですけれども、これまで横を表示するだけでも結構大変だった
んですけれども、ここの表示をですね。
うまくJANGOの仕組みを使って出すことができたということで、まず一つ大きな関門をクリアしたということが言えるのかなというふうに
思います。
で、このHELLOWORLDという表示だったんですけれども、これはですね。
例えばこのように。
一番という風にしていくと。
どうなるかというとですね。
はい。
このようにですね。
こう文字を大きくして、ワンタグ実際に見てみましょうはい。
エイチワンタグで囲まれたHELLOWORLDという文字が表示されました。
で次にですね。
ちょっと例えばリターンとした何にしましょう。
何も返しませんよという指示を出してあげます。
更新をしても、ここにエラーが出てるんですけれども、このエラーを見てみるとですね。
このビューHELLOWORLDPROJECTMUSEHELLOWORLDファンクションこのHELLOWORLDファンクションというのは、鈍痛リターン案TTPRESPONSE
とおぼしき。
と言うことで、このファンクションていうのがですね。
HTTPSボールレスポンスオブジェクトを返しませんでしたよ。
その代わりに何というものを返しただけですよという。
エラーを出してくれてますね。
つまり、これ丁寧にですね。
ちゃんとそのDJANGOでやらなければいけないTTPレスポンスというのを作っていませんよということで、そういったエラーを出してくれている
ということになります。
ですので、これからですね。
いろんな形でウェブサイトの見た目を整えていくんですけれども、基本としてやらなければいけないことは、リクエストを受け取ってレスポンスを返すという
ことをしなければいけないということを、改めて頭の中に置いておいでいただければなというふうに思います。
いずれにせよですね。
元のHELLOWORLDを無事に出したということで大変お疲れさまでした。
まだまだこれからたくさん続いていくんですけれども、一旦ちょっとこう休憩を挟みながらですね。
また、次の新しいステップに勉強を進めていきたいというふうに思います。

************************************************************
22. Class Based View
************************************************************
はい。
次にですね。
クラスベースとビューというものについて、学んでいこうという風に思います。
先ごろですね。
作ったものっていうのは、ファンクションベースとビューというふうに呼ばれていまして、その関数を定義することによって、そのビューを定義する
ということですね。
で、これに対してクラスベースとビューっていうものがあります。
で、これは何かっていうと、クラスを使ってビューを作っていくということになりますで、この2つですね。
作っていく中で、だんだんイメージが沸いてくると思うんですけれども、ここも一つ。
ちょっと例えを使ってクラステーストビューが何かということについてお話をしようという風に思いますで、この例えですね。
ちょっと若干自信があるかと言われると、何とも言えない部分はあるんですけれども、イメージは置くかなというふうには思ってましてで、ファンクション
ベストビューっていうのはですね。
イメージとしては、台所の中でも古い昔ながらの台所とで、それに対してクラスベストビューっていうのはですね。
システムキッチン豪華な最新の設備が整ったシステムキッチンとこのような違いがあるというふうに言えるんじゃないのかなという。
風に考えています。
これどういうことかと言うとですね。
クラスベストビューの場合はですね。
最新の設備が整っていて、これは何かって言うとこう。
特に色んな細かい中身が分かっていなくても、ボタンを1個押すだけで、全自動で色んな料理をしてくれるようなイメージですね。
で例えばですね。
こうっていうボタンを押すと、そのボタンを押された何か。
そのオーブンみたいなものが自動的にその中の食材の温度を検知してですね。
理想的な焼き上がりになるように、その料理を作ってくれるとで、そうすると何が便利かって言うとボタンを押すだけでおいしい料理を作って
くれますので、あまり細かい温度管理について知る必要ないということが便利だという風に言えます。
ただ、1の色んな細かいボタンの押し方とか設定ですね。
そのオーブンの温度とか、そういったものも設定するとなると、ちょっとこう1に覚えることがあって、大変かなというようなイメージですで、
これに対してファンクションベストビューっていうのは、その最新の設備がない器っちゅうんですね。
ですので、例えば肉を焼くっていう場合にでもですね。
オーブンも何もありませんのでフライパンで。
ちょっとずつ表面を見ながら焼き加減を見ながらですね。
火の具合を調整していくということが必要になってきます。
でこれはですね。
一個一個細かく調整をしていかなければいけないので、大変といえば大変手間がかかると言えば手間がかかるですけれども、その一方で細かい
微調整がしやすいというようなメリットがあります。
まあ、焼き加減とか火加減とかっていうのは、自分の目で見ながらですね。
確認することができますので、それに対してクラスベストビューの場合は、オーブンの中に入れちゃえば中がよく見えないとちゃんと焼けてるのか
分かんないというような不安があるんですけれども、ファンクションベースとビューの場合はそういうことがないということで、こう抽象的にという
か機能をある程度発展させて余り。
細かい中身の指示をしなくても、ウェブサイトを作れるようになってるのがクラスベースとビューとで、それに対してやっぱり一個一個細かい指示
をしてあげないといけないけれども、細かい調整とかがしやすいというのがファンクションベースとビューという違いがあると。
いうことをまず頭に入れていただきたいなという。
風に思います。
ですので、どっちがいいと悪いとか、そういったものではないんですね。
それぞれの表示させたい目的に応じて、この2つをうまく使い分けていくということが非常に大事になってきますですのでですね。
クラスベースとビューは簡単に作れるんですけれども、決してそれが優れているということではないということは、頭に置いていただきたいなと
いう。
風に思います。

************************************************************
23. 継承とtemplate_name
************************************************************
ちょっとしつこいかもしれないんですけれども、クラスベースとビューの場合、特にですね。
このリクエストオブジェクトを受け取ってレスポンスオブジェクトを返すということがなかなかこう見え見えなくなりがちでして、何をしてるのかよくわから
なくなりがちなんですけれども、結局ファンクションベースとビューでも、クラスベースとビューの場合でも、リクエストを受け取ってレスポンスを返す
ということをしているということは変わりませんので、クラスWASTEビューでコードを書いていく場合にでもですね。
この点はしっかりと意識しておくと、あまり何してるのか分かんないという路頭に迷っちゃうことが少なくなるのかなというふうに思いますで、
実際にクラスベースとビューでコードを書いていきましょう。
はいで先程のこのVISUALSTUDIOコードに戻ってきました。
で、ここにはですね。
初めにファンクションベースとビューで書いたHELLOWORLDファンクションがあります。
で、これに対してこれからクラスを使ってコードを書いていきますで、具体的にどう変えていくのかというとですね。
クラスベストPSTのクラスですね。
で、この後の名前はファンクションベースのビューの場合と同じで、任意の名前で大丈夫です。
でクラスの場合は、キャメルケースを行ってこう単語の頭を大文字にするのが一般的ですので、今回もですね。
大文字にして作っていこうとじゃHELLOWORLDビューとしましょう。
で、ここでまず何をするのかというと、クラスベースとビューの場合はですね。
テンプレートの継承というのをすることが多い。
ほとんどの場合でですね。
クラスを継承しますで今回ですね。
テンプレートビューというのを継承するんですけれども、この継承というのが何かということについて、簡単にお話をしたいというふうに思います。
ビューの継承というのはですね。
これはぱPYTHONの範囲ですので、あんまりここで詳しく説明するっていうことはしないんですけれども、継承するっていうのはこの継承元です
ね。
継承先になるんですけども、その継承先に入っているたくさんのコードを継承することによって使えるようになるというものが継承です。
ですので、何て言いましょう。
ここのテンプレートビューっていう中にはですね。
たくさんのものすごい複雑なコードが入ってるんですけれども、この中身を一個一個知らなくてもですね。
これを継承するだけで、この継承されたクラスの中で、簡単なコードを書くだけで複雑なウェブサイトを作ることができるという特徴があります
で、今回こうテンプレートビューっていうのをですね。
ここに書いたんですけれども、DJANGOWITHGENERICというモジュールの中に入ってるものになります。
ですので、このテンプレートを継承してきましたので、どっから継承してきたのかと言うことを指示してあげる必要があります。
DJANGO。
ユズGENERICでインポートテンプレートVIEWとしてあげますはい。
これでテンプレートの中身を継承することができましたので、いろんな便利な機能を使うことができるんですけれども、その中でですね。
一つ御紹介することがあります。
でこれからですね。
クラスベースとビューを作っていく中でも、よく使うものが何個かあるんですけれども、その中で一番たくさん使うんじゃないのかなと呼ば
れている。
言われているものがテンプレートネームというものですね。
でここでなり、テンプレートネームイコールHELLOドットHTMLという風に書いてしまったんですけれども、これが何かというとですね。
テンプレートネームっていうのは1の方でお伝えしたみそラーメンの例でいうところの丼何かデータを入れる受皿みたいなものという話をしたん
ですけれども、クラスベースとビューにおいてをですね。
このテンプレートNAMEという名前を指定することでどの。
HTMLファイルを持ってくるのかということを指定することができます。
で、今回はですね。
HELLOとHTMLという名前を指定しましたので、この指定をするだけで、このHELLOWORLDを呼び出すことによって、HELLOドットHTML
ファイルこのファイルを引っ張ってくることができるんですねでじゃですね。
このこのファイルが何なのかというか。
このファイル自体はまだ作っていませんね。
存在していませんですので、このテンプレートNAMEとして指定したHTMLファイルっていうのはこれから作ってあげる必要があります。
で、これから作ってあげる必要があるんですけれども、ではこのHELLOドットHTMLファイルいったいどこに作ればいいんでしょうかというのが
次の疑問として出てきますでですね。
これ答えからお伝えすると、どこでもいいというのが答えになるんですけれども、ただどこに作ったとしても、ここに作りましたよDJANGO
さん。
ここにHELLOHTMLファイルを作ったので、ここを見に行ってくださいねという指示を出さなければいけませんで、その指示書をどこで出す
のかというのがですね。
このセッティングスロットファイルですねで、この中でテンプレートっていうのはこと点について、ざっくりと先ほどお話をしました。
で何かというと、これは色んなテンプレートHTMLファイルとかCSSファイルとかそういったものを入れていくような場所を指定するようなイメージの
場所という。
お話をしました。
で、この中でですね。
まさに何がHTMLファイルが入ってくる場所になるのかというとですね。
ここのBILLSという場所ですで、このBILLSという場所に指定をすることによって、どこにHTMLファイルが入ってるのかという。
指示を出すことができます。
で、指示のし方なんですけれども、この指示をする時に使われるのがベースディレクトリーというのが使われるのが一般的ですねで、このBASE
ディレクトリーが何かということについては、これから次の項目でお話をしていこうというふうに思います。

************************************************************
24. BASE_DIR
************************************************************
それでは、ここからBASEディレクトリーが何なのかということについてお話をしていこうというふうに思いますで、ここで書いたのがですね。
ベースディレクトリーセッティングSWOTファイルに書いてあるものをそのまま持ってきていますで、これ非常に長くてですね。
分かりづらいなという風に思いますので、これをちょっと分解して図で見てみようという風に思いますで、これがベースディレクトリーを分解
したものですねになりますで先程ですね。
大きく分けると、この括弧が3つあるというのが分かるかなと思います。
OSPASTEL、NAMEというのが2つあって、その先にOSパスABSパスとで、その先にファイルというのがありますで、この3つの固まり
を意識しながら見ていっていただければなという風に思いますで、これがDJANGOのプロジェクトの大きなざっくりとした構成と今回必要となる
ファイル群をですね。
ちょっと抜き取ったものになりますで、先程のベースディレクトリーというのは、ここのセッティングスロットファイルに書かれてるものですね。
で、その中でですね。
この先程のベースディレクトリーの指定されたこのOSパスABSパスファイルっていうのが何を意味しているのかというと、このセッティングドット
ファイルが入っている絶対パス、そのパソコンで何て言うんですかね。
相対パスではなくて、1からスタート地点からこのセッティングスロットファイルが入っている場所までのディレクトリをですね。
こう順番に辿っていって、それを全て表示してくれるというものになります。
ですので、まずここでですね。
OSパスASABSパスファイルということで、このセッティングセットPIERROTファイルの絶対パスがまず分かりますということになりますで次にです
ね。
その絶対パスに対してOSパスDIRNAMEというメソッドが実行されてるんですけれども、これが何かっていうとこれはですね。
そのファイルが入ってるディレクトリの名前を示すというものになります。
ですので、このセッティングスロットPIFファイルが入っているフォルダですね。
このHELLOWORLDプロジェクトというフォルダの場所を示しているのが、このOSぱすてるネームというものになります。
で更にですね。
ちょっと戻るんですけれども、OSぱすてるネームっていうのをやった上で、もう一回OSBIRTHDAYUNAMEというものをやっているということが
分かりますで、その最後のOSパスDIRNAMEというのはこれやってるんですけれども、これは何かっていうと、更にこのHELLOWORLDプロジェクト
と言うフォルダから1個上のフォルダを示すために使われてるんですね。
ですので、結論としてはですね。
このベースディレクトリーっていうのはこのSETLINKSドッドファイルが入ってるフォルダの1個上の階層のフォルダを示しているということが言え
ます。
で、このHELLOWORLDプロジェクトが入っているフォルダの1個上のフォルダっていうのが、どういうファイルどういうフォルダかというと、このマネージ
ドットPIファイルが入っているフォルダですねっていうふうに覚えると分かりやすいというか。
イメージは着やすいのかなというふうに思います。
ですので、ベースディレクトリーというのはこのマネージドっとファイルが入っている場所という。
風に覚えてください。
はいでですね。
ベースディレクトリーの場所が分かった上で、次に先ほど設定したDIR図という場所をもう一回見ていきたいんですけれども、このEELSっていう
のはですね。
このベースディレクトリーがある場所にあるテンプレートというフォルダですね。
こういう形で書くことで、BASEディレクトリーにマネージドとPiが入っているフォルダの中のテンプレートという。
フォルダの中にHTMLファイルを入れていきますよという。
指示を知るということになります。
ですので、これを図で示すとこんなイメージになります。
先程の図と比べてですね。
ここにテンプレートというフォルダーが入ってるのが分かるんですけれども、このようにですね。
このマネージドっとファイルが入っているフォルダの中に、新しくテンプレートフォルダーを作ってあげるというような設定を先程のこのDIR図という
ものにですね。
ここのように書いていた。
結果という風になります。

************************************************************
25. htmlファイルの作成とurls.pyファイルの編集
************************************************************
はい。
これでですね。
先程USEDとファイルの中に書き込んだHELLOドットHTMLと言う場所がどこなのかということを指示することができました。
もう一回見直してみましょう。
このビューズドッドPIFファイルの中のHELLOWORLDVIEWとという中で、テンプレートネームというのを決めました。
でこのテンプレートネームはHELLOドットHTMLという名前にしてで、その場所がどこにあるのかというと、このセッティングスロットファイルで
指定したベースディレクトリーの先のテンプ列で、それが何かっていうと、このマネージドットがここですね。
マネージしろと。
Piが入っているフォルダですねで、そこにテンプレートというフォルダーを作って、その中にHTMLファイルを入れていくということになります。
ですので、実際にここからテンプレートフォルダを作って、その中にHTMLファイルを入れていきましょう。
で今いる場所を確認していて。
ちょっと戻りすぎちゃいましたね。
CT。
はい。
今ここですね。
マネージャちろっとファイルが入っているフォルダに入ったということが確認できました。
で、ここで新しくディレクトリーを作っていきます。
ディレクトリを作るためには、MAKEDIRコマンドを打っていきます。
で、MAKEDIRで名前がテンプレートですね。
テンプレートという名前のフォルダーを作っていきます。
で、これでLSコマンドを打つとテンプレートというフォルダができているということが確認できますで、その上でですね。
このCIDコマンドを打ってテンプレートディレクトリーに移動しますで、その上で。
TOUCHHELLOをHTMLと、HELLOというのは新しくファイルを作るというコマンドですね。
でMAKELIVEっていうのはディレクトリを作るんですけれども、タッチっていうのはファイルを作るという違いがありますので、そこはちょっと頭に
入れておいていただければなというふうに思います。
で、タッチHELLOはとHTMLでコマンドを打つと実際に。
ここにHELLOドットHTMLというファイルができていることが確認できます。
で実際ですね。
このフォルダ構成を見ていてもですね。
新しくこのHELLOWORLDプロジェクトという中にテンプレートというフォルダができていて、その中にHELLOドットHTMLと言うファイルができて
いることが確認できました。
で、ここからですね。
実際にコードを打っていくんですけれども、ここで得ていく内容はどちらかというと、本当にHTMLの世界でHELLOWORLDを表示させる
ようなコードを粛々と書いていけばいいということで、今回はですね。
ONEタグで囲ってHELLOWORLDと言う表示をさせるようにコードを書いていきますで、これで設定が無事に誕生したということが言え
ます。
ええ、ざっくりとですね。
流れをまたおさらいしていくとですね。
リクエストをブラサーバーに投げてで、サーバーがリクエストオブジェクトをこのURLとPIに投げてですねで、URTHATPIがさらに次の指示を
ビュースポット。
PIに投げてBEASTPIっていうのはこのHELLOドットHTMLというファイルを持ってきてで、それをそのままこうサーバー経由でブラウザーに
返してあげるというような流れになりますで、これで実際にですね。
サーバーを立ち上げてちゃんと表示されるかということを確認してみましょう。
はい確認する前にですね。
ちゃんとURLドットの設定が完了してるのかというのを見ていきましょう。
先ほどですね。
見たのは、あくまでVIEW図のこのクラスの設定だけでした。
え今回ですね。
新しくこのビューを追加しましたので、そのビューを呼び出すように、このURLとファイルも編集していく必要がありますので、編集していき
ましょうで編集していくんですけれども、基本的な流れは変わりません。
今回ですね。
違う名前にしていくとです。
例えば、HELLOWORLDツーとしましょう。
それをこのURLが打ち込まれると、次にこのビューズドットPIファイルで指定したHELLOWORLDVIEWというクラスを呼び出しますと。
という設定をしていきます。
HELLOWORLDビューと。
でこの時にですね。
そのHELLOWORLDがどこにあるのかというのを指定してあげないといけませんので、HELLOWORLDVIEWを指定してあげます。
でこのときですね。
このクラスとファンクションで1個違うところがありまして、それが何かというとですね。
クラスの場合は、このASビューと言うメソッドを指定してあげる必要があります。
あくまでもクラスからオブジェクトを作って、そのオブジェクトで使ってリクエストを受け取ってレスポンスを返すという流れをしていきますで、これちょっと
細かいところですので、細かいあまりにも詳細なところは突っ込まないんですけれども、クラスと要領クラスからオブジェクトを作ってオブジェクトを作る
ことによって色んな操作をしていくとで、そのためにはこのAZVIEWというメソッドを使う必要があるということを頭に入れておいていただけれ
ばなという。
風に思いますで、これでセーブをすると設定が完了したはずですので、サーバーを立ち上げて実際に画面が出るか確認をしていきましょう。
はい、ここから実際、サーバーを立ち上げていきますで、まずターミナルからですね。
今いる場所を確認しましょうね。
1ドットファイルが入っていることを確認した上で、PYTHONRUBYマネージドと。
By元サーバーとコマンドを打っていきますで、そうすると無事にサーバーが立ち上がりました。
で次にですね。
このブラウザーから。
先ほど指定したHELLOWORLDツーというURLでリクエストを投げていきます。
で、今回この12700イチというのではなくてLOCALHOSTという指定をしたんですけれども、これは同じことを意味しています。
ですので、1270。
01と打ってもLOCALHOSTを取っても出てくるものは変わりませんですので、この辺をお好みでというか。
どちらでも好きな方を使っていただければなという。
風に思いますで、私の場合、結構ローカルホストのが打ちやすいので、このローカルホストを使うことが結構多いです。
はいでこのHELLOWORLDツーと言われる打ち込んだ上で、リクエストをサーバーに投げてあげると。
はい。
このように無事にですね。
HELLOWORLDという表示がされたことが分かります。
で更にですね。
HELLOドット。
HTMLファイルの中では、わんタグでこれを囲ってますのでしっかりとですね。
この文字が大きくなってちゃんとHELLO。
ドット。
HTMLというファイルが呼び出されてるということを確認することができます。
で、もう一回ちゃんとですね。
それができてるかっていうのを確認する為に。
タグの大きさを変えてみましょう。
エイチ5としてみます。
でセーブをしてみてで、もう一度ブラウザを出して更新を押してみます。
すると、今度HELLOWORLDという文字が小さくなりました。
何でかっていうと。
コードを見てみると、15タグで囲まれてエイチONEよりも低いというかですね。
あまり目立たさ目立たせないようにと言うようなコードになってますので、無事にですね。
このHELLOドッとHTMLというファイルが呼び出すことができているということがこれで分かりました。
ここまでで2つのことをやってきました。
で1つ目のことはファンクションベースとビューですね。
ファンクション関数を使って見た目を整えていくということで、2つ目がクラスベースとビューですね。
クラスを使って、WEBサイトの見た目を整えていくという2つのことができました。
で次にですね。
この章の最後としてですね。
アプリを使ってHELLOWORLDを表示するということをやっていきます。
若干そのファンクションベースとビュークラスベースとビューとはちょっと質が違うことなんですけれども、アプリを作るというのもですね。
DJANGOをやっていく中では必ず必要なことですので、そのアプリを作るのがどういうことなのかというところから、実際にアプリを作っ
て、その上でHELLOWORLDを表示させるというところまでやっていきましょう。
はい。

************************************************************
26. アプリの概要
************************************************************
では、ここからですね。
この章の最後ですね。
ここまでかなりたくさんのことを頭に入れなければいけないことがあったのかなというふうに思うんですけれども、最後もう少しちょっと頑張って
やっていきたいなという風に思います。
で最後ですね。
アプリを作るということをやっていきます。
アプリを作るのが何なのかということをですね。
お話する前にこれアプリっては何でアプリが必要なのかという観点で考えていった方がイメージは来やすいかなというふうに思いますので、
実際のですね。
ウェブサイトの例を考えながら、アプリが必要な背景についてお話をしていこうという風に思いますでですね。
これはたくさんのファイルとたくさんのデーターベースがあるということが分かるんですけれども、例えばですね。
これ一つのECサイト何か商品を販売してるサイトのようなものというイメージをまず持ってくださいで、その時にですね。
何かその商品を買うウェブサイトっていうのは、非常にたくさんのページがあるということがですね。
言えますで例えばですね。
どんなページがあるのかというと、これちょっと書いたんですけれども、例えばペイというページ。
これは支払いをする為のページですね。
で当たり前ですけれども、商品を売るサイトですので。
その商品が入っている商品が掲載されているページを作る必要があります。
で、商品を作る商品を掲載するといっても、色んなカテゴリーごとに分けたりとかですね。
検索にちゃんとこう引っかかるような形にするとかですね。
これでもこの中でも色んな機能を付けなければいけないということが分かります。
で更にですね。
細かいキューアンドエーみたいな形でよくある質問と回答みたいな。
これは商品とかと比べると、またちょっと違うようなページになるんですけれども、こういったページもしっかりと準備していかなければいけない
ということが言えますで、その時にですね。
このサイトを作っていく時に、一つのプロジェクトでこのサイトを作っていくということを考えると、非常にごちゃごちゃしやすいということが言える
んじゃないのかなという。
ふうに思いますで、ビュースポットが持ってくる。
このテンプレートのHTMLファイルもですね。
色んな支払いとか商品とかキューアンドエーとかですね。
そういったものに応じてたくさんの種類をですね。
準備しなければいけないとで、その為にVIEWのビュー、ずっとファイルの中に書かれているビューの数もですね。
どんどん膨大になっていくというのもありますし、更にですね。
このビューズドッドが持ってくるデーターですね。
このデーターに関しても、この支払いであったら、ユーザーの情報を入れなければいけないですし、この商品であれば商品の情報が入っているデーター
をデーターベースを作らなければいけないで、このキーワードに関しても質問と回答っていう情報をそれぞれデーターとして持っておかなければいけないと
で、それぞれのデーターっていうのは結構その質が違うと言うかですね。
同じようなデーターにベースの中で入れるという時は、一個一個違うようなファイルを作っていてで、その中で管理をしていた方が
何となく整理がつきやすいというか管理がしやすいということは、結構イメージしやすいんじゃないのかなという。
風に思いますですので、プロジェクトを1個作って、その中で全部のファイルを入れ込んでですね。
WEBサイトを作っていくというのではなくて、それぞれのウェブサイトの中でも機能ごととかですね。
役割ごとにそれぞれ分解して、その分解したものをアプリとして管理していった方が開発がしやすいでみた。
開発をしていく中でも、それぞれ機能ごとに分かれているので、分かりやすいとやりやすいと修正しやすいということがありますので、そういった
背景からアプリというものが存在しています。
でプロジェクトとアプリに整理した図がこのイメージになるんですけれども、この上のですね。
緑色の部分がプロジェクトを示していますで、それに対してこの下の青っていうのがアプリですね。
アプリを示していますで、ここではですね。
ざっくりとそのプロジェクトとアプリの進み分けと言うか、それぞれの役割がどうなのかということについてお話をしていきます。
でプロジェクトというのはですね。
全体的な設定をするとか、その大きな一個一個のプロジェクトとして非常に言葉があるなんですけれども、その全体を統括するようなホールだ
というようなイメージで、それのそのその先に一個一個の機能がぶら下がっているというような形です。
ですので、例えばですね。
このセッティング先ほどお話しした色んな初期設定をする時に使われるファイルですね。
このファイルっていうのはプロジェクトごとにですね。
一個一個同じ設定をしていきますので、これはプロジェクトホルダーの中に1個入っているだけです。
で、その一方でですね。
このプロジェクトにぶら下がっているそれぞれのアプリがあるんですけれども、そのアプリにはそれぞれですね。
HTMLファイル例えばここユーザーの情報を集めているようなアプリであれば、ユーザーに関しての情報を出すためのHTMLファイルで更にですね。
このユーザーに関する情報が入っているモデルデーターベースですね。
そういった情報がこう入っているというようなイメージです。
で、更にこの商品に関しても商品アプリというものを作って、その商品に関するデーターを表示する為のHTMLファイルとあとは商品のデーターが
入っているデーターベースですねで、こういった形で整理をしていくというものです。
で大きなリクエストを受けてレスポンスを返していくまでの流れなんですけれども、ユーザーがですね。
リクエストを投げて、例えばユーザーの情報が見たいですよということをリクエストを投げた時に、まず基本的にはこれも設計のし方にも
よるんですけれども、分かりやすい一般的にやられているものとしては、まずですね。
全てのURLをプロジェクトに入っているURLゾッドPIが受け止めます。
で受け止めた上で、そのURLに書かれている内容にしたがってですね。
それぞれのアプリにあるURLにですね。
更に指示を振り分けるというようなことができますで、これを細かくはですね。
これからやっていくので、ざっくりとしたイメージを持っていただければなという風に思うんですけれども、まずプロジェクトだけ取ったものをアプリ
に振っていくということをイメージしていただければなという。
風に思いますで、ちょっとこう。
ここで選別をされたURLが、それぞれのアプリによって受けとめることが受けとめられてですねで、それぞれのアプリはまた更にそのURLの内容
に応じて、次に見せるビューの指示を出していきます。
で、このた形でやっていくと、何となくこう奇麗に整理がつけやすいなというイメージがんじゃないのかなというふうに思います。
DJANGOを始めのうちに簡単なプロジェクトを作っていく上ではですね。
アプリって特に複数作ったりすることも少ないので、いるかいらないかっていったらなくてもできちゃったりするんですけれども、それでも今後開発
をどんどん進めていく上では、アプリを使って開発するというのは非常に一般的なことですので、今回ですね。
しっかりとそのアプリの内容について、理解を深めていければなという風に思います。

************************************************************
27. アプリの作成と、プロジェクトとの関係
************************************************************
はい。
では、実際にここからアプリを作っていきましょう。
でアプリを作るためには、マネージロットPiコマンドを使っていきます。
ですので、今先程HELLOWORLDといういう。
表示をさせたプロジェクトのターミナルに戻ってきたんですけれども、この中でマネージちょっとPiが入っているフォルダにいることを確認した
上でアプリを作っていきます。
で、アプリを使う作るためにはですね。
コマンドを打つんですけれども、そのコマンドは。
スタートアップと言う名前を。
んんつけます。
で、こうすることによってアプリを作ることができるんですけれども、アプリを作る場合もプロジェクトを作る場合と同じようにですね。
そのアプリの名前を指定してあげる必要があります。
ですので、今回はスタートアップの上でHELLOワールドカップと言う名前にしましょう。
そこでENTERを押すと。
ここにですね。
HELLOWORLDアップというのができていることがわかります。
で、フォルダの構成を見てみるとですね。
この子値ドットが入っている中に、このHELLOWORLDプロジェクトプロジェクトホルダーとアプリホルダーですね。
同じ階層にプロジェクトのフォルダとアプリのフォルダができているということが確認できます。
で次にですね。
このアプリの中に入っているファイルですね。
これをそれぞれざっくりと見ていきたいなというふうに思います。
12ユニットPi。
ですね。
これは先程というかプロジェクトの中に入っているものと同じような意味で、これはPYTHONのモジュールですよということをアピールしている
ことですので、そういったものということですねで、次のADDミンということなんですけれども、これはですね。
管理画面との連携をする時に使われるファイルです。
後ほどですね。
管理画面についてもお話をしていくんですけれども、その時にちょっとこのコードをいじったりしていきます。
ですので、そういったものなんだなというイメージを持っていただければいいのかなというふうに思います。
で次にですね。
このアップスどっとと呼ばれるんですけれども、これはですね。
なかなか今回の講座でも使わないですし、どんどん開発を深くやっていく中で使っていくようなファイルになりますので、それぞれのアプリの設定
をしていくんですけれども、ここはあまり気にしなくてもいいファイルですですので、ちょっとここは飛ばしていきます。
で、次モデルずっとPIファイルですね。
で、これは元のDJANGOの全体像のお話をした時に出てきたモデルスロットbyっていうファイルがあったと思うんですけれども、これは
データーベースを操作する時に使われるファイルですね。
ですので、これはURLだぞと。
PiビューずっとPiモデルずっとPIとこの3つのファイルは非常によく編集をしていきますので、このファイルっていうのはこれからよく加工と
言うかですね。
コードを書いていきますで、具体的にどういったコードを書いていくのかっていうのは、これから一個一個細かくやっていきますが、まず
このモデルずっと。
Byっていうファイルがアプリの中に入っていて、それをデーターベースと連携してるということをイメージしていただければなという風に思います
でテストとbyですね。
これは実際、開発中にちゃんと意図した通りにコードが動いているかというテストをする時に使われますでテストをですね。
この講座では使いませんので、ここもちょっと細かい話し方なんですけれども、とにかくテストをする時に使われるファイルという。
イメージを持っていただければなという風に思いますで、最後はドットですね。
これはプロジェクトフォルダに入っている隆造とbyと同じ役割を持っていますですので、それ。
いう風にこうURL。
ずっと前から受け取ってその受け取ったURLに基づいて、次の受け取った細かい受け取った指示に対してテンプレートとあとはデーターを組み合わせてレスポンス
を返していくという役割をするファイルというようなイメージを持っていただければなという風に思います。
でここでですね。
初めに作ったスタートプロジェクトでできたファイルとスタートアプリを使って作ったファイルですね。
この2つの中を見ながらですね。
初期設定の中で、それぞれのフォルダーの中にも入ってるファイルが入ってないファイルがあるんですけれども、そのファイルがですね。
なぜ入ってるのか入ってないのかということについて、全体像を見ながらお話をしていこうという風に思いますでですね。
そのそれぞれのファイルは入っているんですけれども、その前提というのはですね。
このプロジェクトとアプリがある中で、その設計に従ってファイルが作られているということが言えます。
つまりですね。
一般的なというか、このDJANGOが元々考えている全体の流れとしてはまずプロジェクトがあって、そのプロジェクトの中にあるURLとファイル
がですね。
URLを受け取ってでデフォルトではですね。
このアプリの中にはURLドットというファイルは入っていません。
先程作った中でですね。
このファイルを見ていきたいんですけれども、これがHELLOWORLDアプリで先程作ったアプリですねで、その中を見てみるとですね。
URLドットPIというのは入ってないということが分かります。
で何で入ってないのかというとですね。
1のデフォルトとしてはこのDJANGOはですね。
このプロジェクトでURLを受け取った後にそのままですね。
それぞれのアプリのビューを指示するというようなイメージで作られてる方なんですね。
ですので、ここはですね。
一般的にはただJANGOがデフォルトはそうなんですけれども、一般的にはそれぞれのアプリのURLをいっぱい一回噛ませるというようなこと
をしていますので、まあデフォルトではそうなんですけれども、これから開発していく時にはURL頭ドットPIファイルをそれぞれのアプリの
中で作っていきます。
ちょっと話をかわりまして、ちょっともっと前半の方に戻っていきたいんですけれども、初めにHELLOWORLDというプロジェクトを作っていた時
にですね。
この中でBEAUTYドットPIというファイルを作ったということをちょっと思い出してほしいんですね。
で、初めにこのプロジェクトの中で別府ドットというファイルは入ってなかったんですけれども、何で入ってないのかというと、このビューズという
見た目を整えるファイルっていうのをですね。
それぞれのアプリの中で設定してくださいというような考え方に基づいているので、プロジェクトの中ではこのMUSEドットPIファイルがなかっ
たと言うことが言えます。
でさらにですね。
よくもう少しよく見てみると、このプロジェクトの中にもモデルズどっと入るというのは入ってないんですね。
で、実際にビジュアルスタジオを出して見てみようと思います。
で、これがVISUALSTUDIOCODEのフォルダの構成なんですけれども、このプロジェクトの中を見てみてもですね。
モデルずっとPIというファイルが入っていないということがわかります。
で、それに対してこのHELLOWORLDアプリというのを見てみるとですね。
デフォルトでここにモデルズドットというものが入ってるのがわかります。
つまりどういうことかというと、このジャンゴというのはですね。
プロジェクトの中でモデルをつくってごちゃごちゃとデータを入れていくのではなくて、それぞれ一個一個アプリをつくってですね。
それぞれのアプリの下にモデルスロットPIファイルを入れて、アプリごとにデータベースを作っていくという。
設計に基づいてつくられているということが言えます。
ですので、これからいっぱいコードを書いていくんですけれども、この全体像を見た上で書いていかないとですね。
プロジェクトとアプリこれから結構行き来するんですけれども、どっちで何をやっているのかというのが結構わからなくなってしまいがちですので、
1章に全体像としてこんなイメージを持ってもらえると、非常に頭の整理がしやすくなるのかなという風に思います。
で次からはですね。
このプロジェクトの中にあるURLイズデッドPIファイルからこのアプリの中にあるURLイズデッドPIファイルにつなぎ込みをする必要があるんです
けれども、その繋ぎ込みをどういうふうにやっていくのかということについてお話をしていきます。

************************************************************
28. runserverとviewの設定
************************************************************
はい。
ここではですね。
プロジェクトの中に入っているURLイズデッドPi。
ファイルとアプリの中に入っているURLドットのつなぎ込みですね。
ブラウザからリクエストをもらった時にどういった流れで、プロジェクトからアプリにそのリクエストを流していくのかという点についてお話をして
いきます。
で、ざっくりとした流れというかですね。
どういった流れかっていうのを説明したのがこの図になるんですけれども、ここでですね。
順番に見ていきましょう。
初めにブラウザからリクエストとして、こういうドメインのドットコムでスラッシュニュースドットニューススラッシュプライスと言うリクエストが投げられたと
しますで、そうするとまずこのURLをですね。
プロジェクトのURLゾッドファイルが受け取ります。
で受け取るとですね。
このURLドットファイルは、このURLの中身をこう見ていくんですけれども、その中でこの1の方に入ってきた文字列と合致するものです
ね。
まず、初めにこの前半の部分を見ていきますで、この前半の部分を見ていって合致するものがあった場合にですね。
先ほどまでの例ですと、基本的にVIEWを呼び出していたんですけれども、そうではなくて、このURLのニュースというものに合致したら
ですね。
次にアプリのURLゾッドPi。
ファイルを呼び出すような指示を出していくんですね。
で、その指示を出していくことによって次にですね。
このNEWSという文字列が入っていると、アプリの中のURLとPi。
ファイルが呼び出されるという形になります。
で、次に呼び出されたURLドット。
Piの中のですね。
このURLパターン図の中にはですね。
更具体的にどういったURLに合致すると、どのBEEを呼び出すのかという。
先程までやってきた一般的なURLに合致するとビューを呼ぶという流れの指示をしていきます。
で、ここでですね。
ちょっと意識していただきたいのが、このアプリの中に入っているURLパターン図というのはですね。
ここの文字列っていうのは、このプロジェクトで見てきたプロジェクトで合致した文字列を含まないということですね。
ですので、ここのアプリの中にはですね。
ニューススラッシュプライスというものではなくて、あくまでもプライスという文字列だけを入れるということを頭に入れておくようにしましょうで、
このアプリの中の。
いわゆる頭パターンの中にはですね。
このプライスという文字列があると、次の日を呼び出すという指示を出していくという流れになっていきます。
で、この流れはですね。
実際に行動を書きながら見ていこうという風に思います。
はい。
これターミナルに戻りました。
でターミナルに戻ってですね。
まず始めにすることは、アプリの中にはこのURLスロットファイルというものは入っていないので、それを作っていく必要があります。
ですので、実際に作っていきましょう。
そのためにはアプリに移動していきますで、CHANGEディレクトリーでHELLOWORLDアップ。
とでアプリの中に移動してきました。
でLSコマンドを打ってファイルを見ていくと、このファイル群とこのファイル群が一致していますね。
しっかりとHELLOWORLDアプリのフォルダに入ってくることができました。
で、ここで新しくファイルを作っていきます。
で、ファイルを作るのは先ほどもあったんですけども、TOUCHコマンドを使いますね。
でTOUCHURウェールズ法byと打つことによってはい。
ここに新しくURLゾッドPiというファイルができることが確認できました。
で、これ開くとですね。
何も書いてないコードなんですけれども、ここで実際にコードをですね。
書いていくんですけれども、このプロジェクトの中にあるコードをそのまま持ってきた方がわかりやすいですので、このコードを持ってきます。
で必要じゃないものはどんどん削除していきましょう。
この管理画面ですね。
に関してのパターン、いわゆるパターンも要りませんので、削除していきます。
で、今回はまずはファンクションベースとビューでやっていきますので、クラスベースとビューのやつを削除してしまいましょうで、このアドミン
ていうのは管理画面関係ですので、削除していきます。
でさらにですね。
このHELLOWORLDファンクションていうものとHELLOWORLDビューっていうのを先程、このプロジェクトの中で指定したものですね。
ですので、このアプリの中で同じようにビュー、ずっとファイルの中でこの中身をこう書いていけばですね。
問題なく対応することができるんですけれども、今回はですね。
また、新しく作っていくということで、新たにコードを書いていきます。
IEで、このファンクション関数の名前はですね。
後ほど書いていこうかなと思うんですけれども、まずはURLの繋ぎ込みですね。
これをする必要がありますですので。
プロジェクトの中のですね。
この2行は消してしまいましょう。
でこれから書いていくんですけれども、これからやることは何かというとプロジェクトで受け取ったURLを次のアップルに流すということをやっていき
ますで、その時にどうするのかというと、まずはですね。
この。
これ何でもいいんですけれども、例えばHELLOと言うのにします。
でHELLOというURLが打ち込まれると、次にアプリの中のURLぞとピアを呼び出しますよという指示を出すんですけれども、そのためには
ですね。
インクルードと言うメソッドを使ってあげる必要があります。
で、インクルードとしてHELLOWORLDアプリですね。
HELLO。
このアプリの中のURLホルダーですね。
あごじゃURLドットPRファイルですね。
このファイルを呼び出しますよと言う指示を出してあげますで、この時にやってあげることとしてですね。
インクルードというものを持ってきましたので、インクルードとこれはDJANGO言われるというモジュールの中に入っていますので、このパスという
のと同時に、このインクルードというものを指定してあげる必要があります。
でこれがですね。
URLの繋ぎ込みの設定になりますで、次にアプリですね。
アプリの中のURLとファイルの設定をしていきましょう。
で、先ほどプロジェクトの方でHELLOというURLが打たれると、次のこのUR5は次のHELLOWORLDアプリというアプリの中のURL頭と
PERですね。
これが呼び出されるんですけれども、次にじゃどういったURLになると、次の関数を呼び出していくのかという指示をしていくんですけれども、
これも何でもいいですので、次はWORLDにしましょう。
で、この時、先ほど話をしたとおりですね。
このようにHELLOSLASHWORLDというふうに先ほどプロジェクトの方で持ってきたURLを書いてはいけないということは意識するように
してください。
そうですねあくまでこのWORLDだけでOKですでWORLDというURLを受け取ったら、次にHELLOWORLDファンクションと言うメソッドを呼び出すと
いうことをしていきます。
で、ここでですねじゃ実際にもうHELLOWORLDファンクションこれも違う名前にしましょう。
HELLO例えばHELLOファンクションと言う名前にしましょう。
で、このハローファンクションってのは、これから別府ずっとPIファイルですね。
アプリのビュースポットPAファイルの中に書いていくんですけれども、これから作っていくという前提で、もう早く先に書いちゃいます。
ファンクションとこれビュースポットPIRの中からHELLOファンクションを呼び出します。
呼び出すという意味ですねで、これでセーブをして。
USEDとファイルを見ていきましょう。
でここでコードを書いていきます。
DEF。
ハローファンクションと書いてでリクエストを受け取ります。
でリクエストを受け取ったらリターンレスポンスオブジェクトを返す必要がありますので、今回は初めの方でやったHTTPDRESPONSEオブジェクトを返し
てきましょう。
HELLOという風に打ってあげます。
HTBレスポンスメソッドを使うためには、それをインポートしなければいけないので、HTBレスポンスをインポートしていきます。
HTTPDインポート。
HTTPD。
レスポンスと。
で、ここで流れとしては順番に見ていきますと。
URLスロットの中で、まず1のURLのローカルホスト発生の次にHELLOという文字列があったら、次にHELLOWORLDアプリの中のURL
スロットファイルを呼び出しますよという。
指示をしていますで、その指示にしたがってですね。
HELLOというURLが入ってくると、このアプリの中のURLスロットby。
ファイルが呼び出されますで、HELLOの先のURLの中にWORLDという文字が入っているとHELLOファンクションというビューズ。
このアプリのMUSEドットPIファイルの中に入っているHELLOファンクションを呼び出されます。
で、HELLOWORLDファンクション文字ハローファンクションの呼び出されると。
HTV。
レスポンス要素でレスポンスオブジェクトとしてHELLOというものを返していくというようなコードにしました。

************************************************************
29. まとめ
************************************************************
はい。
最後にですね。
この第1章のまとめをやっていきましょう。
たくさんいろんな例え話とかして、あまりコードを打つ機会もなくて退屈だったかもしれません。
ですね。
ここの基礎を学んでいくということが本当に非常に大事ですので、この章をですね。
何回か復習しながら、既存的なDJANGOの流れにですねについて理解を深めていくと、どんどん勉強の効率が上がっていくんじゃないのか
なというふうに思いますで、今回学んだことをですね。
簡単におさらいしてみましょう。
まず初めはですね。
すプロジェクトとアプリということで、DJANGOの構成としてはプロジェクトがあって、その中ではセッティングするとPRファイルとかですね。
MASHはプロジェクト全体の設定をするようなフォルダがあって、それとは別に、そのプロジェクトの中で一個一個の機能ごとにアプリが作ら
れていきますよという。
お話をしました。
でURLゾッドPiとビーズドットPIということで。
DJANGOでは、普通のWEBサーバーとは違ってリクエストを受け取ると、まずはURLドットbyファイルというものがそのURL受取手で記載さ
れている。
URLの中身に従って次のビューズドットbyに指示を出していくと、ラーメン屋さんでいうと、このURリゾットPiは注文を受ける人ですね。
で、味噌ラーメンとかいろんなラーメンとかトッピングとかですね。
器の大きさとか大盛りコモリという。
オーダーを受けて、その受けたオーダーに従って、その受けたものを作ってくださいね。
という指示は、ビルドとビューワーにするというような流れがあるというお話をしました。
で簡単にですね。
モデルスロットPIも全体の流れは説明したんですけれども、この詳細はですね。
次の章で話をしていきますので、まずは全体の本当の大きな流れとしてはURLずっととPIがあってVISAとPIがあってで、そのリード
とPIがリクエストを受け取ってレスポンスを返すということですね。
で、3つ目ファンクションベースとビューとクラスベースとビューということで、これキッチンの例で古いキッチンと新しいキッチンという例えでお話を
しました。
クラスベストビューとはですね。
いろんな抽象的な高度な機能がたくさん入っていて、簡単に操作することができるとで、その一方でファンクションベースとビューはあまり高度な
機能はないんですけれども、実際にリクエストを受け取ってレスポンスを返すというところまでの流れがですね。
しっかりと分かりやすくイメージしやすいそんな形でイメージしやすい流れでコードを書いていくことができるという。
お話をしていきました。
で、最後にリクエストレスポンスということで、このDJANGOのプロジェクトを色々細かいコードこれから書いていくんですけれども、そこでやっている
ことは何かっていうと突き詰めていくと、DJANGOがリクエストオブジェクトを受け取って、その中でごちゃごちゃ何かをしてですね。
それでレスポンスを黄色と返すということをしていくということですね。
ですので、色んな複雑なことをやっていくにしても、いずれにせよ、何をしなければいけないかというと、リクエストを受け取ってレスポンス
を返さなければいけないということです。
なので色んなコード複雑なコードを書いていくと、何をしているのかというのが結構わからなくなってしまいがちなんですけれども、やるべき
ことっていうのは、リクエストを受け取ってレスポンスを返すということということを頭に置いていただければなというふうに思います。
はいで、ここまでが1章の中身になっていきますで、次の紹介はですね。
一気に何て言うんでしょう。
美しいというか、見た目が綺麗なサイトを作っていきます。
なのでだんだんテンションとかやる気も上がっていくのかなという。
風に思いますので早速ですね。
この次の章の勉強をこれから進めていきましょう。

************************************************************
セクション6:Todoアプリ(Django2)
30.はじめに
************************************************************
はい。
ここからはですね。
第2章というか2つ目のアプリということで、DOODLEアプリというものを作っていこうという風に思いますで、このTODOアプリからですね。
結構見た目もきれいなサイトになっていきますので、何となくちゃんとしたWEBサイトを作ってる感がですね。
ここからジワっと出てくるのかなという風に思います。
ではですね。
初めに今回はですね。
このツールアプリの完成物ですね。
これについて見ていきましょう。
未来を見ていきたいなという風に思います。
はいで、これが完成したDOODLEアプリになりますで、上の方にTODOリストとあってですね。
もう文章書いてあるんですけれども、ここですね。
この下に新規作成というボタンがあるので、これを押していきます。
そうするとタイトルがあるので、いろいろとタイトルとですね。
メモプライオリティーデューデートということで、題名あとはこの中身項目ですねと。
プライオリティーはこれ優先度なんですけれども。
優先度があってでデューデート。
これ締め切りですね。
締め切りを入れると、この4つのフィールドを作りますで、順番にまず入れていきます。
例えばですね。
買い物をするとで、卵を買って帰ると。
で、これ優先度が高くてですね。
これは例えば、2019年3月の。
19日日としましょう。
で作成するというボタンを押すとはい。
ここにですね。
TODOリストとして買い物をするというのが出てきました。
で、この右側にあるのがですね。
デューデートよる締め切りですね。
この日までにやりましょうという締切日が書かれていますで次にですね。
また、新しく作っていくんですけれども。
仕事をやると。
書類を作るというのでムードを作ります。
今度はのノーマルにしてみましょう。
で、締め切りを持った作ってですね。
作成するとすると、新しくこの仕事をやるという融通ができたんですけれども、これはですね。
また、色が変わってるというのが分かるかなという。
風に思います。
つまりですね。
このDOODLEは。
その優先度プライオリティーによってですね。
この見た目を変えるような仕組みを入れています。
で、この仕組みを入れていますので、例えばこの編集画面に入ってですね。
このプライオリティーをLOWに下げますで作成する頃、編集するというか、中身を変えるっていう記載なんで、ちょっと間違ってるんですけれども、
この買い物をするというものが先程のプライオリティー高いから低いに変えたので、色が青に変わりました。
でこのそれぞれの画面なんですけれども、トゥルーがやり終わりましたよとなった場合は、削除画面へというボタンを押すと削除するとというボタン
で、実際にこれで削除できました。
で詳細画面へというのを押すと、実際にそのTODOリストの中身を見ることができます。
これ内容ですね。
書類を作りますよという中身を確認することができて、その期限というのも確認することができます。
で、これが全体的な今回作るDOODLEリストの中身という風になります。
でお早速ですね。
これからこのTODOリストというのを1から作っていきましょう。
まずは初期設定としてですねほどというか、第1章でやったHELLOWORLDアプリであったプロジェクトの作成とですね。
あとはアプリの作成後、細かい初期設定というのを進めていきましょう。
はい、それではですね。
ここから新しいツールプロジェクトというもので、TRUEのプロジェクトを作っていきましょうで初めにですね。
今、ここ私がですね。
このパソコン上でどこにいるのかというと、TODOプロジェクトというフォルダを作って、そのフォルダの中にいますで、このフォルダの中を
見てみるとですね。
LSとしても何も出てきませんので、このフォルダの中には何も入っていませんですので、これから何かですね。
作っていこうという方。
まだフォルダ作ってない方はですね。
どんな名前でもいいんですけれども、まず初めに1個。
この今回のTODOプロジェクト用のフォルダを作って、そのフォルダに移動していってください。
ここでプロジェクトを実際に立ち上げていくんですけれども、今回はですね。
前と同じようにプロジェクトを作っていくんですけれども、DJANGOはドミンゲスとあとプロジェクトとして、今回はTODOプロジェクトという名前に
しましょうというプロジェクトとしますで今回ですね。
この先にドットを付けてスタートプロジェクトを実行していきます。
でこうすることによって。
今履いていたヌードルプロジェクトの中にですね。
この真似しろとというファイルとTODOプロジェクトというプロジェクトフォルダができているということがわかりますで、このドットをつけるのとお付き合い
の何が違うのかということをですね。
簡単に図を見てお話をしていこうというふうに思います。
はいでこの画面を見てほしいんですけれども、今やったのはですね。
このドットをつけてスタートプロジェクトコマンドを打ったという形になりますで、そうすると何が起こるかというと、余計に1個フォルダを作る手間
を省くことができるということが言えます。
どういうことかというと、先ほどここですね。
TODOプロジェクトということで、このツールプロジェクトのフォルダの中に入ってたんですけれども、このフォルダの中に入った上でさっとプロジェクト
コマンドを打つことによってこの中にですね。
これまでちょっとファイルだったり、あとはTODOプロジェクトとさっきこの打ったコマンドの名前がここに入ってきますで、その一方でTODOプロジェクト
という名前の後にドットをつけないでコードを実行するとどうなるかというと、これ実行した場所ですね。
TODOプロジェクトという場所で実行するんですけれども、そこからですね。
さらにもう1個同じ名前のフォルダができますで、その名前のフォルダができた後に、その中にまねちらっとであったり、あとはTODOプロジェクト
この名前ですね。
名前のフォルダができたりします。
これどういうことかというとですね。
1に何かプロジェクトを作るときに、これ人にもよるかもしれないんですけれども、基本的にはまず自分でフォルダを作って、そのフォルダの
中でスタートプロジェクトコマンドを打つと思うんですね。
その場合にやった方がいいのが、この取っ手をつけるということです。
何でかってこれつけないとですね。
余計なフォルダが1個できちゃうからなんですね。
で、そもそもこのスタートプロジェクトというのは、新しくフォルダを作って、その中に移動する前にデスクトップとかどこかの環境でまずコマンド
を打った時に実行されるようなイメージでできているのが、普通の佐藤プロジェクトCOMMONなるんですね。
ですので、これちょっと細かいとこなんですけれども、実際の開発を進めていく上では、まずフォルダを作ってそこに移動してでスタート。
プロジェクトコマンドをドットを付けて打っていくということをするのがいいのかなというふうに思います。
ちょっと豆知識的なとこなんですけれども、結構こういうのも知ってる知らないで効率が変わってきたりしますので、今回お話をさせていただき
ました。
で戻っていきましょう。
はいで次にアプリを作っていきます。
今回も先にアプリを作ってしまいますで、どういう風に作っていくのかというと、アプリを作るコマンドですね。
ええ。
PYTHON。
マネージドコピーはAFTERアプリということでTRUEと。
これでプードルという名前のアプリを作ることができました。
はい。
でこの上でですね。
設定をしていくんですけれども、セッティングスポットPIファイルをですね。
編集していきましょうで、この中からどこに何をまず設定するのかと言うと、このDIR図というところで。
HTMLファイルが入ってる場所ですね。
これを指定していくんですけれども、これは先程やったですね。
HELLOWORLDプロジェクトと同じように、ベースディレクトリーの中のテンプレートフォルダというのの中にHTMLファイルが入っていますよという
ことを指示してあげます。
で、次にインストールとアップスということでこれもですね。
このアプリを作った後にどのアプリを入れましたよという指示を出してあげる必要がありますので、ここもですね。
作ったアプリの名前ですね。
DOODLEという名前を入れてあげます。
で、これでセーブをしてあげましょう。
で次にするのはですね。
このHTMLファイルをベースディレクトリーの中のテンプレートフォルダに入れますよという指示をしてあげましたので、実際にこのマネージャ。
ちょっとピーが入っているフォルダの中でテンプレートフォルダを作っていきます。
テンプレートフォルダを入れるためのディレクトリを作る事ですね。
MAKEディレクトリというコマンドを打ちますので、MAKEディレクトリーのテンプレートという名前を打ちます。
で、これでテンプレートフォルダができました。
もちろん中身は何も入ってないですね。
ですので、全体の流れとしてはこのプロジェクトがあって、アプリがあってテンプレートがあってという形になりますで、次にですね。
もう1個することがありまして、それはURLの繋ぎ込みですね。
これもHELLOWORLDプロジェクトのところでやってきたことなんですけれども、プロジェクトで受け取ったURLを次のアプリのURLにつなぎこむ
ということをやっていきますで、そのためにですね。
アプリでは初期設定でURLドットPIファイルがありませんので、これをまず作っていきます。
TODOのアプリのところに移動していきます。
URLODDPI。
ファイルがないということがわかりますので、そこでTOUCHコマンドを打って。
URLドットPi。
ファイルを作っていきましょう。
これでプロジェクトの方でもURLぞとPIファイルがあって、アプリの方でもURLとPIファイルがあるということが分かります。
で、これがプロジェクトのURLドットPIファイルなんですけれども、この説明はですね。
先ほどというか、第1章と同じように消していきます。
で、次にアプリへのつなぎ込みをやっていきましょう。
これもHELLOWORLDアプリでやったことですので、コードをずらずらっと書いていきます。
インクルードとして。
TODOURL。
では先程の例ではですね。
ここにハローというものを打ってHELLOというURLがリクエストされると、次のアプリにつなぎ込みますよという指示をしたんですけれども、
今回はですね。
空欄にします。
空欄にすると何かって言うと何も。
URLの記載がない場合に、自動的にTOOLアプリのURLイズデッドPIファイルにですねを呼び出すような指示が出るようになります。
ですので、どんなURLAが打ち込まれたとしても、このアドミンという文字列でなければ、次のDOODLEアプリを呼び出すという形をこれで作る
ことができます。
でインクルードというメソッドを呼び出す必要がありますので。
ここに追加してあげましょう。
はい。
これで初期設定は完了です。
えっ。
ここからモデルずっとPIファイルについてお話をしていこうというふうに思います。
これ初の方で見てきたDJANGOの全体像ですね。
先程のHELLOWORLDアプリの中では、この中で特にこのURLとビューズとPiを中心に話をしてきましたけれども、DJANGOデータを
たくさん扱っていくという意味で、データを扱うためのファイルとして非常に大事なものが、このモデル度とPIファイルというものになりますで、
このモデルズドットファイルがどういった役割を担っているのかというと、このデータベースを使ってデータをたくさんとってきて、操作をする
ときの設計書みたいなイメージですで、この設計書を使うことによって、効率的にデータベースを扱うことができるということができます。
つまりですね。
データベースっていうのは、一般的にウェブサイトでWEBサイトを作るときによく使われているもので、このモデル図をたPIファイルとかファイル
を使って設計図とかを使って作っていかなくても操作することができるんですけれども、結構自分で操作をしていくと、非常にまた覚える
ことも多くて、大変で細かい設定も必要だということで、DJANGOの場合はこのモデルズ、ドットファイルを使って効率的にデータベースのデータ
を扱っていくということが一般的です。
でまずですね。
このデータベースを扱っていくという話をしていくんですけれども、そもそもデータベースというのが何なのかということについて、ここで簡単に復習
おさらいをしていこうというふうに思います。
はい。
データベースとは何かということで、これも例え話をしてですね。
イメージを膨らましていていただければいただきたいなという。
風に思うんですけれども、データベースとは何かということを考えると、例えて言うと、図書館のシステムのようなものということができるんじゃ
ないのかなというふうに思います。
これ右側の画像を見ていただくと、本がずらっと並んでるのが分かりますで図書館へ行ったことある方も多いかなと思うんですけれども、
図書館に入っていくとですね。
色んな棚があって、そのたまごとに色んな分類ですね。
医学書とか文学とか、そういったルールごとに本が並んでいてで、更にその棚の中でも一個一個の本にですね。
ラベルみたいなものが張られていてで、そのラベルでこう。
その本が入っている場所とかを管理するというのが一般的です。
ですので、このようにラベルが貼られて決められた棚に配置されることによって、私達はですね。
この図書館に入ってパソコンとかをいじってですね。
欲しい見たい本がどこの棚にあるのかというのをすぐに確認することができるということですね。
で、それに対してこれ左側ですね。
これ本がこう無造作に積み上げられているんですけれども、このような形で図書館にいたとしても、本がこのようにずらっと上に積み上げられ
ているだけであれば。
見たい本読みたい本を探すっていうのが非常に難しくなってしまうということは、非常にイメージを来やすいのかなと思います。
データーベースもですね。
実際、ウェブサイトで使うデータベースも同じようなイメージでして、そのデータベースっていうシステムですね。
そのデータをどういう風に格納して取り出したりするのかというような仕組みを提供してるんですけれども、そういった仕組みがあるからこそ、たくさん
のデータがあったとしても、そのデーターを効率的に取り出したりすることができるというようなイメージを持っていただければなという。
風に思いますで、このデータベースを使ってですね。
これから実際にデータベースの中にデーターを入れていく。
その簡単な設計図を書いていくんですけれども、これからその設計図として何を書いていくのかということについて、簡単にお話をしていこ
うという風に思いますで、データベースっていうのをですね。
結構抽象的な概念でして、もっと身近な例でいくとですね。
マイクロソフトのEXCELとかあとはGOOGLEスプレッドシートとかですね。
そういった全体としてデータをうまく扱うためのソフトとか、そういったもののことをデーターベースって言うんですけれども、そのデーターベースっていうシステム
を元に実際にコードを書いていたりとか、そのEXCELとかにデーターを入れていくっていうのは何なのかっていうと、個別のシートの
中にこのデーターを入れていくという形になると思うんですけれども、データーベースも同じようなイメージでして、データーベースっていうシステムが
あって、その中に一個一個テーブルというものを作っていきますで、そのテーブルの中にですね。
一個一個この表エクセルでいう表のようなどんなデーターを入れていきますかという指示をしていくことによって、データを入れていくための
基礎というものを作ることができていくということです。
でこれから作っていくのはですね。
まさにEXCELのテーブルのようなものを一個一個作っていくんですけれども、じゃあこのデータベースにおいてテーブルを作るときにですね。
どんなデータが必要なんですかということについてお話をしていきます。
で大きく分けるとですね。
テーブルを作っていくためには、2つの情報が必要です。
一つはですね。
この。
商品名値段特徴とまあここに一つ表を示してるんですけれども、そのテーブルの中でどんな項目にどんな項目をつくりますかというのがまず1個目
ですね。
ですので、今回の場合ですと商品名値段特徴という3つの項目を作りますよということをモデルスロットPIFファイルの中で指示をしていく必要
があります。
これが1点目ですね。
2点目はかいうと、それぞれ作った項目の中でどんなデータを入れていきますかという指示をしていく必要があります。
これが2点目です。
今回の場合ですと、これ果物の情報を入れるようなテーブルを作ったんですけれども、その中で商品名値段特徴とあるんですけれども、商品名
に関してはこれは文字のデータですよとここの商品名という項目に入るのは文字データですよということをデータベースモデルゾッドに対して指示を
してあげる必要がありますで、値段という項目があると、この項目の中にはこれは整数のデータですよという指示を出してあげる必要があり
ます。
で特徴というものに関しては、もうこれも文字のデータですよということで、それがどういったデータなのか指示を出す必要があるということ
ですね。
で、大きく分けると、この2つの設定をしていく必要があるということです。
はい、それではですね。
実際にコードを書きながらどういった形でテーブルを作っていくのかということについて見ていきましょう。
じゃあ、これですね。
このモデルずっとPIファイルを使ってテーブルを作っていくためにはですね。
クラスを定義してモデルを作っていきます。
テーブルを作っていきますで、クラスのこの名前は、これもファンクションベストビュークラスベストビューと同じで、任意の名前を付けていただい
て構いませんですので、今回はですね。
TRUEというモデルという名前にしてみましょうで、これもですね。
クラスベースとビューと同じような形で継承していきます。
継承して、継承先のクラスの中身を使うことによって簡単にですね。
このデータベースのテーブルを作ることができるようになってきますで、これはもう覚えていくというかモデルの場合はですね。
このコードを書いていくのが普通というか。
このモデルを書いて。
データーベースのテーブルを作っていくということで、モデルズのモデルズドットモデルですね。
そうしました。
このクラスを継承していくような指示を出していきます。
これでテーブルを作るようなイメージなんですけれども、このテーブルをつくった上で次にですね。
先程の果物の表で見たようなですね。
項目を作っていきます。
で項目はこれは名前はどんな名前でも構いません。
例えばですね。
今回、TODOリストのタイトルを付けていきますので、タイトルという名前にします。
でこの先ですね。
この先何を書いていくのかというと、その項目に対してどんなデータを入れていきますかという指示を出していきますで、その指示をして
いくんですけれども、それはですね。
まずモデルズ。
モジュールの中のクラスをしていくしていくんですけれども、CHARFIELDと例えばいうのを指示していきます。
で、このフィールドっていうのは実際どういったデータですよというのを示してるものなんですけれども、これがどんなものなのか、これどんな
種類があるのかとかですね。
どんな特徴があるのかというのを見ていく為にもですね。
色んな言い方があるんですけれども、大きく分けると2つ使っていくといいのかなというふうに思います。
1つ目がですね。
このJANGOのオフィシャルページで2つ目が聞いたというウェブサイトですね。
こういったものを使っていくと、そのどんなフィールドがあるのかというのが分かりやすいのかなというふうに思いますで、実際に見ていき
ましょう。
TWITTERの場合、日本語で検索をかけていくとけっこう出てくることが多いですのでジャンゴモデル。
フィールド種類と打ってみます。
はい。
そうするとですね。
ここにDJANGOモデルフィールドリファレンスのなという記事が出てきました。
でここを見ていくと、フィールドの方ということで、いろんなフィールドの種類があるということが確認できます。
で今ですね。
私が設定したCHARFIELDとものは、小サイズ大サイズの文字列のフィールドですということで、文字列を入れるフィールドそういうデータを入れ
ますよという宣言をしていますよということが確認できました。
で2点目ですね。
これはジャンゴのオフィシャルサイトから見ていくんですけれども。
DJANGOFIELDモデルと検索していくと、このような英語のサイトが出てきますでそうするとですね。
こう下を見ていくと、FIELDPIPESということで、これも先程の日本語のサイズと同じようにですね。
いろんなフィールドの種類があると言うことが分かります。
で、これはちょっともう少し詳しくですね。
引数はどんな引数を取りますかとか、そんな選択肢も一緒にあわせて教えてくれていますで、これ日本語にしていくには、HELLOWORLD
のところでお話通りですね。
この円というところをJAPANのJAですね。
にしていくと、日本語としてこのコードを見ていくことができます。
で結構ですね。
これ日本語と英語の表示であるんですけれども、日本語の場合、結構誤訳が多くてですね。
ちょっと分かりづらいというのも結構たくさんあります。
でできればですね。
これ保持にはだんだん大変と言うかですね。
1日、勉強するの大変なんですけれども、英語で見てですね。
何となくその雰囲気をつかむということも大事かなと思いますので、日本語のページを見ながら英語も合わせて見ていくといいのかなと思い
ますで、このJANGOのオフィシャルサイトを見ていくっていうのはですね。
だんだん勉強をして色んなことが分かってきたタイミングで見ていくことが多いです。
ですので、今のタイミングでこういったDJANGOのオフィシャルサイトを見ながらですね。
こういった書き方があるんだということを見ていくことは、結構少ないのかなと思うんですけれども、実際、これからDJANGOの勉強を進め
ていく上でですね。
こういった勉強のし方、調べ方があるんだなということを思い出してもらうという意味で、今回こういった調べ方がありますよということ
を御紹介させていただきました。
はいで戻りましょう。
戻ってきました。
で先程のこれですね。
タイトルとして文字列型のデーターを入れていきますよということで、CHARFIELDという主張をして行きました。
でCHARFIELDの場合はですね。
マックスレングスということで、最大でどれだけの文字列の長さにしますかという。
指示をしてあげる必要があります。
これをしないとエラーが出てしまいますので、実際に指定をしてあげる必要があります。
今回、100としましょうで次にですね。
メモということで、TODOリストの中の。
細かい説明文というか、自分の中で理解理解というかですね。
忘れないように書いていくメモですね。
そのメモを書いていきます。
で、この項目はどういった形にするかというと、モデル図テキストファイルという風にしていきましょう。
で、テキストフィールドが何かというとこれはですね。
このCHARFIELDに比べて長い文字列を入力する場合に使われるのがテキストフィールドです。
ですので、この2つがあるんですけれども、タイトルとか使う場合はCHARFIELDで、もう少し長い場合はテキストフィールドという形で意識をし
ていくといいのかなという。
風に思いますで、実際のTODOリストもう少しデーターを増やしていくんですけれども、まず初めはですね。
簡単にこの2種類ですね。
この2つの項目だけに絞って、次の作業に進めていこうという風に思います。
はい。
先ほどですね。
実際にモデルゾッドPIFファイルの中に2つのんですね。
タイトルとメモという項目を書き込んででそれぞれのフィールドを指定してきました。
で次にですね。
この作ったモデルずっとファイルの中で作った設計図を元に、実際にデーターベースの中でテーブルを作るということをやっていきましょうで、
そのテーブルデータベースのテーブルを作るためにやっていくために必要なこととしてですね。
2つのステップを踏んでいく必要があります。
で、その2つのステップは何かというとですね。
1つ目がMAKEマイグレーション図というもの。
そして2つ目がマイグレーションというものですで、この2つの中身について順番に説明をしていきます。
まずですね。
MAKEマイグレーションですでMAKEマイグレーション図ていうのは何かというとですね。
これは。
モデルズドット。
PDFファイルとデータベースの間にあるですね。
中間生成物みたいなイメージなんですけれども、ここのモデルずっとファイルで作ったですね。
テーブルの設計図を元に、もう少し細かい設計図をつくっていくというのがMAKE。
マイグレーションです。
で、このMAKEマイグレーション図というのはですね。
この細かい設計でつくっていくんですけれども、その設計図っていうのがモデルズドットPIFファイルの中身を更新してメイクマイグレーション図という
コマンドを打っていくたびにですね。
新しく番号が振られていって、新しくどんどんファイルがつくられていきます。
ですので、モデルずっとファイルはどんどん上書きしていくんですけれども、過去ですね。
このタイミングのデータベースの中身に戻したいということになった場合とかでもですね。
過去の履歴が全部残っていますので、この段階に戻しますよという指示をしていくと、簡単に昔の状態に戻すことができるということで、
過去の変更記録を残していくということができる。
意味でも、このMAKEマイグレーションの図というのはですね。
結構便利なコマンドになっていますで、さらにこのMAKEマイグレーションというコマンドをですね。
このコマンドを打つことによって、何かDJANGOのコードの中でエラーがあった場合にですね。
そのエラーの内容というのを表示してくれます。
ですので、このMAKEマイグレーションというコマンドを打つことによって、このモデルズドットファイルの中身が何か変なコードが書かれていてで、
その変なコードのままデータベースに書き込んで何かエラーが出るとかですね。
そういったことを防いでくれるというような意味もありますで、これがMAKEマイグレーションというコマンドですねで次にですね。
MAKEマイグレーション図をして、より細かい設計図を作った後に、実際にデータベースに書き込みをしてテーブルを作っていくとで、その実際
にデーターベースに書き込みをしてテーブルを作るために使われるコマンドがこの全グレートと言う。
コマンドですで、このマイクDATEというコマンドをすることによって、実際にデーターベースの中にテーブルができていくということですね。
ですので、このモデルずっとファイルを作った後にですね。
この2つのステップを経ていくことによって、実際にデーターベースの中にテーブルを作ることができるということを、まず頭に入れていただきたい
なというふうに思います。
はい、それではですね。
実際にターミナルの中でですね。
メイクマイグレーション図コマンドと全グレートコマンドを打っていきましょう。
でここでですね。
あえてエラーを出すために、このフィールドで必要とされるMAXレングスと言う項目を消していきます。
で、決してセーブをしてですねで、まずMAKEマイグレーションasコマンドを打っていきましょう。
マネ1ドットBYMAKEマイグレーション図というコマンドを打っていきます。
で、そうするとエラーが出ました。
でこれえーっとですね。
これを見てみると、ちょっと意図したエラーとは違うエラーが出てきてしまいました。
で、これどんなエラーかというとですね。
このアプリの中のURLとファイルっていうのが何もありませんよということを示してくれていますで、先程このプロジェクトのですね。
URLドットファイルからDOODLEのURL図につなぎこみをしていたんですけれども、こっちのファイルに何も書き込みがないので、MAKEマイグレーション
と若干関係ないんですけれども、エラーが出てしまいましたですので、このエラーを修正していきましょう。
これはHELLOWORLDでもやったことですので、ちょっと省略しながらですね。
ざっとやっていこうというふうに思います。
で、アプリを受け取った後にパスとして、何でもよいの束というのを入れていきます。
その時に呼び出すものとして、DOODLEというファンクションを呼び出すとしましょうフロム。
ユース品行と。
ルールとしてあげてね。
ビューズの中でツールを定義しておきます。
父ってこれやってきたことが全てHELLOWORLDプロジェクトでやってきたと同じでしたので、細かい説明は省略させていただきます。
で、これでしっかりとURLの繋ぎこみが完了しましたので、ちゃんとマイグレーションするとですね。
意図したエラーというかですね。
ここのMAXレングスが設定してありませんよというエラーが出るはずです。
はい。
これエラー出てきましたね。
はいてここを見てみると、チャープフィールドMASTリファインやマックスレングスアトリビュートということで、このチャームフィールドはマックスレングス
という属性を設定しなけれと定義しなければいけませんというエラーを出してくれました。
ですのでちゃんとですね。
このようにマックスレングスという属性を設定してあげます。
はいで設定が完了しましたので、これでメイクマイグレーション図がはい完了しましたでこのようにですね。
マイグレーション図法TOOLということで、このツールアプリの中に入っているモデルズドットPIFファイルのマイグレーション図が完了して、この0
001イニシャルPIというファイルができましたよということを示してくれていますで、ここを見るとですね。
マイグレーション図というフォルダが新しくできているのが分かります。
で、この中を見てみると、0001イニシャルドット。
Byと言うファイルがあるんですけれども、この中身を見てみましょう。
この中身を見てみるとですね。
さきほどモデルズドットバイで定義したこのタイトルというのとメモというこの2つの項目ができているということが分かります。
で、さらにタイトルをですね。
このチャープフィールドの中で指定しなければいけないMAXレングスというものが指定されてるということが分かります。
で、ここでですね。
ちょっと意識していただきたいことがあるんですけれども、このIDというフィールドが設定されているということがこれを見ると分かりますで、
これはですね。
デフォルトでDJANGOでTABLEを作っていくとですね。
必ずこのIDっていうのは、基本的には設定されるような設定になってますで、このID番号をですね。
一個一個。
そのデータごとに番号がこのによって振られていくんですけれども、そのIDの番号を使って一個一個のデーターの選別というか、こう判別を
するようなために使われるものとして、このIDというのがあるということを頭に入れておいていただければなという風に思います。
はいでこのMAKEマイグレーション図をすることによって、そのモデルずっとPIファイルとデーターベースの間の中間のより細かい設計書ができました。
で、この細かい設計書を元に、実際にデーターベースに書き込みをしていきます。
で、データベースに書き込みをするために必要なコマンドは、先ほどお伝えしたマイグレートというコマンドでした。
ですので、マイグレートというコマンドを打っていきます。
そうするとちょっとこう。
長い項目が出てきたのがわかります。
ちょっと切れちゃってますね。
消えちゃってるんですけれども、上から見ていくと、上から順番にたくさんこのようにですね。
何かができているということがわかるんですけれども、ここでまず意識していただきたいことはですね。
ここのルールイニシャルOKということで、このTODOアプリの中のイニシャルというこの中間生成物のファイルを元に、データーベースへの書き込み
が完了しましたよということを示してくれていますで、これ以外のものが何かって言うと、これはデフォルトでですね。
DJANGOが準備してくれてるもので、一番初めにプロジェクトを作ってマイグレートをすると作られるテーブルになります。
ですので、このテーブルをたくさん作れるように見えるんですけれども、実際に意図して作ったものはこれだけで、これ以外のものは1だけです。
こういった表示が出てくるのは2番目以降はちゃんとモデルずっと。
に基づいて新しくできたMAKEマイグレーション図によって基づいて作られたファイルに関連したテーブルだけが作られていきますので、1たくさん
のこういったテーブルがまず作られていくんだなということを頭においていただければなという。
風に思いますで、次からはですね。
この作った実際に作ったテーブルを元に、データの入力をしていこうという風に思います。
はい。
では、先ほどですね。
実際に全グレートコマンドを打ってテーブルをつくっていきました。
データベーステーブルを作っていきました。
でデータベーステーブルが完成しましたので、次にですね。
実際できたテーブルの中にデータを入れていこうというふうに思いますで、データをテーブルの中に入れていくためにですね。
簡単に使える機能として管理画面というものがあります。
この管理画面を使うことによって、いろんなデータを簡単に操作することができるようになりますので、実際に管理画面に入ってデータの操作を
していきましょう。
管理画面はどこから入るのかというとですね。
これは1のHELLOWORLDプロジェクトでやった部分になるんですけれども、HELLOWORLDプロジェクトでですね。
初めにプロジェクトを作ったときに。
このURLドットファイルの中にですね。
このパスワード。
ADOBEにサイトと言われると言うコードが書かれていたと言うことを覚えているでしょうか。
ここの行動がまさにですね。
管理画面に行くためのURLになりまして、アド便というURLを打つことによって管理画面に入ることができます。
で、実際にサーバーを立ち上げてですね。
このADD便というサイトにアクセスをして管理画面に入る入れるのかということを確認していきましょう。
サーバーを立ち上げていきます。
PYTHONIIIマネージドとBYLANサーバーとしてサーバーを立ち上げました。
で、URLとしてアドミンというURLを打ち込んでいきます。
で、そうするとこのJANGOアドミニストレーションということで、JANGOの管理画面ですね。
これを表示されることで表示させることができました。
でここでですね。
その管理画面に入るためには、ユーザー名とパスワードを入れる必要があるんですけれども、このユーザー名ってこのJANGOのプロジェクトを作っ
た時に何も設定してないですよね。
ですので、この管理画面に入ることができないんじゃないのかというふうに思うかもしれないんですけれども、JANGOではですね。
この管理画面に入るためのユーザーを作るためのコマンドというのを準備してくれています。
でそれがですね。
CREATEスーパーユーザーというコマンドなんですけれども、これもまねちろっとPIファイルを使って作っていきます。
実行していきますですので、ターミナルに移っていきましょう。
はいターミナルに戻ってきましたで。
一回サーバーを止めますコントロール。
使用してサーバーを止めてでユーザーSUPERUSERを作っていきます。
で、SUPERUSERって何かって言うとですね。
平たく言えても、全ての権限がある管理者権限があるユーザーのことですね。
ですので、このSUPERUSERっていうのは結構何でもできちゃう特権を持った人ということは、ちょっと頭に入れておくといいのかなと思い
ます。
で、SUPERUSERを作るためのコマンドはですね。
これも他のコマンドと同じようにですね。
PYTHONマネージドとPiでCREATESUPERUSERというふうに売っていきます。
で、これでENTERをですね。
ユーザーネームをどうしますかということを聞いてきますのでで何も来ないとまあ行だってデフォルトで私の名前なんですけれども、この名前
が入っていますので、とりあえずこれで意図しましょう。
でADDRESSも入れないですね。
パスワードも簡単なやつにしてしまいます。
そうするとこれでしょう警告が出てきます。
パスワードが短すぎますとで、パスワードは少なくとも8文字入れてくださいとでば、さらにパスワードがですね。
当たり前のパスワード過ぎますという。
結果が出てくるんですけれども、このターミナル上ではですね。
まあ、そういった実際のウェブサイトのサービスを立ち上げた時に出てくるですね。
パスワードのバリデーションっていうのをですね。
え回避することができます。
あくまでも開発環境として、ユーザーをスーパーユーザーを作っていくという意味では特にですね。
自分のパソコンの中だけでやることなので、パスワードを強化する必要もないということで、このような説明をしてくれているということです
ね。
ですので、バイパスパスワードということで、もしバイパスパスワードバリデーションということで、パスワードバリデーションを回避してスーパーユーザーを作り
ますかと言う質問を受けてますので、これはWHYとしてYESとしてあげます。
そうするとスーパーユーザークリエイティとサクセスフリーということで、スーパーユーザーが実際ちゃんと作られましたよということを教えてくれています。
ですので、今作ったこのユーザーで管理画面に入っていきましょう。
また、サーバーを立ち上げてですね。
ログインしていきます。
先ほど設定したユーザー名とパスワードを入れてログインボタンを押すとはい。
この管理画面の中に入ることができました。
で、まず初めにあるのはですね。
このユーザーとグループということで、このユーザー名、今先程作ったスーパーユーザーですね。
このスーパーユーザーの情報が入っていることが確認できます。
で、グループには何も情報は入っていないですね。
で、これを見るとですね。
今というか、先程作ったTODOモデルに基づいたデータをどこでいじることができるのかと、何も書いてないじゃないのかという風に思わ
れるかなというふうに思います。
で実はですね。
DJANGOでは、新しくアプリを作ってモデルを作っていくとですね。
そのモデルを管理画面で操作していきますよ、という指示を出していく必要があるんですね。
で、その指示をどこでするのかというと、ADDMINTとPIファイルでやっていく必要があります。
ですので、ターミナルに戻っていきましょう。
はいターミナルに戻ってきましたでここでですね。
このアプリですね。
TODOアプリの中に入っているあドメインドットPiへ。
これ管理画面の操作をする為にちょっと使うという話をしたんですけれども、このファイルの中にですね。
管理画面に実際にデータを扱うことができるようにするコマンドを打っていく必要があります。
で、そのコマンドは何かというとですね。
これは本当にこういうこういうコードですよということで覚えていただくのが一番いいのかなと思うんですけれども、道民サイトレジスターと言うこと
で、その中にですね。
扱っていくモデルの名前を書いていきます。
で、先程作ったのはTOOLモデルという名前をモデルぞとPIファイルで作りましたので、この名前を。
入れていきますというモデルとして、この通電モデルっていうのがどこにあるのかというのを指定してあげないといけませんので、フロムモデル
地と同じフォルダーに入っているので、このドットを付けて同じフォルダーだということを指示した上で、運行とツールモデルという風にコード
を打ってあげます。
で、その上でまたですね。
管理画面に戻っていきましょう。
はいで更新ボタンを押します。
はい、そうするとですね。
このようにTODOモデルズということで、TODOモデルのモデルが実際に表示されたことが確認できます。
これで追加ARTという追加ボタンを押すと、タイトルメモというのが出てきました。
でタイトルで買い物をすると。
卵を買うとしましょう。
そうすると、西武雄とハイ。
この実際のモデルに基づいてデータを作ることができたということが確認できます。
このようにここでですね。
追加したりとか、セーブをして、また新しいのを作るとかですね。
色んなことがこの管理画面でできてきます。
ですので、ここの管理画面をいじっていくと、何となくデータをいじっていくことのイメージが湧いていくのかなと思います。
で、新しくも1個作ってみましょう。
書類を作る。
報告書を作るというようにしましょう。
で西部をするとこのようにですね。
2つのデータができたということが確認できます。
はい。
ここでですね。
2つのデーターを作っていたんですけれども、この2つのデーターの名前がですね。
チューブモデルオブジェクト1通例モデルロボット2ということで、中身が何かこれじゃ分かんないということでちょっと見づらいですので、この見た目
を直していこうという風に思いますで、この2つっていうのはそれぞれですね。
クラスから作られたオブジェクトマイクのデーターが一個一個のオブジェクトなんですけれども、そのオブジェクトがこれがそれぞれオブジェクトですよという
風に書かれてるんですけれども、そのオブジェクトをですね。
文字列に変えて表示するということをすることによって、実際にこのデータの表示を変えていこうという風に思います。
でそのためにはですね。
ここで特殊メソッドとこれPYTHONの範囲なので、細かいのはちょっと説明しないんですけれども、このストールという特殊メソッドを使いますで、
これはオブジェクトを文字列として返すということをしてあげるものですね。
で、それぞれ出来上がったオブジェクトを受け取るということで、セルフを受け取って、これSELECTの一個一個出来上がった。
このクラスから出来上がったオブジェクトのことですね。
で、そのオブジェクトに対して名前を付けてあげるんですけれども、リターンとしてね。
例えばですね。
ちょっとイメージしやすいように。
ここで100というものに変えたとしましょう。
で、その上で。
見てみるとですね。
こうしてボタンを押すと。
はい2つともこれ100になりました。
これはですね。
ちょっとエラーが出ちゃったんですけれども。
この2つが何なのかというと、これはですね。
先ほど設定した。
リターンは100ということで、そのオブジェクトにを文字列として100というものを指定したので、100というものが表示されるということに
なります。
ですので、今回はですね。
それぞれのオブジェクトのタイトルをつけていきたいということで設定をしていきますので、その場合はですね。
このセルフそれぞれのオブジェクトのタイトルを返しますよという。
指示をしてあげます。
その上で、もう一回更新をしていきましょう。
はい、そうするとですね。
この書類を作る買い物をするということで、それぞれのオブジェクトのタイトルが表示されました。
でこれをクリックすると買い物をするとか、卵を買うそれぞれ先程作ったものですねのタイトルが表示されているということが確認できました。
このようにですね。
STRINGという特殊メソッドを使うことによって、表示を変えることができるということも頭に入れておくと、開発が効率的に進めることができる
んじゃないのかなというふうに思います。
はいで、ここで先ほどまでですね。
実際にデーターベースからテーブルを作ってで、それで管理画面からデーターベースのテーブルの中にデータを追加するということをやってきました。
でモデルスロット。
周りのですね。
簡単なデータの作成というのが完了しましたので、次はですね。
実際にモデルスロットファイル。
で作ったデーターをですね。
実際のHTMLファイルの中に埋め込むということをやっていこうという風に思いますで、これからですね。
それぞれそのTODOリストの中で使っていく色んなテンプレートですね。
そのTODOのリストを表示するとか、細かい内容を表示するとか、あと新しくTODOリストを作成するとかですね。
そういったファイルを作っていくんですけれども、そういったファイル個別のファイルを作成する前にですね。
そのTODOリストのようなウェブサイトを作っていく上で、予めしておきたいですね。
その前提としての考え方のようなものを簡単にお話ししたいというふうに思います。
で、今回プードルリストの良いものをですね。
データをうまく扱いながら、WEBサイトを作っていくというものなんですけれども、データベースを使ってWEBサイトを作っていくときの基本的
な機能考え方というものにクラウドというものがあります。
でクラっとっていうのは何かというとですね。
このそれぞれの4種類の頭文字を取ったものなんですけれども、作る読み込むGETする取るというものでアップデートする更新する。
削除すると、CREATELEADアップデートDELETEとこの4つの頭文字を取ったものがCRUDと呼ばれるものです。
で、これをですね。
いろんなサイト最近作られてるものの中で、この機能で説明できるものというのが結構たくさんあります。
で、例えばですね。
TWITTERというサイトがありますで、このTWITTERっていうのは非常に複雑なサイトなんですけれども、これも突き詰めていくとですね。
それぞれのユーザーがアカウントを作ったりとか、あとはツイートを作成してその投稿する文字をですね。
作っていく。
さらにはですね。
他の人は。
他の人が作ったツイートを見たい時はですね。
リードをして読み込んで他の人が作ったツイートを見ると言うことができるになりますで、さらにですね。
自分が作ったツイートを更新してアップデートをすることもできるし、あと削除したければそのツイートを削除するということができます。
でもっと言うとですね。
他のサイト例えばFACEBOOKとかも突き詰めていくと、同じようなイメージでしてあるユーザーがですね。
自分の投稿をこう書いていくということもできますし、他の人はそのある人がやった投稿を読み込んでいくとで、さらにある人が通った
投稿を更新することもできるし、削除することもできるということで、この4つの機能があるだけでですね。
TWITTERとかFACEBOOKの主要な機能を説明することができるというわけなんですね。
で、今回作っていくツールでもですね。
規模の大小はあれですね。
同じような機能を備えているようなウェブサイトということができます。
で、どういうことかというと、TODOリストがあってではじめにCREATE、新しくTODOリストを作りますよということで新しいデータモデルデーター
ですね。
決済モデルじゃなくて、新しいTODOリストを作成することができます。
で、この詳細画面をというを押すことによって、そのデーターの中身を見ることができます。
で、編集画面ということを押すことによって、そのTODO、1度作ったものを更新することができます。
で、さらにこの削除画面へということを押すことによって、TODOリストの中身を削除することができるということで、この4つの機能っていう
のをベースにですね。
これからTODOリストを作っていくんですけれども、これから何かサイトを作っていく時にも、このCRUDという考え方を頭に入れながらサイト
を作っていくと抜け、モレもなくてですね。
網羅したウェブサイトが作ることができるんじゃないのかなというふうに思います。
で次にですね。
このCRUDの考え方とDJANGOで準備しているテンプレートの関係について、まず大きな範囲からお話をしていこうという風に思います。
で初のですね。
HELLOWORLDプロジェクトの中でクラスベースとビューで使ったのをですね。
テンプレートビューと言うクラスを継承してきたんですけれども、覚えているでしょうか。
このテンプレートビューっていうのはですね。
特に色んな機能の色が付いていないこうシンプルで簡素なテーブルとなりますでそうではなくて、このCRUDの考え方に基づいて、色んな機能
が予め備えられていましてでこれからですね。
それらの機能が入ったビューを使いながら、一個一個のテンプレートを作っていきます。
ですので、これから作っていくベースになるものとしてですね。
このCRUDとビューの対応っていうのを頭に入れておくとですね。
ちょっと分かりやすく作っていくことができるのかなということで、今回ご紹介をさせていただきます。
で、上から順番に見ていきましょう。
で初めにですね。
TODOリストを作っていくというところに対応するものとして、DJANGOが準備しているものがCREATEビューというのがありますで、次に
ですね。
データーを読み込んで取ってくると、情報を取ってくるというものに対応する。
このリードに対応するものとして、DJANGOが準備しているものがリストビューというものとDDDETAILビューですねで、詳細を表示するビュー
のTTLビューというものがあります。
で、次にですね。
更新するということで一度作ったデーターを更に書き替えたりするということで。
準備されてるのがアップデートビューというものです。
で最後にデータを削除するために使われるのがDELETEVIEWというものです。
で、こういったビューを使うことによって、簡単にWEBサイトを作ることができますで、これから実際にそれぞれのビューを使ってですね。
作っていくんですけれども、このイメージを頭に入れていきながら、一個一個見ていくと、ちょっと個別のところで混乱することが少なくなる
のかなという風に思います。
では、次からですね。
実際にデータをですね。
テンプレートの中に入れ込むということをやっていきます。
初めはリストビューということで、TODOリストのリストをですね。
上から並べて表示するということをやっていきましょう。
それではですね。
実際にリストビューということで、データの一覧をリストとして表示するために使うリストビューを使ってですね。
それをテンプレートに入れ込んで、実際のウェブサイトを作っていこうという風に思いますで、リストビューというのは先ほどお話したとおりですね。
このデータの一覧をリストした表示することに適したテンプレートというものです。
ですので、クラスはこう高機能なキッチンみたいな話をHELLOWORLDアプリのところで知ったんですけれども、このデータの一覧をリストとして
出す時に便利な機能がたくさん備えられているクラスという。
ざっくりとしたイメージを持っていただければなという風に思います。
では、実際にですね。
コードを書いていて、このリストビューを継承したクラスを作ってですね。
そのクラスの中でテンプレートの指定をしたりして、実際にコードを書いていこうという風に思います。
はいでVISUALSTUDIOCODEも載ってきました。
でここでですね。
設定を進めていくんですけれども、まず初めにですね。
今までやった設定を簡単に振り返ってみましょう。
まず、URLスロットの作り込みのところですねで、これプロジェクトTOOLプロジェクトフォルダフォルダの中のURLパターン図なんですけれども、ここ
でPATHへこのような設定をしていましてで、これ先ほど設定した部分なんですけれども、これはですね。
URLに何も文字列が入っていない場合、つまりLOCALHOST8000と言うURLでリクエストを投げた場合に、次のツールアプリのURL。
すると。
Pi。
ファイルを呼び出しますよという指示をしてあげています。
で次に呼び出されたURLBYですねというアプリの中のURLとPIファイルがこれになりますで、ここはでですね。
初めに先ほどエラーを避けるためにちょっと設定をしてきたんですけれども、この設定はもう必要ありませんので消していきます。
で、ここで実際にURLの作り込みをしていきます。
どのようなURLが入力されると、どのクラスを呼び出しますかという指定をしていきましょう。
で、ここではですね。
リストを表示させるということで、リストという文字列を指定してあげます。
もちろん、これ何でも大丈夫ですで次にクラスを呼び出すんですけれども、このクラスの名前も任意なんですけれども、じゃあ今回はですね。
TOOLリストと言う名前のクラスにしようと思います。
クラスの場合は、ファンクションと違ってですね。
ASビューというのを付けるというものでした。
ですので、ASビューというメソッドを付けてあげます。
はい。
これだけですね。
これでURLの。
作り込みが完了しました。
で次にですね。
このリストというリクエストリストという文字列のリクエストが投げられた時に呼び出される。
このTODOリストというクラスを実際に作っていこうというふうに思います。
ですので、ミューズドットbyファイルを開きますでここでですね。
これも先ほどエラーを避けるために作ったものですので、削除をしていきましょう。
これも要らないですね。
要らないので削除していきます。
ハイクラスを描いていきます。
TODOリストでこれ継承する継承先ですね。
何を寄付するのかというと、リストビューを継承するので、リストビューと書いていきます。
で、リストビューがある場所を指定してあげないと、このファイルがどこにリストビューがあるのかということが分かりませんので、DJANGO柚子
ジェネリック。
これはテンプレートビューをインポートしてきた時と同じような同じ場所ですね。
同じモジュールになりますで、一方とリストビューと言うことで、このモジュールからリストビューというのをインポートしてきました。
で、このクラスの中の定義をしていくんですけれども、まず定義するものとして。
HELLOWORLDアプリでやってきたですね。
テンプレートネームですね。
テンプレートネームをまず指定してあげましょう。
今回はですね。
リストドットHTMLという名前にしてあげます。
これもちろん、何の名前でもいいんですけれども、わかりやすくするためにリストという名前にしていますで、これでですね。
最低限の設定は完了したというものですね。
で、次に何をしていくのかというと、このテンプレートネームを付けたこの実際のファイルですね。
このファイルを作っていく必要があります。
で、テンプレートの中にですね。
実際にファイルを作っていきましょう。
はいと。
でこれで。
クラスの定義をして、そのクラスが呼び出されると、このテンプレートネームで指定したリストHTAリストとHTMLというファイルが呼び出されると
言う仕組みを作ることができました。
これから実際にリストドットHTMLファイルの中にコードを書いていくんですけれども、ここでざっくりとしたJANGOのタグを使う方法について
お話をしていこうという風に思いますで。
HTMLファイルの中にはですね。
一般的には。
HTMLで使うタグ1万タグとか。
エイチツータグとかそういったタグはですね。
この括弧で囲われたもので指定をするというのがルールでした。
でこれに対してですね。
DJANGOで特殊なと言うか、ジャングルでデータを扱ったりとか、ちょっと複雑な処理をする場合はですね。
基本的には2つの方法を使って実装をしていきますで、そのうちの1つ目の方法がですね。
この中、括弧2%と言うので、中身をかこうというものですで、これはですね。
色んな処理をする時に使われるんですけれども、ちょっと複雑な処理をする時に、このタグが使われるということを頭に置いていただければな
という。
風に思いますで2番目ですね。
2番目はこの中、括弧2つで囲うものです。
で、これはですね。
データベーステーブルの中に入ってやるデーターを扱う場合に使われるようなものです。
ですので、データーは使う場合はこの2重括弧、それ以外のちょっと複雑な処理をする場合はパーセントが入っている。
括弧とで、これがDJANGOの中で使っている特殊なタグですよ、というイメージを持っていただければなという風に思います。
はい。
では、実際にですね。
コードを書いていきましょう。
ハイビジュアル殺傷後で戻ってきました。
でここでコードを書いていきます。
でコードを書いていくんですけれども、初めに書いていくのはですね。
フォームを書いていきます。
でFOVEはPYTHONの範囲ですので、あんまり細かいお話はしないんですけれども、FORPOSTINOBJECTリストという風に指定してきます
で、ここでのポイントはこのPOSTっていうのは任意の名前で何でもないジョブです。
バストでもいいですし、アイテムでもいいんですけれども、このオブジェクトリストというところですね。
これが何かというとこれはですね。
リストビューを指定することによって、このオブジェクトリストというものを使うことができるんですけれども、これはですね。
このデータベースの中に入っているデータをですね。
リストとして保存してあるようなオブジェクトになります。
ですので、ここの指定をすることによってデータベースに入っているデータを一個一個取り出して、それを都度このアイテムというものに入れて
いくということができるようになります。
で、法文の最後にエンド法ということで法文学校で終わりますよという指定をしてあげますで、次に何をしていくのかというと、このオブジェクト
リストで入っているリストのデータの中からですね。
一個一個を取り出してきたアイテムを順番に表示していきます。
で表示する方法はですね。
ここで。
アイテムとこのリストの中に入っているデーターが一個一個。
アイテムというオブジェクトのアイテムという名前で格納されていきますので、このアイテムという指定をすることによって。
データを一個一個順番に表示していくことが可能です。
で、このときですね。
アイテムというのはそのオブジェクトそのものなんですけれども、ここに。
属性をつけることによってですね。
そのデータベースに入っている特定の項目を指定することができます。
で今回ですね。
このアイテムで取り出したそれぞれの項目に付けられる属性としては、この2種類ですね。
タイトルという属性とメモという属性がありますので、この2つを指定していこうという風に思います。
リストドット。
HTMLに戻ってアイテムドットタイトルというのと。
アイテムメモというふうに記載しました。
で、これでセーブをして、これで最低限の味というか、簡単なリストビューとしての表示方法の実装が完了しました。
で、ここからですね。
ちょっと作り込みというか、コードをもう少し書き足していくんですけれども、まず初めに書き足すものとしてはですね。
ここのリストドットHTMLでオブジェクトリストとしてデータが入ってきますよという話をしたんですけれども、その時にこのクラスに対してですね。
どのテーブルを使うんですかという。
指示をしてあげる必要があります。
例えば、このモデルスロットファイルの中、これ今回1個しか作ってないんですけれども、ここの中でたくさんTABLEというモデルだけじゃなくて、
他のテーブルをどんどん作っていく場合があります。
その場合にですね。
このUSEDとファイルのクラスの中では、どんなモデルを使うんですかという。
指示をしてあげないと、どれを使っていいのか分かんなくなってしまいますので、その指示をして指定して指示をしてあげましょうで、
それの指示のし方をですね。
モデルという名前で指示をしてあげますで、TODOモデルと。
はい。
この中でモデルを使いますよという指示をしてあげる必要があります。
で、この中でモデルが入っている場所を指定してあげないと選ばれてしまいますので、ロム土とモデル頭方とでモデルというふうに指定し
てあげます。
んで1個ちょっともらってですね。
ここでTODOリストというクラスを作ったんですけれども、この場所も指定してあげないとエラーが出てしまいますので、フロム土とビューズビューズ
ファイルの中からTODOリストをインポートするということをしていきます。
はい。
これでですね。
無事に設定が完了しているはずですので、サーバーを立ち上げて、実際にブラウザ上から確認をしてみましょう。
PHOTOBYFRANサーバー。
はい。
で無事にサーバ立ち上がりました。
LOCALHOSTのリストですね。
リストといってみると、はいこのようにですね。
さきほど作った2つのデータの情報が並んで入っているということが確認できました。
で、これタイトルですね。
1個目のデータのタイトル買い物をすると、これ中身メモのところですね。
卵を買うという形で表示されているのが確認できます。
で、これですね。
もちろん装飾をしてですね。
見やすくするということもできます。
ちょっと簡単に装飾してみましょう。
リストのタグを作っていきます。
ULタグをですね。
ここで作ってで一個一個のアイテムで。
落ち込みました。
このようにリストにしていきます。
はい。
これでセーブをして、もう一度ブラウザで確認してみましょう。
更新を押すとはい。
このようにですね。
一個一個のデータがこういった形でリスとしてですね。
表示されることが確認できました。
これがですね。
リストビューのざっくりとした大きな流れと言うか、こうテンプレートに入れ子にデーターを入れ込んでいく進め方になります。
こういったことをしていくとですね。
JANGOを結構便利にいろいろデータを使いこなすことができるんじゃないのかなという。
イメージをどんどん持っていただけるんじゃないのかなという風に思います。
だから、ちょっと見た目があまり美しくないんですけれども、この辺はこれからちゃんと修正をしていきますので、順番に学びを深めていきましょう
で次はですね。
このリストを表示させたものなんですけれども、この次にですね。
詳細一個一個のTODOの中身の詳細を表示するページをこれから作っていきましょう。
はい。
次にですね。
DETAILVIEWについて勉強をしていきましょうで、DETAILVIEWっていうのをですね。
リストビューと結構似てる部分があるんですけれども、CRUDの中ではですね。
リストビューと同じくAです。
リード情報を取ってくるという機能を使っていくというものですね。
でDTVVIEWっていうのをですね。
ここに書いてある通りですね。
データの中身を表示することに適したテンプレートということで、リストビデオはですね。
この一個一個のタイトルとか、その主要な情報だけをこう載せていくような時に使っていくんですけれども、DTREVIEWっていうのはその
タイトルの中に書かれている細かい情報ですね。
そういったものを一個一個のデーターの中身を見せていくという。
時に適したテンプレートというものになります。
では、このDTREVIEWもですね。
実際に。
HTMLファイルなどを作りながらですね。
編集を進めていこうという風に思います。
はい見せられたチョコで戻ってきました。
1度サーバーを止めてですね。
1から設定をしていきましょうでまずですね。
やっていくのがURLの作り込みですね。
ここでPATHと言うことでDETAILにしましょう。
でTODOって言っているはずビューと、これは同じようなリストビューと同じですね。
同じような形で設定をしていきます。
で、これ実はですね。
これだとちょっとエラーが出てしまうんですけれども、その理由はですね。
後で説明をしていきます。
ここで成功しました。
URLの設定完了しましたので、次にビューズを作っていきます。
ずっと出ている出ているビュー。
これはリストビューとも同じような流れですねで、テンプレートネームとして何を使うのかというと。
今回は出ていると。
HTMLというファイルを呼び出すという指示をしておきましょうで、どのデータベースのテーブルの中身を持ってくるのかというと、これも同じ
ですねというモデルのデータを持ってくるということです。
でこれ。
DT。
RUBYを継承してますので、このDTVIEWが入っている場所。
これも同じ場所なんですけれども、DTレビューの場所を指定してあげる必要があります。
URL頭ドットファイルの方もですね。
このTODODETAILっていうビューズドットファイルに入っているこのクラスの場所を指定してあげないとエラーが出てしまいますので、TODODETAIL
と指定してあげます。
えこの辺のインポートもですね。
なかなか1の値はエラーが出ることもあるかなと思うんですけれども、この辺エラーが出るとですね。
このツールDETAILがありませんよとかっていう指示してくれますので、その辺はやっていく中で、何か迷うってことは何かあんまりない
のかなというふうに思いますので、もしエラーが出てそういった表示がされると。
あインポートちゃんとしてなかったのかなとで、このエラー結構元の値たくさん出てきますので、一個一個修正しながら慣れていくのが
いいのかなというふうに思います。
はいで次にですね。
このテンプレートの中に新しくファイルを作っていきます。
DETAILドット。
HTML。
というファイルを作りますでここでですね。
リストビューの場合はオブジェクトリストというリストから一個一個ですね。
FOR文でデータを持ってきたんですけれども、DTREVIEWっていうのは一個一個のデーターですので、そのいきなりその一個一個のデータ
を取ってくることができるということですね。
ですのでで、その一個一個のデーターっていうのは、オブジェクトという名前のオブジェクトに入っていますので、ちょっとこう分かりづらいんです
けれどもオブジェクト。
例えばタイトルとすると、その個別の一個一個のデータのタイトルを表示させることができます。
で、今回タイトルとですね。
でも、この2つは表示させてていきましょう。
で、これで設定が完了しましたので、LANサーバーを押して実際にブラウザで確認をしていきます。
リストではなくて、これがディテールですねんで。
ベストですね。
エラーが出てしまいました。
で、このエラーを見てみましょう。
こう何て書いてあるかというとですね。
このTODODETAILというクラスっていうのは、マストビーCOLDURIと呼び出されなければいけませんとで、何で呼び出されなければいけません
かというと。
オブジェクトPKもしくはスラグ、そのオブジェクトPK。
返すスラグと共に呼び出される必要がありますよということが言われていますで、これ何なのかと言うとですね。
TTLビューっていうのは、一個一個のデータを表示する為の機能なんですけれどもじゃその一個一個のデーターのですね。
どのデーターを持ってくるんですかということを指示してあげないと。
DJANGOはどのデーターを持ってきてあげればいいか分かんないということで、今回はですね。
このURLDETAILっていうだけ書いてるんですけれども、これだとDETAILの中のどのデーターを持ってくるのかというのをDJANGOが理解
できないので、選ばれてしまうということになります。
ですので、このツールモデルの中のですね。
どのデータを表示するのかというのを指定してあげる必要があります。
で、指定する方法として、ここに書いたオブジェクトPKかスラグを使いますよという。
指示をしてるんですけれども、今回使っていくのはですね。
このオブジェクトPKというものを使っていきますで、これが何かというのをですね。
ちょっとお話をしていこうという風に思います。
はい。
ええこのファイル。
このファイル群の中でですね。
エラーが出てしまったんですけれども、モデルズドットPDFファイルがなくてですね。
メイクマイグレーションをしたときに作られるこのイニシャル1,000番目ですね。
データベースとあとはモデルズドットPRファイルの間の中間生成物みたいなものである。
この0001イニシャルbyというファイルを見てみましょうで、これを見るとですね。
えーTOOLモデルで定義したタイトルメモの他にですね。
IDというフィールドでこれ12モデルの説明をした時に簡単に追加でできていますよという話をしたんですけれども、この中にですね。
これプライマリーKEYイコールTRUEと書かれています。
で、PKっていうのはこのプライマリーキーの逆でして、データベースのテーブルの中でですね。
一個一個。
そのデータごとにですね。
番号が振られていくんですけれども、その番号がプライマリKEYというものとしてこう識別というかこう番号がどんどん振られていくというものに
なりますですのでですね。
この番号っていうのは、一個一個のデーターに振られているんですけれども、そのデータをですね。
確認するためにはどうすればいいかというとですね。
これDJANGOの管理画面ですね。
これを見てみましょうで、ここで1個のデータをクリックするとですね。
ここの上の部分を見てみるとですね。
ここに2っていう数字があるのが確認できます。
これは何かというと、このプライマリキーこのデータの番号が2番ということですね。
で、この買い物をするというのを見ると、ここ一番になっていますので、一個一個番号が振られているということが分かります。
例えば、新しくですね。
1個データを追加してみましょうっていうここでですね。
報告をすると。
上司に報告するというツールを作っていきます。
これをクリックしてみるとですね。
ここに3万という数字が入ってきました。
で、これもこのデータっていうのは3番というID3番というプライマリキーが与えられたということになります。
ですので、実際にですね。
これからやっていくのですね。
そのプライマリキーの番号をどこで指定してあげるのかということなんですけれども、ここのURLパターン図で指定してあげる必要があります。
で、この中でですね。
これもこういうふうに書いていきますよというものなので、覚えて何回も変えていくと覚えていくのかなというふうに思うんですけれども、
ここでDDLの先にこれはインってイン90ないですね。
インテージあー型。
整数型のプライマリーCUIという番号ですよという指示をしてあげますで、このPKと書くことによってDJANGOをですね。
この。
PKっていう数字。
例えばこれが3であれば、3番のデータを持ってくるんだなということを理解することができるんですね。
で2とかだったら、2のデータは持ってくるということをJANGOが理解できるようになります。
ですので、この設定をした上で、もう一度ブラウザから確認してみましょう。
はい。
ここで得られてしまったんですけれども、このDDLの先の番号例えば一番ですね。
一番ということを指定してあげると。
はい。
このように一番のデーターが出てきましたで、次に2という数字を入れると。
はい2番目のデーターが出てきましたね。
で3を入れると、3番目に作ったデーターが出てきます。
方法こそ徐々にそうするで、次に4番と打ってみましょう。
そうすると。
はいページの外ファンと言ってもエラーじゃないんですけれども、ここのルールには従ってちゃんとこのDJANGOがですね。
データを持ってこようとしたんですけれども、それに対応するURLに対応するものがなかったので、ページがありませんでしたよという。
エラーをこのように出してくれています。
ですので、リストビューとDJBのの違いはですね。
このリストビューっていうのは、リストを表示する為の機能が付いている。
DTMVIEWっていうのは、このようにPKAというものをURLに付けることによって、一個一個のデーターを取ってきて、それを表示すること
ができるということを頭に入れていただければなという風に思います。
今までですね。
リストビューとDTVIEWということでデータのリストを表示する方法と一個一個のデータの中身を表示する方法についてお話をしてきましたで
次にですね。
ここでちょっと一旦違う頃と言うかビューから離れてですね。
このHTMLファイルの見た目を整えるということをやっていきましょう。
先程のリストビューもDTREVIEWもですね。
非常に質素な文字がばっと並んでいるだけで、あんまり見た目にもきれいじゃありませんでしたので、その辺を整えていこうという風に思い
ますで、見た目を整えるために今回使うのはですね。
BOOTSTRAPというフレームワークを使っていきますで、BOOTSTRAPは冒頭、この講座の冒頭の方でですね。
フレームワークの例としてご紹介をしたんですけれども、改めて簡単におさらいをしていきましょう。
BOOTSTRAPというのをですね。
一言で端的に言うと、たくさんのコードが書かれたCSCSSファイルというものになりますで、CSSファイルっていうのはHTMLの見た目を整える
ための装飾のためのコードが書いてあるものになるんですけれども、例えばですね。
ここ左側にリブタグがあって囲まれている部分があります。
で、これ何も装飾がしなくて、CSSとしてCLASSとか指定した上でのCSSとしてこう色を付けたりとか、レイアウトの指定とかをしなけれ
ば、ただの何もない空白の空間になります。
ただですね。
このリブの中にクラスを指定してあげることによってで、そのクラスで指定されたもので、装飾をする中身っていうのを具体的に書くことによって、
このようにきれいな見た目を整えることができるとで、BOOTSTRAPというのはこの綺麗に整えるためのコードがたくさん書かれているファイル
のことです。
ですので、このファイルを使うことによって簡単にですね。
このCSSファイルの中に入ってあるCLASSとか、IDの名前をして、それを埋め込むだけで美しいHTMLファイルを作ることができるという
ものになります。
で、実際にですね。
このBOOTSTRAPというのを導入していこうという風に思います。
肺へ導入するために、BOOTSTRAPのサイトにアクセスしていきましょう。
ブートストラップと。
そうするとはい。
BOOTSTRAPのWEBサイトが出てきました。
でここでですね。
やっていくこと、この上にドキュメンテーションというのがあるんですけれども、このドキュメンテーションを知って、その下の方を見ていきます。
そうするとスターターテンプレートというのが確認できますで、このスターターテンプレートというのを使っていくと簡単にですね。
初期設定が終わるんですけれども、このスターターテンプレートで何をしているのかというと、今回する目的としてはBOOTSTRAPが備えている
CSSファイルですね。
これをリンクとして引っ張ってくることができるようにするということが大きな目的です。
それ以外はですね。
この辺は基本的なHTMLファイルの装飾というか、文法に従って表示をしてくれているコードを書いてくれているというものになります。
で、下の方にですね。
この辺。
JQUERYとかJAVASCRIPTっていうのが書いてあるんですけれども、これはですね。
HTMLのファイルの表示を動的にアニメーションとかそういったものを付けるために使われるもので、オプショナルってここに書いてあるんですけれども、
特にこうなくてもメーンのものメーンの機能ではないんですけれども、一応こういったものもあると更に便利にですね。
美しくHTMLファイルを作ることができるということで、これもまとめてですね。
一緒にコピーをして、今回貼り付けをしていこうという風に思います。
はいで戻ってきてですね。
このリストドットHTMLの中でですね。
ここで先ほどコピーをしたコードをそのまま貼り付けます。
はいでは付けた後にですね。
このコード。
先程書いたですね。
リストとしてデータを表示していくというコードをコピーしてきて、それをですね。
このBODYタグですね。
BODYタグがこのえして、メールのメーンの中身を書いていきますよという部分なんですけれども、ここに張り付けをしていきますで、ちょっと
見た目を整えて。
えきましょう。
はい同じようにですね。
DETAILビューも同じようにしていきます。
艦これを下によけて。
あ違うなんて言っちゃいましたね。
もう一回はい。
ここでコピーをしてあげます。
DETAILVIEWのところで貼り付けをしてこの2つのタグですね。
DJANGOのタグをBODYタグの下に貼り付けてあげます。
これでブラウザ上でどうなるかというとですね。
例えば3とかしてみるんですけれども。
だから、HELLOWORLD出てしまいました。
失礼しました。
これ何でHELLOWORLDと出たかというと、ここに絵一番たくとしてHELLOWORLDという指示がされているからですね。
これは要らないので、削除をしていきますで、リストドットHTMLもですね。
この一番タグは要らないので消していきましょう。
はい。
このようにですね。
表示でたんですけれども、何も奇麗になっていないということが分かります。
なぜかというと、この今、BOOTSTRAPを使ってですね。
CSSファイルを引っ張ってきたんですけれども、その引っ張ってきただけで、具体的にどこにどういった色を付けていくとか、そういう指示
をしないんですね。
ですので、今何もなっていないという状況になっています。
ですのでですね。
これから色をつけたりして整えていく必要があるんですけれども、それを整えていくためにですね。
このBOOTSTRAPのサイトの中から一個一個の表示を見ていこうというふうに思いますで、このブートサープのサイトですね。
日本語のページもあるんですけれども、この細かい中身に入っていくと、結局英語のコメントが入っていってしまってですね。
特にこれ見た目を整えるものですので、日本語でも英語でもちょっとこうイメージとして何て言うんっすか。
中身が英語の言葉がわからなくてもですね。
今回の設定の形でやっていけば、実際にですね。
このサイトを見ながら応用していくことが可能ですので、今回ですね。
この英語のサイトを使いながら、実際のBOOTSTRAPの使い方というのを見ていこうという風に思いますで、このドキュメンテーションの中でです
ね。
主にこれから使っていくのは。
このコンポーネンツと言うところと後はですね。
このユーティリティイズというところです。
これは実際にBOOTSTRAPでこんなデザインをするには、こういう風にクラスをして上げしてあげる必要がありますよということをこう教え
てくれてるんですね。
ですので、例えばここの黄色い枠を付けたければですね。
何人かのクラスとしてボーダーとして、これは下から5番目なので、12345。
これですね。
ワーニングこれ警告を意味してるみたいなんですけれども、こういったクラスをHTMLの中で指定してあげることによって色付けをすることができる
ということです。
で今回です。
これはですね。
一個一個色んなパターンがありますので、実際に見ていきながらこうこんな使い方があるんだというのを見ていっていただければなという。
風に思いますで今回ですね。
これから一個一個作っていくんですけれども、まず簡単なサンプルとして色付けをしていきましょう。
色付けをする為にですね。
今回、このコンポーネンツの中のあらつというものを見ていきます。
で、ここを見ていくとですね。
このそれぞれの中でですね。
奇麗な色とこうここがうまくカーブがされているような表示になっているのが確認できるんですけれども、これを実際に反映させて。
HTMLの見た目を揃えていこうという風に思いますで、ここはですね。
この下を見てみると。
こういったクラスが指定されています。
で、アラートでプライマリという指定を指定をすることによって、この青い表示ができるということがわかりますので、今コピーしたものをですね。
実際に張り付けていきます。
で聞いているとHTMLを開いて、これが先程の個別のタグのタイトルとメモになりますので、ここに張り付けをしていきます。
で、DIVタグでCLASSの指定がされて囲われていますので、この中にオブジェクトの例えばTITLEっていうのを入れていきましょうで、
これをもう1個ですね。
同じような形で。
例えば、こういうふうに入れていきます。
はい。
これでCSSファイルを後から引っ張ってきて、そのファイルの中に入っている。
このアラートプライマリーというクラスを指定してあげましたので、ここの見た目がですね。
きれいに整っているはずです。
実際にブラウザで確認してみましょう。
家で行っている家として検討します。
はいこのようにですね。
先程ブートストラップの中であったこの青い奇麗な表示っていうのがそのままこのようにですね。
表示されてるのが確認できました。
でこれ2にするとはい同じようにできました。
で3にしても勿論同じようにすることができます。
で、これでですね。
簡単に色んなパターンを覚えていくと、どんどん見た目が奇麗なサイトを作ることができるようになりますので、このブートストラップっていうのは元
はですね。
このやっぱり覚えることが多いと言うか。
この中身どんなものがあるのかというのを一個一個見ていくのが結構大変なんですけれども、一回覚えてしまうとですね。
これ使った方が効率的にウェブサイトを作れるかなと思いますので、こういった形でブートストラップを活用していくということで、頭に入れ
ていただければなと思います。
今までですね。
ここでBOOTSTRAPを使って見た目をちょっと整えるということをやってきました。
で次にですね。
もう1個ですね。
DJANGOの機能を使ってですね。
ちょっと簡単にもう少し。
HTMLファイルを編集していく方法について、御紹介をしていこうというふうに思いますで、今までですね。
ここでリストとDETAILの2つの。
HTMLファイルを作っていたんですけれども、これをよく見てみるとですね。
結構こう重複してるところが多いというのが分かるんじゃないのかなというふうに思います。
それで、この上のHEADの情報であったりとかですね。
このこの辺の情報をですね。
これはリスト。
HTMLファイルであっても、ディテールのファイルであっても同じということが分かります。
で、こういった。
重複した部分をですね。
一個一個同じようなコードを書いていくのは、結構効率が悪いというのはイメージはきやすいのかなという風に思います。
これからですね。
細かいもう少し情報アップデートするファイルとか、新しく作るファイル削除するファイルというのをたくさん作っていくんですけれども、その一個一個
のファイルごとにですね。
同じコードを書いていくのは、非効率という風なことが言えますので、実際にこのDJANGOはですね。
そういった非効率さをなくすためにですね。
1個のテンプレートをですね。
他の。
HTMLファイルで使い回すというような機能を備えています。
で、これをちょっと図を見て説明をしていこうという風に思います。
はいで、ここでベースドットHTMLを使ってテンプレートを使いますというのがあるんですけれども、このベースドットHTMLというのは、特にこの
BASEという名前にする必要ありません。
ただ、一般的にはこのBASEという名前にされることが多いですので、BASEドットHTMLという風にしていますで、このBASEドット。
HTMLが何かと言うとですね。
これは他の。
HTMLファイルを作るときのですね。
ベースというか基礎になるというか。
レイアウトとかその基本的な共通する情報を入れているような。
HTMLファイルになりますで、ここでですね。
ちょっとこのファイルを見てほしいんですけれども、この。
この図ですね。
で、これ一般的なBLOGのような。
HTMLファイルブログのようなウェブサイトのようなイメージを持っていただければなという。
風に思います。
ヘッダがあって、ここに何らかの。
そのブログのタイトルがあってフッターがあります。
で、その右側にコンテンツとしてそれぞれのそのウェブサイトの中の記事ですね。
記事の中身があって、左側にサイドバーとして何か広告が入ったりとか、そんなものがあるのかなという。
風に思いますで、この基本的なレイアウトがどのページでも同じようなレイアウトを使っていくのであれば、このレイアウトをですね。
まず初めに作成しておいて、そのレイアウトを基準として、他のサイトも作っていく方が効率がいいということが言えるということで、使える
のがのベースドットHTMLファイルというものです。
で例えばですね。
今回、これから作っていくリストドットHTMLの場合は、このテンプレートをベースに違う情報を埋め込んでいくということで、ヘッダーの部分には
これはリストですよという。
タイトルを入れていくで、下の方にはリストの場合は航空。
入れようかなとかですね。
この左のサイドバーの部分にも国語を入れようで、ここのコンテントのところにはリストですので、一個一個。
その商品のタイトルがこうどんどん入れていくような構成にしようという。
風にですね。
このベースのレイアウトを元に中に入れていくコンテンツを一個一個決めていくことができるということができます。
で、次にですねで、ここに次にDETAILSとHTMLというのがあるんですけれども、ここはですね。
このトップのところはリストではなくて、一個一個のデーターの詳細ですので、詳細という中身が出るようにするという。
設定をするとかですね。
後は下の方には個別の記事とに関係してくるところで。
リストでは広告にしたんですけれども、今回、このDETAILの場合はお問い合わせにしようとかですね。
で、左側は広告でリストと同じような広告を張っていこうで、このコンテンツのところにはこういった個別の商品の細かい情報を載せていこ
う度ということで、この基準になるものを1個作って、その基準となるものをベースに違う情報を違う。
HTMLの中で埋め込んでいくというのが、このベースドットHTMLを使ってテンプレートを使い回すというものの、こう大きなざっくりとしたイメージ
になりますで、これから実際にですね。
コードを書いていってベースドットHTMLファイルの使い方についてお話をしていこうという風に思います。
では、ここから実際にベースドットHTMLファイルを作ってテンプレートを使い回すということを実装していきましょう。
初めにですね。
このテンプレートホルダーの中にベストと。
HTMLファイルを作ってあげます。
で基本的にはですね。
何をしていくのかというと、ここでですね。
ブロックという名前はつくって任意の名前を指定し上げます。
例えば、ブロックへ足あと入れて。
で。
遠藤ブロックヘッダーと言うのを入れてあげるとしましょう。
でここでですね。
ベースドットHTMLファイルをセーブしてですね。
次に。
これはリストビューですね。
リストドットHTMLファイルなんですけれども、これをですね。
一回消してしまいます。
全部消してしまって。
ここでEXCHANGEというコードを打っていきます。
でベースドットHTMLとこのようにタグを使ってコードを書くことによって、このリストドットHTMLファイルはベースドットHTMLファイルを持っ
てきますよと、これをベースにして作っていきますよという。
指示をしていくことができます。
で、次にどうするのかというと、先ほど指定したブロックへたという。
指定をして、この中にこれがヘッダーですという。
風な記載をしてあげることによって。
テンプレートを使い回すことができるということです。
これが基本的なですね。
ベースドットATPを使ったこのベースがあって、この中にいろんな。
構成とかレイアウトとか個々で基本的なレイアウトを作って行くんですけれども、そのレイアウトの中でここに実際のデータを入れてきますよという
指示をしていてで、ここで実際の中に入れていくデータを指定していくというのが全体的な流れになりますで、このざっくりとしたイメージ
の上で、今回これからですね。
細かい設定を進めていきましょうでベースドットHTMLですね。
これにはですね。
先程作ったBOOTSTRAPの。
初期情報をまず入れていきましょう。
このスターターテンプレートというものをですね。
これコピーしますで。
BESTとHTMLの下に張り付けをしていきます。
でこの中身を使っていくんですけれども、大きく分けるとですね。
このタイトルの下のボディの下のですね。
ここに大きな2段構成としてレイアウトを今回つくっていこうというふうに思います。
その2段構成っていうのが減ったというブロックと。
コンテンツというものですね。
この沿道ブロック。
コンテンツとして挙げます。
このようにしてあげることによって。
このベースのHTMLファイルをですね。
このヘッダーというものとコンテントという2つのものがあって、その2つのものに他のHTMLファイルの中にデータを入れ込んでいくことによって
こう。
このコードを使い回すことができるということができます。
ですので、リストロットHTMLファイルですね。
ここで。
例えばですね。
リストですと、ここで書いてあげてで。
クロックコンテント。
エンドブロックコンテントとしてあげて、この間21で先ほどですね。
作ったもう一回同じような。
法文を使ったですね。
リストの使い回しというのをやっていきましょう。
こう。
開いてね印OBJECTリストとしてあげて。
で。
縁エンド方を閉じタグを作ってあげます。
で中に入れていくのは、一個一個の個別のデータですので、2重の中、括弧で括ってアイテム度とタイトル。
入ってってプロットメモというふうに書いてあげます。
はいこうして上げてサーバーを立ち上げてですね。
このリストを見てみましょう。
ラウンジサーバーをしてあげます。
で。
URLで、URLの中でリストという風に打ち込んであげましょう。
はいそう、するとこのようにですねリストですということで、1のヘッダーで指定したものが出てきて、その下にこういった形でデーター
が3つ出てきました。
でこれにですね。
BOOTSTRAPのタグをですね。
適用していこうという風に思います。
ブートストラップに戻ってですね。
このドキュメンテーションのコンポーネンツと言うところのアラートというものですね。
でここで。
この見た目を適用しようということで、今回ちょっと違う色にしてみましょう。
例えばですね。
この灰色のグレーにするので、このコードをコピーしていきます。
それを2つ作っていきますので。
つコピーした上で、このリブタグで囲まれた中身のところにITMTITLEというのとアイテムメモというのを入れていきます。
はい。
これで見た目が整っているはずです。
なぜかというと、これはこのベースドットHTMLファイルを持ってきて、このペーストとHTMLファイルの中にはこのBOOTSTRAPのCSS
が入ってるからですね。
ですので、うまく表示がちゃんと綺麗になっていれば成功ということですね。
ここで更新を押すとはい。
このようにきれいな表示がここに出たのがわかります。
これ、BOOTSTRAPのレイアウトをうまく引っ張ってくることができたということですね。
ですので、このように一個一個オブジェクトのタイトルとメモというのがBOOTSTRAPが収集装飾によって美しく見た目が称えられたということです。
で、これが基本的なベースだと。
HTMLファイルの使い分けになりますで、これからですね。
いっぱいコードを書いていくと、だんだん使い方に慣れていくと思うんですけれども、このいった形で作っていくと、効率的にWEBサイトを
作ることができるということを頭に入れておいていただければなという風に思います。
はい。
ここまででですね。
BOOTSTRAPを使って見た目を整える方法ということと、後はベースドットHTMLファイルを使って見た目をですね。
テンプレートを使い回して、効率的にWEBサイトを作る方法という2つの方法をご紹介してきました。
ですのでですね。
この2つの武器を使いながらですね。
これから実際にリストビューをですね。
本番環境を見据えた美しい画面にしていこうという風に思いますで、その本番と言うかですね。
完成物としては初めにご紹介したこんなイメージになっていきます。
上にタイトルがあって、下にそれぞれのツールの中身が書かれているというものですね。
ですので、このイメージの中身を実際に。
BOOTSTRAPを使いながら、あとはベーステッドとして見えるファイルを使い回しながら作っていこうという風に思いますではじめにですね。
この実際にこういったレイアウトを作っていくんですけれども、まずこの上の部分ですね。
この部分を作っていきます。
そのためにですね。
BOOTSTRAPのサイトを見ていくんですけれども、まあ、これ答えからちょっと入ってしまうんですけれども、ここの項目を使っていこうという
風に思いますで、これどこに何があるのかっていうのは、また、ちょっと重なお話になってしまうんですけれども、実際に見ながらですね。
理解していくのがいいかなと思いますので、一個一個この中身ですね。
コンポーネンツっていうところ、この中身とあとはユーティリティですね。
この2つはですね。
一個一個見ながらあこんなのがあるんだなということをですね。
頭に入れていっていただければなというふうに思いますで、今回はこのジャンボトロンというのを使っていきます。
で、ここのコードをコピーして、こんな見た目がちょっときれいっぽいので、これを使っていくことにしましょう。
はいでビジュアルスタジオ神戸に戻って。
で、ここで実際に先ほどコピーしたものを張り付けていきます。
で、今回はですね。
今リストですね。
リストドットHTML中のヘッダーですね。
このヘッダーに先ほどコピーしてきたBOOTSTRAPの内容を張り付けてあげますで、この上でですね。
どんな表示になるのかというのを見ていきましょう。
LANサーバーをして。
HELLOWORLDのリストをですね。
見ていくとはい。
このように上がちょっと奇麗な表示になったのが確認できました。
で、これ今謎の言語になってしまってますので、この中身を整えていきましょう。
ここで。
タイトルがTODOリストと言うもので。
TODOリストを作って毎日を効率的に。
そうしましょうと。
というふうに書いて上げますで、これでもう一回確認してみると。
はい。
このようにですね。
DOODLEしたという表示がされました。
で次にですね。
この下の部分ですね。
この下の部分もちょっと見た目を整えていこうというふうに思います。
で、下の部分使っていくのはですね。
既存で今も使っているこの新つというこの囲みですね。
色がついたきれいな囲みを使っていこうというふうに思います。
で1個ですね。
ちょっとこれはブートストラップの中でですね。
これは細かい説明がなくて、これはちょっと覚えていただきたいところなんですけれども、今ですね。
このHTMLファイル横幅ぎりぎりいっぱいになっちゃってるんですけれども、この横幅をですね。
いい感じに整えてくれるようなコードがあります。
で、それがですね。
コンテナという形でタグを使ってですね。
コンテナというクラスを指定してあげることによって、この幅を調整してくれますので、今回はですね。
このコンテントの中でリブタグを作って。
コンテナと言うクラスを指定してあげます。
このコンテナの幅っていうのも、ブートストラップの中で指定されてるものですねですので。
そのブートストラップ。
で指定されたいい感じの幅にしてくれるというものになります。
コンテントの中の法文が終わった後ですね。
ここの綴じのディブタグを入れてあげます。
はいでこうするとどうなるのかというとですね。
実際にブラウザで見てみましょう更新をします。
はいそうすると、このように幅がですね。
こう外側からうまくですね。
短くなってちょっと見やすくなったのが確認できます。
でこれからですね。
つくっていくんですけれども、レイアウトとしては上にタイトルがあってで、その右側にこれは締め切り期日ですね。
記述が入っていてで、その下に3つこのようなですね。
ボタンがあって、それぞれの画面に生きるという風な形になっています。
ですので、この上の。
タイトルとかをですね。
これそのまま。
簡単な普通の文章ですのでいいんですけれども、この下のボタンのところですね。
このボタンのところのレイアウトをですね。
ここから持ってこようという風に思います。
そうするとこの下の方にですね。
ボタン図というところがあって、こういったところで実際にですね。
この辺の見た目がですね。
色んな見た目のボタンがたくさんあるということですで、この中で実際に一個一個確認しながらですね。
まあ、好きなのを取っていっていただければなという。
風に思うんですけれども、ボタンタグこれからですね。
ジャンルを作っていくときには、色んなリンクボタンじゃなくてですね。
タグを使った方がこの見た目を崩さずにですね。
実装していくことができますので、ボタンをこれから使っていく時は、基本的にはこのボタンタグじゃなくてですね。
タグで囲われたものを使っていくのがいいのかなという。
風に思いますで、今回はですねじゃ。
このボタンを使っていこうという風に思います。
コピーして。
このタグをですね。
張り付けていくんですけれども、どこに貼り付けるのかというと。
このタイトルですね。
それ一個一個のTODOリストのタイトルの下に、今回こうリンクを設定しました。
で、その下のですね。
メモですね。
これは要らないと言うか。
あくまでもTODOリストのリストの部分にはタイトルだけを入れますので、この細かい中身の部分は消してしまいます。
で、これでまたブラウザで確認をしてみましょう。
はい、そそるですね。
このようにですね。
タイトルがあって、右側にボタンがあるということができました。
これで少しずつ見た目が整ってきたということが言えます。
で月にちょっと遠のいていくんですけれども、まずですね。
横並びにタイトルとこの中身が横並びになってしまいましたので、それがそうならないように。
ここの部分はですね。
ピータグで囲ってあげましょう。
このあたりはちょっとCSSの知識でもありますので、あまり細かいところまでは突っ込んではいかないんですけれども。
もうちょっと見た目はこれから整えていきます。
で、このブートストラップなんですけれども、これは結構ですね。
何て言うんでしょう。
この子クラスの中身を見ると、なんとなくその意図するものがわかるようになっているんですね。
例えば、このボタンですとDISABLEDってあるんですけれども、このDISABLEDっていうのはこのボタンが使えないようにするディセーブルにする
と言う意味ですので、どうなってるかって言うと、このボタン上にカーソルを乗せてもですね。
こうリンク先ですよっていう表示が出ないようになっちゃってます。
ですので、これちょっと消してみるとどうなるかなという。
風にしてやってみましょう。
これでセーブをして、もう一回見て更新をします。
はい、そうするとですね。
このようにボタンの上に押すとリンクですね。
このタグの上を押すとリンクですよという表示が出るようになりました。
このようにですね。
一個一個ちょっとこうCSSの中身をいじっていきながら、レイアウトを整えていくということもやっていくと、BOOTSTRAPの知識がです
ね。
高まっていくんじゃないのかなという。
風に思いますで、このエルジーっていうのはラージというものの略で、おっきいボタンのサイズにしますよというもので、今回このボタンのサイズ
がちょっと大きめになってしまいますので、ラージは消していきます。
それでセーブをして、もう一回ブラウザで確認をしてみましょう。
はい、そうすると大きさもちょっと整ってきたのかなということが確認できます。
で最後にですね。
この下の色ですね。
色をちょっと調整していきたいんですけれども、色を調整する為には何かって言うとこれもですね。
見ていくと何となく分かってくると思うんですけれども、このボタンプライマリとかセカンダリっていう表示があります。
で、このセカンダリを見ると、ここもセカンダリーっていう名前になってます。
同じ名前ですね。
で、こういったものをちょっと意識しながらですね。
BOOTSTRAPを見ていくと、ブートストラップの7つのところでですね。
このようにですね。
このプライマリーとかセカンダリとかいう風にですね。
先程ちょっと見てきた同じような言葉が並んでるということが確認できます。
で、これはですね。
この辺の色をコントロールしてるのは、このプライマリーセカンダリデンジャーとかWARNINGとかこのような名前なのっていうのが結論なんですけれども、
このようにですね。
実際に。
こういった文字が色をコントロールしているということがなんとなくわかりますので、ここで例えば1個ですね。
これをワーニングとしたり。
あとは。
こうデンジャーというのにしてみましょう。
で更新を押すと。
はい。
このようにですね。
色がWARNINGとこれデンジャーの色ですね。
このようにちゃんと色が変わっているということが確認できます。
で、最後にこの辺の色をもう少し整えてですね。
今回のこの勉強を終わっていこうというふうに思います。
まずですね。
ここ先ほどこの今回の柔道ではですね。
3つボタンを作る必要がありますので、3つ目のボタンをまず追加していきます。
で、この色なんですけれども、色はですね。
この緑っぽいのと緑と青というのを使っていきますので。
この中でこれですね。
緑っぽいのと緑と青ですねを使っていきますので、サクセスとプライマリとあとはですね。
下から3番目なのでいい方ですね。
はいインフォとプライマリーとサクセスと言う3つの指定をしていこうというふうに思います。
インフォ。
プライマリ。
サクセスと言うことで、これでまたブラウザを見てみると。
はい。
このようにですね。
きれいな色になるすることができました。
で、最後にこの中身ですね。
これプライマリーではなくて編集とかですね。
あとはここを。
削除詳細という。
風に書くことでこれいらないですね。
クラウドを見てみるとはい。
このようにですね。
編集削除詳細ということで、この見た目を超えることができました。
これでも、だいぶかなり本番に近いデザインになってきたということが言えるのかなというふうに思いますで、もちろんこれ細かいこのリンクをし
ても何も出ていかないんですけれども、こういった形でブートストラップを使っていくことによって、効率的にウェブサイトの見た目を整えていく
ことができるということを頭においていただければなという風に思います。
はい。
見た目をここで整えてきたんですけれども、こっからはですね。
1個実際にですね。
JANGOのデーターベースと絡めて、ちょっと見た目を整えるということをやっていきたいなという。
風に思います。
具体的に何をするのかというと、この一個一個のTODOリストがあるんですけれども、このTODOリストにですね。
データーベースとして優先度という項目を付けて、その優先度に応じて、この見た目をちょっと変えていくということをしていきます。
で、実際にですね。
これ完成物の中で新しく投稿するというページなんですけれども、そのページの中でですね。
ここにプライオリティーというのがあって、これ優先度ということで高い普通低いという選択ができるようにして、それぞれ選択をすると、それに
応じてここの色が変わっていくということをしていこうという風に思います。
で行動としてですね。
どういうふうにやっていくのかというと、これがリストのHTMLファイルなんですけれども、この中で一個一個のTODOリストの色を指定
しているのは、このアラートセカンダリーというものですね。
で、これは先程BOOTSTRAPでお話をした。
こういったセカンダリーとかインフォ方とかプライマリーとかこの辺がですね。
BOOTSTRAPのサイトをもう一回、ちょっと見直してみましょう。
はい。
これBOOTSTRAPのサイトですね。
でドキュメンテーションのコンポーネンツと言うところで、例えばこのアラート。
と。
いう警告画面の中ではこういった色んな色があるんですけれども、その色を制御してるのはですね。
この辺の文言ですね。
この辺の言葉によって、色が制御されてるということが分かります。
ですので、何をするのかというとですね。
ここの今、セカンダリとしてされているところを。
DJANGOのデータのタグですねを入れ込むことによって制御することができるにします。
でここに実際入れていくのは、このオブジェクトリストのリストから一個一個取り出されたアイテムっていうデーターですね。
1個。
このオブジェクトの中に入っているプライオリティープライオリティーというデーターを一個一個のデータごとに持ってくることによって、ここで指定さ
れたものがですね。
色と紐づいていて、実際に一個一個のTODOリストの色が変わっていくという形になります。
ですのでですね。
これから実際にですね。
このモデルズドットファイルを編集して、その優先度に関する項目を追加していきましょう。
で、優先度を変える為の項目プライオリティという名前にします。
プライオリティイコールでここでですね。
モデル図指定するのをですね。
CHARフィールドを指定するんですねで、これはですね。
結論としては覚えていくというか一個一個、こういう作り方があるのあるよというのをですね。
いろんなサイトを見ながら、知識をつけていくっていう形しかないのかなと。
暗記というよりは、実際にこういうことをしたいということで。
そのモデルの中で選択肢を入れたいという形でグーグルで検索をしてですね。
その結果、出てきた情報を見ながら、一個一個こう知識を増やしていくというのが一番いいのかなという。
風に思っていますで、ここで指定したチャームフィールドですね。
これはまずマックスレングスという最大の長さを指定してあげないといけませんので、マックスレングスを指定してあげます。
僕は50としましょうで、次はポイントなんですけれども、選択肢をですね。
一個一個入れていく場合に、このチャームフィールドの中にはですね。
このチョイシズというものを指定してあげることによって、どの選択肢を使っていきますかという指示をでき、指示をさせることができるんです
ねで、これが結構便利な機能ということで今回はですね。
プライオリティーという名前にしましょうでプライオリティー実際にですね。
これを呼び出しますよという指定をしてあげたんです。
けれどもじゃ。
その指定をしてあげる必要がこのプライオリティーを作っていく必要がありますので、ここで作っていきましょうでプライオリティーをですね。
この選択肢はタプル型のデータでですね。
作っていきますでえーとですね。
形から作っていくとこんな感じでですね。
今回高い低い高い優先度が高い普通低いという3つの項目を作っていきますので、この3つのデーターを作っていきます。
でそれぞれですね。
その中にも2つずつデーターを入れていくんですけれども。
これが何かというとですね。
この右側というのは実際にですね。
管理画面とかDOODLEの一個一個のリストを作っていくときに、画面上に表示される文字列になりますで、こっちは実際に保存される
データですね。
保存されるデーターというのは、今回の例でいくとこのリストドットHTML。
で。
アイテムドットプライオリティということで呼び出したデーターのですね。
中身というか、その呼び忘れたデーターの名前が入ります。
ですので、このアイテムドットペナルティーで実際にCSSとして使うために呼び出される。
名前っていうのは、このブートストラップと関連付けられたインフォとか、プライマリーとかサクセスとかそういった名前にしていく必要があります。
で、実際にコードを書いていくと、ちょっとイメージが浮くのかなという。
ふうに思いますで、1は優先度が高いということで、はいという高い優先度を指定してあげますで、ここで指定するのはBOOTSTRAP
の中で。
優先度が高いですので、危なそうな日ということで、今回この赤いものを指定してみましょうで赤いものはですね。
ここに書いてあるんですけども、このデンジャーというのが赤と赤い色の指定をしてあげることになりますので。
ここでデンジャーと書いてあげます。
で次にですね。
ノーマルと普通ということで、普通のものはこのブートストラップの中で。
じゃ今回はこの辺の理論にしましょうかね。
下から3番目のものですね。
下から3番目でインフォというものにしてあげます。
で一番低いのはですね。
今回じゃこの緑にしてあげましょうということでサクセスというものですね。
でので、イン程サクセスというものをそれぞれ入れて込んでいきます。
ここでインフォでここで。
サクセスとこれは労ですね。
優先度が低いということで、LOWという指定をしてあげます。
で今回ですね。
TODOリストを作っていくんですけれども、このタイミングで最後にですね。
完成物としての1個、もう1個のデータがあるんですね。
このデューデート。
これは〆切というか期日ですね。
この日ぐらいに作りますよというものなんですけれども、そのデータをですね。
作っていこうという。
風に思いますで、日付に関してですね。
管理するためには。
どういった名前のモデルを使うかというと。
データフィールドと言うものを使います。
で、これも初期で色んな設定できるんですけれども、何も入れなくても作成することができますので、まずこういった形でデーターを作って
いきます。
で、これで西武をしていきましょう。
で、これからまずやっていくのをですね。
ここからMAKEマイグレーション図とマイグレートをして、この変更を実際にデータベースに反映させていく必要があります。
ですので、これから実際にまたMAKEマイグレーションとマイグレートをして、このデータベースへの更新手続をやっていきましょう。
はい。
ここからですね。
実際にメークマイグレーションとやっていきます。
ここでコマンドを打っていきましょう。
まずはですね。
今いる場所を確認して。
はいマネーちょっとPi。
ファイルが入っている今ホルダーにいますので。
PYTHONスリーマネージドと。
BYMAKEマイグレーションというコマンドを打っていきます。
でここでですね。
ちょっとこう何か言葉が出てきましたねで、これが何かということをちょっとこれからお話をしていこうという風に思いますで、こう何が
書いてあるかと言うとですね。
脳温はブルッということで、ぬる何もデータが入っていませんよと言う項目である中でえーとというものを。
追加しようとしていますと。
ただ我々というかこのJANGOはですね。
これをすることができませんとで、これ何を言ってるのかというと、もう既にですね。
このタイトルとかメモとかそういったものを基準とした形でデーターベースというかデーターがですね。
何個か作られています。
これですね。
買い物をする書類をつくるというものがあってで、このデーターが作られてるんですけれども、このデータを初めて作った時はデューデートという
フィールドがありませんでした。
で、これからデューデートというフィールドを追加すると、この今まで作ったツールの一個一個のリストの中にもデューデートという項目が入って
いくんですけれども、その新しくできたデューデートっていう項目は、何もこれを作るときにはもちろん、何も入力してませんので、データーが
入らないNULLっていうものが入ってしまうんですけれども、ただですね。
JANGOの場合は1日、ここのデータベースで設定をする時にですね。
NULLを許容しますよとNULLイコールTRUEと言う指定もすることができるんですけれども、デフォルトではですね。
このNULLイコールTRUEというのは、NULLイコールFALSEでNULLっていうデータは受け付けませんよと何かしらのデータを入れてくださいね
という。
指定がされていますので、今回ですね。
この既存のデータに何もデータを入れないことはできませんので、このデューデートというフィールドにどういう整理をしていきますかと言う質問
をされてるんですねで質問にですね。
回答していく必要なんですけれども、この一番と2番とありますね。
で2番はですね。
これ一回、ちょっと止めて、またちょっと作り直しますよという。
出直しみたいな形の選択になりますで、この1番目はですね。
プロバイダーワンオフデフォルトなるということで、何かしらの数字をこの既存の融通のデーターの中に入れていきますよという。
指示をすることになります。
で今回ですね。
この一番にしてみましょう。
はいで一番にするとで、何がをどの数字をデフォルトとして入れますかという質問が出てきますで、これは既存のTODOリストの中の1個、
1個のデーターの中のデューデートに対して何を入れますかという。
指示が出るんですけれども、これは何でもいいんですけれども、例えばですね。
ここのJANGOでは丁寧にですね。
このタイムゾーンになると、これ今の時間なんですけれども、この今の時間っていうのを締め切りの時間として取り敢えず設定しますかということ
を聞いてくれています。
ですので、ここはそのまま。
タイムゾーンになると入れると。
この点に関しては何て言うんでしょう。
特に問題なく完了したということが言えますでですね。
次にですね。
これ同じように、このプライオリティーに関しても同じような質問が来ていますので、同じように設定していきましょう。
プライオリティーに関しては。
ここで指定した通りですね。
この辺のレンジャーかインフォかサクセスですね。
この辺をデフォルトていた方が分かりやすいというか。
整合性が取れますので、デンジャーと全て。
とりあえず既存のトゥルーの項目に関しては優先度高いというものを指定してあげようという風に思います。
これでENTERを押すと。
はい無事にですね。
この2つの新しいファイルですね。
MNマイグレーションに基づいて、新しくこのファイルが作られたということが分かります。
で、実際にここを見てみるとですね。
はい000にとで、この0001っていうのを元に作ったタイトルメモというものですね。
で、2番目のものを見てみるとはいここにですね。
余ATフィールドということで、新しくこういった項目を追加しますよということが確認することができます。
で、このメイクマイグレーション図をした後にマイグレートと。
することによって。
あ失礼しました。
すいません。
ここですね。
PYTHONマネージドPAじゃないとできないですね。
ピグレット。
はい。
はいで、これでマーグレットが完了して、実際にデーターベースへの反映が完了したと言うことになりますで、これで一回、ちょっとLANサーバー
をしてですね。
管理画面に入って中身の確認をしてみましょう。
あ道民としてユーザーネームとパスワードを入れてログインしてあげます。
でも、このモデルの中がですね。
1個例えば見てみると。
はい。
このようにですね。
このプライオリティーっていうのが先程デフォルトと言うかこの今までなかったものに新しく追加した時に、ここのデーター何に入れますかということ
ではいという指定をしましたので、ここにはいというものが入っていますでデューデートですね。
このデューデート、いつまでの締切にしますかということに関しても、タイムゾーンなどということで、これを編集している。
まさに今の日時ですね。
これがここに入っていると。
いうことになります。
で、これこういった形でどんどんデーターを追加していく時にですね。
いろいろDJANGOは丁寧にこういう風にした方がいいですよという風な説明をしてくれますので、その説明に従いながらですね。
少しずつこういうことをやっていくんだということで、頭に入れながらどんどんこう知識を増やしていっていただければなという風に思います。
これでですね。
プライオリティの設定が完了しました。
で実際にですね。
このプライオリティーを設定しましたので、ちゃんとこれがHTMLファイル上で反映されているのかというのを見てみましょう。
ここですね。
HTML。
リストドットHTMLファイルなんですけれども、先程このアイテムドットプライオリティということで、データーベースのテーブルのデーターの中からですね。
この優先度というデーターがここの。
一個一個ルーの項目の中から引っ張られてきて、その中身っていうのがここに書き込まれていくとつまりですね。
初期設定としては先程デンジャーというものを設定しましたので、全てデンジャーで赤くなっているとちゃんとこれが反映されたということが確認
できるということになります。
で、ブラウザに戻ってですね。
リストのURLをリクエストしてリストを見てみましょう。
はい、そうするとこのようにですね。
この一個一個のデーターがちゃんとですね。
赤くなってデンジャーというCSSが反映されてるということが確認できます。
で一応ですね。
もう一回管理画面からデーターを操作して。
では、この項目をですね。
NORMALとしてセーブして、2行目の項目をRAWとしてセーブしてみますで、もう一回リストを見てみましょう。
はい。
そうするとこのようにそれぞれ設定した優先度に応じて個々の色が変わってくるとこうなってくると、だんだんこうTODOリストっぽいなという
ような感じで奇麗にできてきたなという。
何か雰囲気が感じられて、何かいいですよね。
ここでですね。
はい、実際に色を変えることができると。
いうことを実装として学んでいきました。
はい。
今まではですね。
ここまでは。
DJANGOの中でですね。
見た目を整える部分を中心に話をしてきました。
具体的には、ベースドットHTMLを使ってテンプレートを使ってこう見た目を整えるものを使い回していくというようなことをしたりとかです
ね。
あとはBOOTSTRAPというフレームワークを使って、ウェブサイトの見た目をきれいに整えるといったことをやってきました。
でここからですね。
また、ちょっとBEAUの方に戻って、いろんなDJANGOで備わっているビューを使って、ウェブサイトを効率的に作っていこうという風に思い
ますで、先ほどというか前の方でですね。
CRUDと言う4つのデーターベースの扱い方についてお話をしたんですけれども、今まで学んできたALですね。
リードということでデーターを取ってきたり、表示したりするような機能で、それがDJANGOの中ではリストビューだったり、あとはDTREVIEW
として使われているものですね。
これに対して今回やっていくのはCREATEVIEWと言うことで、実際にデータを作っていくデーターを新しく作る時に適したテンプレートを使っ
てデーターを新しく作るというウェブサイトページをですね。
簡単に作っていきたいなという風に思います。
はい、VISUALSTUDIOCODEの画面に戻ってきました。
ここからCREATEVIEWの作り込みをしていきましょう。
まず、初めにするのがですね。
ここのテンプレートフォルダの中にですね。
CREATEHTMLということでCREATEVIEWを呼び出した時にですね。
持ってくるテンプレートをまず指定してあげます。
CREATEHTMLファイルを作ってあげますで、次にですね。
URLの繋ぎ込みをしていきましょう。
CREATEというURLがリクエストされると、TODOCREATEと言うクラスを呼び出すという指示をしてあげます。
で実際に呼び出すクラスですね。
TRUECREATEがどこに入っているのかということで、ミューズドットファイルの中に入っていきますよと言うことを指定してあげます。
CREATEですね。
でと、PAファイルで実際にルールCREATEというクラスを作っていきましょう。
CREATEVIEW。
ここも同じように、DJANGOのモジュールの中からクリエイト日を引っ張ってきてあげます。
まず指定してあげるのがテンプレートネームですね。
でしょCREATE。
この辺は同じような形で設定をしていきますでモデルですね。
あと、新しくクリエートしてデータを作っていくんですけれども、そのデータっていうのはどこに保存されていくのかというと、その保存される
テーブルですね。
モデルを指定してあげる必要がありますので。
でモデルという指定をしてあげますで、これからですね。
実際、CREATEVIEWを作りながら、何回もちょっと実装というか、サーバーを立ち上げて確認していくんですけれども、あえてちょっとエラー
をですね。
何回か出しながらですね。
このCREATEVIEWを作るためには、どうすればいいのかということについてお話をしていきますので、取り敢えずですね。
この同じような形でまずデーターを作ってその中でですね。
実際の画面を見ながら理解を進めていきたいなという風に思いますで、ここでCREATELOTHTMLの作り込みをしていくんですけれども、
ここは。
HTMLファイルですので。
ええ何て言うんでしょう。
DJANGOとはちょっと関係ないところではあるんですけれども、順番に設定をしていきましょう。
まずは点図です。
これはベースドット。
HTMLファイルの読み込みですねをしていきます。
で、今回はですね。
取り敢えず。
コンテントだけを引っ張ってきて。
とりあえずですね。
この表示を表示というか、このCREATEVIEWの中身をですね。
表示して確認するということを中心にやっていこうというふうに思います。
エンドブロックコンテントと。
で中で実際にこれフォームを書いていきましょう。
フォーム。
アクション。
するとゴール。
スマート。
でHOMEがあってインプットタイプサブミット。
加入イコール作成すると。
この中でですね。
ここは。
思わずピーとしてあげますで、これバラバラとコード書いてしまったんですけれども、順番に見ていきましょうで。
まず。
これフォーム。
これもHTMLの関係なんですけれども、ホームタグで潜って、この間でフォームをしてデーターのやり取りをしますよということを指定して
あげていますで、このフォームがフロムになっていましたね。
だからフォームですね。
はいでフォームアクションというのは、このインプットタグのサブミットボタンを押してデータを飛ばした後にドッグ。
次にどこにそのデータを飛ばしますかという指示をしてるのがこのアクションという場所ですねで、こう何も指定してないと同じ場所ですね。
同じ場所にまた帰ってきますで2番目がですね。
METHODイコールポストと言うことで、これはHTTPDとしてデーターのやり取りリクエストを送る時にですね。
色んなやり取り送る方法をですね。
指定することができましてで、この大きく分けると、これ主にですね。
POSTとGETっていう2種類があるんですけれども、この2種類に関してはですね。
次の章のところでちょっと詳しくていきますので、まずはですね。
一般的には問い合わせフォームとかは何か。
フォームを送る時っていうのはPOSTがPOSTというものが疲れますので、ここでは一般的にPOSTが使われますよとで、この辺のメソッド
POSTっていうのはGOOGLEとかで調べてもかなりデーターいっぱい出てきますので、実際興味がある方をですね。
調べていただけるといいのかなという。
ふうに思いますで、下の方でインプットタイプサブミットバッジを作成するとで、これはデータを送信するボタンですねですね。
このサブミットっていうタイプの種類のタグと言うかですね。
ボタンを作ってで、そのボタンを押すことによってデーターが送られるという形にしていきます。
これもフォームを作る上では、非常に一般的な形になりますで、ここのですね。
フォームアズピーっていうものですね。
これがポイントと言うか、これがですね。
JANGOのタグになるんですけれども、パフォーマンスって何かっていうと、その実際にデータを送るフォームをですね。
タグで囲ってで、そのタグの中にフォームっていうのを出していくという。
便利なタグっていうような機能で、覚えていただければなという風に思います。
ですので、実際にですね。
ここのフォームアズピーという指定をしてどういった表示がされるのかということを、実際のブラウザを見ながら確認をしていこうという風
に思います。
ですので、ここでLANサーバーをしてサーバーを立ち上げて。
クレートを呼び出していきましょう。
で、CREATEVIEWはコレですね。
CREATEというURLを指定してあげればいいということになります。
はい。
ですので、このリストというのではなくて、クリエイトという指定をしてあげます。
はいでこれでですね。
1個また、ちょっとエラーが出てしまいました。
で、これどういったエラーかというと、このツールCREATEを使うにはフィールドという属性を使わなければいけませんが、フィールドという属性
を指定していないので、駄目ですよというエラーが出てしまいました。
で、これは何かというとですね。
DJANGOの中でCREATEVIEWを作っていくためにはですね。
フィールドといって、このモデルの中のテーブルのどの項目を使いますかとではですね。
このCREATEの中にフォームASとしてフォーム一個一個のどの項目を入力させますかという。
フォームを作っていくんですけれども、このフォームっていうのは、このモデルの中のどのデータどの項目を使うようにしますかという。
指示をしてあげないとエラーが出てしまうということですね。
ですので、実際にここでFIELDSという指定をしてあげますで、今回はですね。
全ての項目を引っ張ってきますので、この4種類ですね。
タイトルメモプライオリティデューデートとこの4種類のデーターをフィールドの中に指定してあげますタイトル。
でも。
プライオリティ。
旧データと。
いう風な失礼をしておきます。
ちなみに、これ関係ないようなですね。
名前を指定してあげると、それでも選ばれてしまいます。
例えば。
AAAという名前を知ってサーバーを立ち上がるんですけれども。
戻るをしてですね。
ここで。
クリエイトと言う指定をすると。
はい。
このようにですね。
UNKNOWNFIELDということで、これはAAAというのはよく分かりませんよと知りませんよと、この序モデルの中にAAAはありません
よということを言ってくれてますので、実際にこのフィールドを指定するときは、モデルの中に入っているものを指定しなければいけないという
ことを頭に入れておいてください。
ですので、これデューデートと知っていきます。
でもう一度。
ページに戻って戻るを押して。
はい、CREATEをリクエストして呼び出していきます。
とこのようにですね。
フォームが出てきました。
で、これのソースを表示するとするとですね。
ここのフォームのあ、これフロムの言っちゃってますね。
これ修正していきます。
この下を見るとですね。
このピーということで、このピーで囲まれていることが確認できます。
つまり、これはこのピータグで囲まれた形で、中にフォームを作ってくれてますよということを意味しています。
ちょっと戻ってですね。
CREATE。
これをセーブしてなかったのかもしれないですね。
はいこれで。
ほんのちょっと更新をして、実際にデータを作っていきましょう。
飲み物を買うART中、適当に入れちゃいます。
ノーマルとして3月10日で作成するというボタンを押します。
そうするとですね。
また、エラーが出てしまいました。
で、このエラーは何かというとですね。
このCSRクロスサイトリクエストフォージェリと言う。
これセキュリティー上の脆弱性というかですね。
欠陥と言うかですね。
このセキュリティー上、ちょっと問題があるような可能性がありますよということで駄目ですよという。
エラーが出てるんですけれども、これに関してはですね。
DJANGOはこういったセキュリティに対するですね。
対策を予め作っていてくれてます。
ですので、フォームを作る時にはこの対策っていうのを必ず入れ込むというルールみたいなイメージですので、これに関してはですね。
実際にそのタグというのを埋め込んでいく所がありますで、このテンプレートをここを見ていただきたいんですけれども、この。
はいこ、これをちゃんと入れてくださいねと言うような指示がありますので、実際にこれを入れてあげますで、どこにいるのかというと、
このフォームの開きの次のところに入れてあげるのが一般的ですから下。
はい。
これで分をしてあげます。
でサーバを止めてもう一回立ち上げてみましょう。
はい、鯖立ち上がりました。
皆戻ってここを支援して。
データを入れていきましょう。
飲み物を買う。
コロっとしましょうか。
優先の低いと3月とかで作成するというしました。
ここでですね。
また、エラーが出てしまいました。
で、このエラーの中身を見ていこうという風に思いますで、ここで書かれてるのはですね。
ノーURLリダイレクトというということで、何を意味してるのかというと、リダイレクトするURLはありませんよと言ってるんですけれども、
これはですね。
実際にデータの作成はできましたと。
ただ、データの作成が完了した後に、このウェブサイト上で次にどの画面を出せばいいか分かりませんよということを言ってますでですね。
ここのエラーはちゃんと解決策もですね。
ちゃんと説明してくれてましてで、その解決をする為には、いざプロバイダーはURLでURLをプロバイダーするURLを実際に何か指定する
もしくはこのモデルの中でですね。
GETABSOLUTEURLメソッドっていうのを定義しなさいという。
風な指定がされています。
ですので、このエラーを解決する方法は何種類かあるんですけれども、今回はですね。
一つこのURLを指定するという方法で、エラーを回避していこうという風に思います。
で実際にコードを書きながらですね。
どういった形でやればいいのかということについて説明をしていきます。
はいでどこにコードを書いていくのかというとですね。
このビューズドットファイルに書いていきますで、ビューズドットPIファイルの中のですね。
このツールCREATEクラスの中でコードを書いていくんですけれども、変えていくのはですね。
サクセスURLというものを書いていきます。
で、このサクセス言われるっていうのは、このCREATEビューの中に入っている属性で、このサクセスURLっていうのを指定することによって、
実際にこのCREATEビューにおいてはデータの作成が完了した時に遷移させるURLを指定することができるということです。
便利の器が便利な機能の一つという風に考えていただければなというふうに思いますで、このサクセスURLですね。
実際にじゃどのURLに戻すのかという指定をしていくんですけれども、その指定の方法はですね。
リバースLAZYというものを使っていきます。
で。
えー、このREBIRTHRAGEっていうのはですね。
これもこういったものがあるよっていう形で覚えていっていただきたいんですけれども、この意味についてはこれからちゃんと説明をしていきます
ので、はい安心していただければなというふうに思いますで、まずこのリバースLAZYっていうものを指定したんですけれども、このREBIRTHRAGE
っていうメソッドを使うためにですね。
このREBIRTHRAGEが入ってる場所を指定してあげないといけませんので、実際にどのモジュールにこのREBIRTHRAGEが入っているのか
ということを調べていきましょう。
はいでここでですねジャンゴ。
リバースLAZYとは調べてみましょう。
そうすると上で出てきたサイトがあってですね。
これの日本語版にしていきます。
日本語でも、あんまり結構、ほとんど英語になっちゃってますね。
で、ここでリバースLAZYと言う。
行動を指定していくとはいリバースレジというのがありました。
でこのリバースLAZYがあるんですけど、これがどこのモジュールから引っ張られてきてるのかというのが書いてないので、その周辺をばらばら
っと見てみるとですね。
ここにリバースという記載があることがわかります。
で、リバースっていうの中は、どのモジュールからインポートされてるかっていうところのDJANGO。
URL図と言うモジュールからインポートされていますので、このDJANGOをURL図というモジュールをインポートしてみましょう。
この辺はもしエラーが出たらですね。
また、ちょっと違うモジュールを調べてみるということをしてみると、いいのかなというふうに思います。
でジャンゴ。
URLず、インポートリバースLAZYと言う風に指定してあげます。
で、ここからですね。
リバースについてちょっとお話をしていこうかなというふうに思いますで、先程DJANGOのオフィシャルドキュメントの中でリバースLAZYとリバース
という2種類があったんですけれども、これはですね。
リバースLAZYっていうのは、このクラスの中で指定する場合にはリバースLAZYを使いますで逆にですね。
メソッド関数このこんな感じでDIFFサムファンクションリクエストと。
いう形でファンクションベストビューの場合ですね。
この場合はリバースと言うのを使ってあげますで、これ何でこう使い分けるのかって言うと話ですね。
これは実はあまり細かい説明は、DJANGOのオフィシャルドキュメントにも書いてなくてですね。
クラスの場合は、このコードが呼び出される順番をちゃんとこう整理していく為に、このメソッドを使わなければいけないっていうことだと思うん
ですけれども、クラスの場合はリバースLAZYという指定をしてくださいというのが、DJANGOのオフィシャルドキュメントにも書かれていますので、
クラスの中でリバースを使う場合はリバースLAZYを使うという風に覚えていただければなという。
風に思いますで、この革新というか、本質的な部分でじゃ、このリバースが何かということについて、これからお話をしていこうという風に
思いますで、リバースっていう言葉をですね。
これ逆回しと言うかですね。
逆にするっていう意味があります。
うのとかもしかしたらやったことある方いるかもしれないんですけれども、リバースっていうのはこう。
今まで時計回りに回ってきたのがですね。
このリバースっていう解を出すと、反対回りになっていくんですねで、このように普通の流れの反対の流れをしていくという。
イメージを持っていただければなという風に思います。
で、何が逆回りなのかというとですね。
これURLを逆回りするというようなイメージです。
これ、どういうことかというとですね。
JANGOの仕組みとしては、まずブラウザからURLが入力されて、その中にそれがリクエストとしてですね。
DJANGOが受け取ってで、その受け取ったリクエストのURLに応じて、次に呼び出す美容師していくということをしていました。
で、今回やっていくリバースではですね。
この逆のことをするんですね。
逆のことをするっていうのは、まずこのビューを指定してあげます。
でビューを指定することによって、そのビューに関連付けられたURLを呼び出していくということをするんですね。
ですので、そういったところからリバースという名前が付いているということを意識していただけるといいのかなという。
風に思いますで、リバースを使ってですね。
実際にビューからURLを指定していくんですけれども、その方法としてですね。
今までちょっと紹介しなかったんですけれども、DJANGOで一般的に使われるものとしてですね。
この一つのURLのパターンURLとその次のビューですね。
そのパターンごとにですね。
名前を付けることができます。
この名前はもちろん、何でも大丈夫です。
今回はですね。
例えば、このリストビューの場合は、リストという名前を付けましょう。
次にですね。
DDLビューの場合は、DETAILというのが付けてあげますで。
クリエイトの場合は、CREATEという名前をつけてあげましょう。
こうすることによってですね。
このリストという名前を指定することによって、このリストとこのURLが関連付けられるというか。
このリストを指定することによって、このリストのURLを呼び出すことができるという形になっていきます。
で、実際にこのビューズドットPIファイルで。
REBIRTHRAGEとしてとも言われるをリバースしていくのかというところでリストを指定してあげますで、これでリダイレクトさせるURLを
指定することができましたので、またブラウザでですね。
確認をしていきましょう。
杯後、先程のエラー画面ですね。
で戻るボタンを押して戻ってもう一度作成するというボタンを押してみます。
はい、そうするとですね。
無事にこのリストビューに戻ってくることができました。
で、下の方のデーターを見てみると、この飲み物を買うというデーターができていることが分かります。
で、これ2つできてるんですけれども、これはですね。
初めにエラーが出た時もあったんですけど、初めにエラーが出る時もですね。
データ自体はできていますとただ、その後の画面の遷移ができなかったって言うだけで、データー自体はできているので、今回2回作るという
ボタンを押したので、2つのデーターができているということになります。
はい。
でここまでがですね。
CREATEVIEW1はい。
ちょっとエラーがあったのでややこしかったんですけれども、その中でフォームの扱い方とか、そういったことに関してお話をしてきました。
で、ここができればですね。
あとは結構、残りはですね。
アップデートビューとディートビューなんですけれども、この2つはあまり難しくありませんので、まあサクッとですね。
その辺の中身について、ちょっと実際に理解しながらコードを書いていこうという風に思います。
はい。
次はテリーと別府に次いで見ていきましょう。
DELETEはCRUDの中のDEEに該当します。
で、DELETE削除するということで、実際にデータを削除するときに適したものですね。
で、そのCRUDのDELETEに対応するDJANGOのビューがDELETEVIEWということになります。
でデータをですね。
自分で1から消していくとなると、データベースの操作とかが入ってきて、ちょっとコードを変えていくのもややこしくなってしまうんですけれども、
このDELETEVIEWを使うことによってですね。
非常に簡単にデータを削除することができるということを、実際に行動を書きながらですね。
理解していっていただければなというふうに思います。
でも、実際にコードを書いていきましょう。
はい。
えVISUALSTUDIO神戸に戻ってきましたね。
ここでですね。
実際にDELETEVIEWを作っていきます。
DELETEVIEWも流れとしては同じような形で、まずはこのフォルダテンプレートフォルダの中にDELETE。
HTMLファイルを作ります。
で次にですね。
URLの繋ぎ込みをしていきましょう。
TODODELETEASVIEWとこれも同じですね。
Noも付けちゃいます。
DELETEという名前を付けいただけます。
でここでですね。
また、ちょっとポイントなんですけれども、デリートをするっていうのは、個別の一つ一つのデーターを指定して、そのデータを削除していく
ということですので、ここもですね。
DTREVIEWと同じようにプライマリキーを指定してあげる必要があります。
これをしないとただ、DELETEVIEWとして、このURLを打ち込んでもですね。
どのデータを消せばいいのか。
DJANGOは理解することができませんので、何番目のデータを消しますよということをここで指定してあげる必要がありますで、次にVIEW
を作っていくんですけれども、一回ちょっとサーバーを止めますね。
でこれから作っていくビューズドットPIファイルの中のツールデリートというのを元に書いちゃいますで、ここからクロス。
グループデリートという指定をしてディジットビューを継承します。
で、ここでどこから継承するのかということで、このDJANGOBSDGENERICのモジュールからLILYとビューをインポートしてくるということ
ですね。
で、ここでテンプレートネームと。
モデルを指定しています。
モデルを終始上げるのは土嚢、どのデータベーステーブルの中にあるデータを対象にしますかということで、そのモデルを指定しないとどのデータ
を消せばいいのかということがわかりませんので、これを指定する必要があるということですね。
で、実際に次にですね。
DELETE法HTMLのファイルを編集していきましょう。
まずはベースドットHTMLを引っ張ってきます。
串点つぼとHTMLで今回もですね。
ヘッダーとかを付けずにブロックコンテントということで、いきなり本文のところだけ変えていくような形にしてしまいましょう。
ブロックコンテントで削除する場合もですね。
書いていくのが基本的にはフォームとの形で書いていきますメソッドアクション。
そうと。
ポストと。
で。
インプットタイプサブミット。
バリュー。
削除しますと言ってあげます。
でこれ何してるのかっていうと、そのフォームの内容自体はもう引っ張ってくるんじゃなくてですね。
あくまでもこのURLのところで。
どの何番のデーターを消すかっていうのがもう指定されていますので、あとはそのデータを消すかどうかというところで、このフォームの中
で対象とするデータを削除するかっていうのを、このフォームタグを囲ってですね。
実装していくという形になります。
もう非常にシンプルなんですけれども、こういった形でデータベースの中の操作をすることができるということで、DJANGOは非常に便利だと
いうことをイメージしていただければなと思います。
で先にちょっと書いて寝てしまうんですけれども、DELETEの場合もCREATEVIEWと同じようにですね。
この削除が無事に完了したら、次にどの画面に遷移させますかという指定をしてあげます。
指定したでないといけませんので、同じようにですね。
削除が無事に完了したらリストを呼び出すということにしていきましょう。
これで成功してサーバーを立ち上げます。
でブラウザで確認してみましょう。
でこのときですね。
ちょっとまず初めに道民サイトに行ってですね。
このそれぞれのデータが何番なのかということを確認しましょう。
例えば、これ一番下ですと、一番下のここを見た場合ですね。
ここの一番上、このこれは一番というプライマリキーが設定されているデータということで、一番のデータもありましたので。
一番のデータを消すということをしてみましょう。
DELETE1と11になっちゃいました。
1杯で削除しますというボタンがあって、これをクリックすると枝が出ました。
失礼しました。
これをですね。
さきほどCREATEVIEWでやった同じエラーを出してしまいました。
セキュリティ上の対策ができていませんということですね。
ですので、ここで。
はい。
これCREATEビデオってことですね。
もう一回ものって更新して削除しますと言うのを押すと。
データが消えているということがわかります。
アドミンで確認してみましょう。
それでモデルを見ると。
この一番下のデータが2番になっていますね。
ですので、1番目のデータが無事に消えたということです。
で消えた後のSAXURLを指定することによって、どの画面に次に遷移させるかということを指定したので、その画面が実際に表示された
という形になります。
では、次にですね。
アップデートビューを作っていきましょう。
で、アップデートビューっていうのはクラウドの中のですね。
いうアップデートデータを更新する書きていくというものに対応したビューですね。
ですので、このアップデートビューというのはですね。
データを更新する時に適したテンプレートと言うことができます。
では、今回もですね。
実際にコードを書きながらアップアプレットビューを作っていこうという風に思います。
で流れとしてはですね。
今までともうほとんど同じということが言えます。
まず、初めにテンプレートフォルダーの中にですね。
アップデートドットHTMLというファイルを作っていきますで、次にURLの繋ぎ込みをしていきましょう。
アップデートします。
アップデートの場合もですね。
どの番号のどのプライマリ機のデータを使うんですかと言う。
指定をしてあげないとJANGOがよくわからなくて困ってしまいますので、この印とPKという形でプライマリ機どの番号のデータをアップルと
しますかと言う指定をしてあげましょう。
アップデートAZVIEWですね。
これは同じですね。
まクラスですので、アドビを使っていくということです。
でNAMEイコールアップデートと言うことで、これでURLの設定ができました。
でこれからですね。
ビューズドットピアファイルの中でユーザープレートというクラスを作っていくんですけれども、それをここで指定してあげましょうというアップデート
とビルドとファイルに移ってクラスの作り込みをしていきます。
でというアップデートのクラスはですね。
アップデートビューというのを継承していきます。
ですので、ここでモジュールの中からアップデートビューをインポートしていきましょう。
でテンプレートネームですね。
どのHTMLファイルを呼び出すかというのはアップデート。
HTMLファイルを呼び出していきますでモデルですね。
これはというというモデル。
これも同じように、どのデータベーステーブルの中のデータを編集しますかというのを指定してあげないといけませんので、当然モデルという
指定を下げますで、このアップデートビューの場合ですね。
FIELDSということで、これCREATEVIEWをまた思い出していただきたいんですけれども、これはそのモデルの中のどのデーターをですね。
引っ張ってくるんですかとで、これ全部指定してあげなくても指定したものだけを対象としてデーターを作ったり、デートアプリをするという
ことができますので、今回はですね。
このCREATEビューと同じように全てのデーターをちょっとこう更新する権限をこの分ウェブブラウザ上でできるようにするということで、この全て
の指定をしていきます。
最後にサクセスURLですね。
これも実際、データの更新が無事に完了したら、次にどの画面を表示させますかという指定をしてあげる必要があるということですねで、
リバースLAZYでリストという指定をしてあげます。
で、こっからアップデートドットHTMLファイルの作り込みをしていきましょう。
まあ、基本的にやっていくのはですね。
もうほとんど同じですね。
行く捨てん頭でテイストとHTMLでベストとHTMLファイルを引っ張ってくるということをしてで。
その中のコンテンツの中に情報を更新するデーターを入れ込んでいきます。
エンドブロックコンテンツと。
で指定していくんですけれども、これクリエートビルと同じようなイメージですね。
ホームアクション。
そうとイコールポストですねえ。
また、フロムになっちゃいましたね。
ホーム。
はい。
でインプットタイプサブミットですね。
でデバッグ。
この辺ちょっとHTMLですのでサクっと書いていきます。
値としては更新するですね。
更新するという記載をしていきます。
リフォームの土地タグを書いて中に実際にフォームの指定をしていくんですけれども、CREATEVIEWの場合はですね。
このようにですね。
ホームあずピーという主張しました。
失礼しましたでこれは。
ピータグでフォームを書くということをしたんですけれども。
もうここはちょっと違う方法で評定していこうかなというふうに思いますでこれですね。
データーベースの中のデーターを扱っていくということでデーターの場合。
オブジェクトだったんですけれども、フォームの場合はフォームを使ってそれぞれの属性を指定することによって、そのフォームの項目を表示させること
ができます。
実際にですね。
コード書いてみましょうで、このモデルスロットファイルを見るとですね。
この4つの項目がありますので、それぞれの項目をここで指定してあげます。
フォームドットタイトル。
事と。
メモですね。
はい。
小室とPRAYHOLIDAY最後に。
ホームドアと牛デートですね。
はい。
このように指定してあげました。
で、これでアップデートビルが完成しているはずですので、サーバーを立ち上げてブラウザで確認していきましょう。
はい。
アップでいうと、2番目のデータを更新するということをしていきます。
ただ、これがデータが出てきません。
何て言うか、ちょっと見ていきましょう。
行動を見ていくとですね。
ここのところですね。
ここですね。
ここのコンテントじゃなくてコンテンツになってました。
えーとこのベースドットHTMLファイルでですね。
指定したもうこれ任意の名前でいいんですけれども、今回コンテントという名前に指定していますので、このアップデートHTMLファイルでも同じ
ようにコンテントという指定をしなければデータが表示されないという原因でした。
でここですね。
ちょっとさっき忘れてました。
クロスサイトリクエストフォージェリとくんということで、セキュリティー対策をしていくということですね。
これで設定が無事に完了して修正も完了したということが言えるはずです。
えブラウザで確認してみましょう。
更新ボタンを押すと。
はいこのようにですね。
2番目のデータがこのように表示されましたでですね。
ここはですね。
ちょっと横並びでごちゃごちゃっとしているんですけれども、ページのソースを見てみるとですね。
ここを見ていただけると。
ピータグで囲まれていないというのが分かります。
ホームアズピーというのをクレートビューで作っていたんですけれども、このフォーマーピーっていうのはピータグで囲っていくので、縦にずらっと
並んでいたとデーターが並んでいたんですけれども、今回はあくまでもフォームの属性ということで、一個一個のデーターの中身だけを取り出し
てきたということですので、そのデーターがそのままずらずらっとごちゃごちゃっと並んでしまったというようなことが言えます。
で、実際にデーターを更新してみましょう。
例えばこうですが、こうこうタイトルなんですけれども、この書類を作るというタイトルで書類をじゃ作って相談という。
名前に変更してみましょうで更新ボタンを押します。
はい、そうするとサクセスURLで指定したこのリストに戻ってきてで、ここのタイトルですね。
タイトルを見てみると、書類を作って相談という。
名前にちゃんと変わっているということが確認できました。
これでですね。
今までリストビューDETAILビュー後は、CREATEVIEWDELETEVIEWアップデートビューという形で5つのビューをですね。
作っていきましたでそれぞれですね。
データを扱っていくんですけれども、こういった形で同じようにテンプレートを使い回すことによって、非常に簡単に色んなデーターをですね。
操作しながら表示させていったり、編集したりすることができるという。
イメージを持っていただければなという風に思いますで、これで殆どもう完成なんですけれども、最後にですね。
このURLの繋ぎ込みというか。
今はまだこのボタンを押しても、それぞれのデーターの編集画面とかに行きませんので、この辺の編集をしたりですね。
後はここにデューデートですね。
その締切の記述を入れたりですね。
ちょっと細かい修正をして、最後に完成をしていきたいなという風に思います。
最後にですね。
細かい修正とあとは、URLの繋ぎ込みをしていきましょう。
で一番大きなポイントはですね。
ここの部分ですね。
今一個一個のTODOリストの中のですね。
リンクボタンなんですけれども、これは今何も指定されていませんでここをですね。
ちゃんと例えば、この編集というボタンを押すと、その指定された番号のデーターの編集をすることができるとかですね。
この削除を押すと、ここで設定されているデーターの番号のデータが削除される画面に行くとかですね。
それぞれのデーターとちゃんと対応するような設定をしていくという必要があります。
で、実際にここでコードを書いていきましょう。
でこれはですね。
JANGOのタグを使っていくんですけれども、URLということで。
失礼します。
このURLの次にですね。
クォーテーションで囲ってあげることによってどのURLを呼び出したかという指定をしてあげることができます。
これはリバースと同じようなイメージを持っていただければなというふうに思うんですけれども、このURLとbyファイルで。
指定した名前ですね。
この名前を指定し上げることによって、その名前に対応したURLを呼び出すことができるということです。
ですので、設定をしていきますで、ここでですね。
URLとして編集ですね。
編集っていうのはアップデートという名前を付けましたので、アップデートという名前を入れていきます。
で、ここも同じようにですね。
URLとして。
編削除ですね。
ですので、DELETEと言う名前を入れていきます。
で、ここは詳細ですので。
URLディテールと言う名前を入れておきます。
はいで、これで実際にWEBサイトのブラウザ上で確認していきましょう。
更新ボタンを押して。
でみるとですね。
こういう風にエラーが出てしまいました。
これをですね。
今、ちょっとここでエラー出るのは早いかなというイメージもあったんですけれども、このエラーはですね。
何を言ってるのかというと、そのURLで移動させるデータのですね。
個別の指示がされていないので、そこでエラーが出てしまったということが言えます。
これはどういうことかというとですね。
ここのURLアップデートという指定をしてあげてですね。
このボタンを押すと編集画面に行くんですけれども、そのどの何番目のデータの編集画面に行くのかという指定をしてあげていませんので、
エラーが出てしまったということが言えますでですので、何をしなければいけないのかというと、ここのアップデートを呼び出す時にですね。
何番目のデータを編集するのかという番号をですね。
ちゃんと教えてあげる必要がありますで、このときですね。
このURLというDJANGOのタグの中にではですね。
いろんな引数を追加で指定してあげることができますで、今回はですね。
このそれぞれのデータの番号をですね。
指定してあげる人がありますので、その番号を指定するんですけれども、それは何かというとですね。
このアイテムドットPKという形で指定をしてあげますで、このアイテムっていうのはこの法文で回して入ってきて出てきた。
一個一個のデータですね。
ですので、この順番に入っていくんですけれども、それぞれのデーターの番号をプライマリきですねをこのような形で取ってきて、それをこの
URLに渡してあげるんですね。
でURLに渡してあげることによって、このURLずっとPIファイルの中のアップデートのこの印とPKですね。
この番号がわかるので、何番目のデータを編集すればいいのかがわかるようになるというような流れになっています。
ですので全てですね。
ここはいいとPKアイテムドットPKという形で。
何番目のデータかという指定をしてあげる必要があります。
はい、これでセーブをしました。
これで無事に設定が完了しているはずですので、ブラウザで確認しましょう。
GOSHボタンを押します。
はいで戻ってきて、編集ボタンを押します。
はい、このようにですね。
ちゃんとデータの編集画面に移りました。
で、これを押すとですね。
ここに報告をするという形でちゃんとこの。
データに基づいた編集画面に入っていることがわかります。
で、詳細画面を押すと。
はい。
このようにですね。
このタイトルと中身ですねが表示されていることがわかりますで、この報告をするもですね。
詳細を見ると、このように確認ができますで編集をするをしてですね。
ここで。
優先度を変えるとはい。
このように優先度が高くなって赤くなりました。
このようにですね。
ちゃんとURLつなぎこみがですね。
これで無事に完了したということになります。
はい。
では最後にですね。
見た目をちょっと整えて、このTODOリストの作成を終わっていこうというふうに思います。
ですので、ここはですね。
DJANGOの機能とかの話はしませんので、見た目とかであれば別にいいよという方は、次の章に入っていただければなというふうに思い
ます。
でこれからですね。
ちょっと見た目きれいにするんですけども、まず初めにですね。
することはここの部分ですね。
ここに期日いつまでにしなければいけないのかという。
情報を入れていきましょう。
と入れる場所はここですね。
ここにというというのは、一個一個のデータのタイトルが入っていますので、ここのデータのタイトルの次のところにですね。
期日ということで。
入ってるYOUDATEという形で記述の記載をしてあげました。
で更新ボタンを押すと。
はいこのようにですね。
いつまでにしなければいけませんという記述が、ここに書かれているようになりましたで次にですね。
また、ちょっとやっていくのこの詳細ですね。
今詳細のところはこんな感じでタイトルと中身がですね。
何か別々の列になってしまっていますので、ここをちょっと整えていこうかなというふうに思います。
ってディテールのファイルですねで、ここちょっと見ていただくとですね。
ブートストラップのところの次にベースドットHTMLの指定をしていたんですけれども、そのベースドットHTMLで使い回すということがここでは
反映されていないませんので改めてですね。
ちょっとここで作り直していこうかなというふうに思います。
具体的にはですね。
このリストの項目を引っ張ってきちゃいましょう。
リストの項目を引っ張ってコピーして張り付けておきますで、タイトルのところですね。
この上のところ、これはリストビューですので、リストと書いてあるんですけれども、詳細画面としましょう。
ここで。
でDOODLEの詳細ですと言うような前に鬼才にしてあげますで、このコンテントのところですね。
ここはリストの項目ではなくて、ここはオブジェクトとして指定してあげる指定していく必要がありますので、消していって1からちょっと変え
ていこうかなというふうに思います。
まず初めにですね。
これでちょっと表示を見てみましょう。
更新を押すとはい、詳細画面ですという表示が出ました。
でさらにですね。
この中でコンテンツを書いていきましょう。
で初めにですね。
やっていくのはですね。
DVクラス。
コンテナとこれはですね。
リストビールのとこでもちょっとやったんですけれども、このコンテナっていうのはですね。
ブートスワップで入ってるクラスの名前で、このコンテナを指定してあげることによって幅をですね。
整えて全画面表示と言うか、横幅ギリギリではなくて、中にちょっとこう幅余裕を持たせた表示をすることができるというものですので、
ここでまずコンテナを作って幅を調整するということをしていきます。
で次にですね。
一個一個のデーターを入れていくんですけれども、その時にですね。
BOOTSTRAPのサイトを見ながらやっていきましょうかでずっとストラップ。
ドキュメンテーションのですね。
コンポーネンツですね。
で一個一個のツールはですね。
今回はそしたら、この緑色で作っていこうかなという。
風に思いますので、この緑色のサクセスというところでコンテンツを持ってきて、それをDETAILHTMLの中に張り付けてあげます。
で、この中に実際にデーターを入れ込んでいくんですけれども、その前にそれぞれの項目をピータグでだと。
囲ってあげましょう。
ピータグピータグ。
ピーターグッと街。
で中に実際にデータを入れ込んでいきます。
エレコム方法は、DTREVIEWの場合はオブジェクトということで、その指定された番号に応じたデータを呼び出すことができます。
で、タイトルとして次のところは。
オブジェクト。
メモとして最後は
オブジェクト。
のタイトルとメモとプライオリティーと10デートですね。
締め切りですね。
これを指定してあげますで、これでブラウザを確認してみましょう。
はい。
このようにですね。
この2番目のデータの中身のタイトルがこれで、中身がこれで記述がこれという表示になりました。
で、これもうちょっと整えるためにですねタイトル。
中身。
記述と言う形で書いていきます。
はい。
このようにですね。
タイトルの中身記述とこの3つの表示を出すことができました。
これで何となくトゥーループっぽくなってきたのかなと。
このようにですね。
タイトルがあっていく。
こう編集詳細ですね。
このボタンを押すと、この中身が出ていくという形になりますで、一番最後に新規作成のボタンを作っていませんでしたので、それを作っ
ていきましょう。
新規作成を作る為にはですね。
このリストをVIEWのところで入れていくんですけれども、このデータを一個一個取ってくる。
コンテナーの下のところに入れていきましょう。
で、何を入れていくのかというと、このタグのところを拝借していきます。
ええタグがあって。
CREATEという名前からURLをですね。
呼び出していくということですね。
で、CREATEVIEWの場合は番号で、それぞれのデータの番号とかは入りません。
新しくこれから作っていきますので、それは必要ないということですね。
で、名前としては新規作成ですね。
はい、これでちゃんとできているはずです。
はい。
こちらボタンっぽくなっちゃいましたけれども、これボタンを押すとはい、ちゃんと新しくデータを作れるという形になりますね。
でタイトルとしてTODOリストを作ると。
作。
ってはい。
3月とか作成とするとはい。
ここにですね。
新しくちゃんとTODOリストができました。
これでなんとなく見た目がきれいなですね。
サイトができてきたのかなということで、これからどこまでこだわるかっていうのは、それぞれの完成度によりますので、今回見た目を整える
ことが主目的じゃありませんので、この辺でですね。
BOOTSTRAPを使うという紹介をすると同時に、ここでTODOリストはとりあえず完成という形にしていこうという風に思います。
TODOリストの作成ですね。
大変お疲れ様でした。
今回もですね。
非常にたくさん学ぶことあったのかなというふうに思いますで、いずれにせよですね。
このDJANGOをですね。
理解を深めて学びを深めるためには、何回もコードを書いていくというのが一番いいのかなという。
ふうに思いますで、今回色んなことをお話ししていたんですけれども、勉強していく中でですね。
こういったポイントを改めて意識しながら復習していくといいですよということで、簡単に今回学んだことをまとめてみました。
順番に見ていきましょう。
まず初めにですね。
この講座では、モデルについてお話をしました。
でモデルっていうのは。
そのデーターベースを扱う為に使われるファイルのことです。
で、モデルズドットファイルというDJANGOでの主要なファイルの一つがあって、そのファイルにコードを書いていくことによって、データーベースを
簡単に扱うことができるということですね。
でモデル。
ずっとファイルを作った後は、まずはMAKEマイグレーションというコマンドを打ってデーターベースとモデルずっとPIファイルの間の中間生成物のよう
なものを作っていくという話をしました。
でMAKEマイグレーション図をすると、そのモデルスロットPDFファイルのデーターが変わっていくたびにMAKEマイグレーション図をしてで、それ
に応じてMAKEマイグレーション。
図2の結果番号が振られたファイルがですね。
順番にできていくということが言えます。
で、一個一個ファイルができていて、都度更新の履歴を確認することができるということですねで、その上でMAKEマイグレーション図をし
た上で、前グレードというコマンドを打つことによって、実際にデーターベースにデーターを書き込むことができるということをお伝えしました。
お伝えしました。
でその上でですね。
その実際、データを扱うために効率的に扱うためにですね。
管理画面というのを使うといいですよという。
お話をしました。
で管理画面を作る管理画面を使うためにはですね。
まずはCREATESUPERUSERというコマンドを打って、管理者権限のユーザーを作ってで管理画面に入って実際にデーターを扱っていくという
ことについてお話をしました。
で次にですね。
ベースドットHTMLということで、それこれ実際に。
HTMLファイル上で色んなリストを作っていくんですけれども、リストとかですね。
詳細ページとかデーターをいっぱい使いこなすためにはですね。
テンプレートを作っていくんですけれども、そのテンプレートの大物のようなイメージのものとして、ベースドットHTMLというファイルを作ってテンプレート
を使い回していくことができますよという。
お話をしましたで次にですね。
来るWとそれぞれのビューということでCRUDっていうのは、データベースを操作する時に必要とされる基本的な機能というものになるんですけれども、
CREATELEADアップデートDELETEということで、この4つの機能が基本的なデータベースを扱うサイトは備えていますよという。
お話とそのCRUDに対して、DJANGOにおいてはそれぞれどのビューが対応してるのかという。
お話をしてきましたで次にですね。
CSRFトークンとリバースPK。
ということで細かいですね。
ビューを作っていく時にちょっと意識しておいた方がいいなということをお伝えしました。
RFトークンというのは、DJANGOのDJANGOじゃなくてセキュリティー上ですね。
もうちょっと問題を解消する為にフォームを作った場合は、必ずその中に入れるというものですね。
で、リバースっていうのはその名の通りですね。
URLからビューを呼び出すのではなくて、リバースということで、そのビューを指定することによって、それに対応したURLを呼び出すことが
できるという。
メソッドについてご紹介をしましたで最後にPKです。
これプライマリーキーということで、それぞれ一個一個のデーターに振られている番号のことですね。
で、この番号をうまく使うことによって、URLの指定をしてですね。
詳細画面に移りますよという時に、そのプライマリーキーを指定することによって、データーベースの中に入っている何番目のデーターの表示をし
ますかという指定をする為に、このプライマリーキーというのがよく使われますよという。
お話をしました。
で最後にこれDJANGOとは関係ないんですけれども、BOOTSTRAPの使い方ですね。
HTMLファイルの見た目を整えるために使われるこのBOOTSTRAPファイルがBOOTSTRAPというゴム製フレームワークの使い方を簡単にご紹介し
てきました。
この辺がですね。
今回、このTODOリストで学んだことなのかなという風に思います。
