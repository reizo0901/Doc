【講師用のテキスト】

皆さん、こんばんは。
リスキルCTLの細田です。

業務後にもかからわず、リスキルCTL主催の「AWS集合研修 - WEBアプリ作成編」参加の調整いただき、
ありがとうございます。

今回の研修はAWSの環境構築から仮想コンテナ構築、WEBアプリで「つぶやき板」までと、これまでの研修と
比べても結構なボリュームがあります。

くじけず最後まで頑張っていきましょう！！

今回のAWS集合研修に向けて、環境準備や手順書作成、確認を実施していただいたリスキルCTLメンバー
の村上さん、松原さん、徐さん(あらため岩佐さん)、吉住さん、阿部さん、ありがとうございました。

AWS研修は３回目となりますが、AWSの研修の参加が初めての方もいらっしゃると思います。

今回の研修は、自己学習ベースになりますので、進めて行くにあたってわからないところが
でてくるかもしれませんが、

今日以外にも8/22、8/27、8/29と、講師参加のoViceによる相談窓口を設けています。
またリスキルCTLのLineWorksで質問いただければ、順次回答させていただきます。

それでは研修を始めていきます。

まずは、

１．研修の内容について～
は以下のとおりとなっています。
現時点でよくわからない用語などがあるかもしれませんが、随所に用語説明や「うんちく」を
配置しておりますので、参考にして進めてみてください。

２．WEBの仕組みについて～
の動画は事前に視聴いただいていると思いますので、ここでは割愛します。
まだ視聴されていない方は、飽きのこない、わかりやすい動画となっていますので、
視聴をお願いします。

３．構成図～
今回のハンズオンで作成する環境の構成を説明します。

●ネットワーク構成図

次の図は、AWS上でのネットワークの構成を表しています。

AWSクラウドはリージョンがあり、今回は東京リージョンである「ap-northeast-1」を利用します。
「リージョン」とは、AWSのクラウドリソースが物理的に配置されている地理的なエリアのことを指します。
※「２．AWSコンソールへサインイン」のところで選択することになります。

各リージョンには「アベイラビリティーゾーン」が存在していて、
「アベイラビリティーゾーン」はリージョンの中に存在する「データセンター」のことを指します。

AWSではユーザが責任のもと、複数のアベイラビリティーゾーンを利用して冗長化することが推奨されています。
※ひとつのデータセンターで問題が発生しても、他のデータセンターでサービスを継続可能とするためです。

今回のハンズオンでは、冗長構成はとらないため、１つのアベイラビリティーゾーンである「ap-northeast-1a」
だけを利用します。

VPCはその「アベイラビリティーゾーン」の中に作成していきます。
VPCの中に、「Public Subnet」を作成し、外部とデータセンタを接続するための「Internet Gateway」や

、データセンター内部で「Public Subnet」と接続するための「Router」を設置し、
通信の許可を「セキュリティグループ」で設定します。

※図では、Linuxサーバに接続するために必要なSSHポートの22番とブラウザからWEB接続に必要な
HTTPポートの80番を許可しています。

また、外部から固定IPで接続を可能にするための「Elastic IP」なども設定していきます。

●サーバ構成図

先ほどのネットワーク構成図の説明で出てきた仮想ネットワークであるVPCの中に
仮想マシンであるEC2インスタンスを1台作成します。

EC2インスタンスは仮想マシンや仮想サーバと呼ばれるもので、LinuxやWindows、リージョンに
よってはMACを作成することができます。

今回はEC2インスタンスはLinuxで仮想マシンを作成します。

作成したLinuxの中に、仮想コンテナであるDockerを作成します。

Dockerの中に３つのサーバ、WEBサーバ、APサーバ、DBサーバをLINUX OSで作成します。
※Dockerってなに？ってことは「5.仮想化とは？」「6.Dockerとは？」で説明していきます。

サイトを構成するサーバを役割に分けて構成されていることを「WEB3層アーキテクチャ構造」といいます。
役割を分けることにより、セキュリティの向上や、負荷の分散、冗長化などを行いやすくしています。

※今回の研修では負荷分散や冗長化に構成はとっておりません。

●EC2の図

この図では仮想マシン内の構成を説明します。

最初の図で説明したように、Linuxの中にDockerを使って、WEBサーバとAPサーバとDBサーバを
構築します。
左側がDocker内のサーバとアプリケーションの構成なっています。
Dockerの中には３つのコンテナを作成し、それぞれが対象のサーバになります。
コンテナ間の通信については、定義ファイルに設定を入れることで通信が可能になります。
※WEBサーバだけはLinux OSからHTTPポートから直接参照することができますが、
APサーバはWEBサーバからのみ参照可能で、DBサーバはAPサーバからのみ参照可能となっています。
※このようにサーバを分離することにより、セキュリティが担保されます。
通常はWEBサーバだけをパブリックサブネット(DMZ:De Militarized Zone)に配置し、APサーバとDBサーバはプライベートサブネットに配置します。
俗に言うネットワーク分離ともいわれます。

今回の構成ではコンテナ内部のディレクトリとLinux OSのディレクトリはリンクさせているため、
ホストOSから各サーバのディレクトリの中身を編集することが可能です。

●仮想化別のレイヤー構成の図

ハイパーバイザー型仮想化は、ハードウェア上に位置するため、オンプレミスとほぼ変わらない性能を維持できます。
また管理用のメモリの使用量も少ないのが特徴です。

ホスト型仮想化は、OSの上にアプリケーションをインストールし、その中に仮想化ソフトを動かしているため、ホストOSが
遅くなると、その上に乗っかっている仮想サーバも遅くなります。

コンテナ型仮想化は、ほかの２つと大きく異なり、ホストOSのリソースを利用して、仮想空間を作成します。
仮想空間はホストと完全に分離された環境として動作しますが、ホストOSのポートを利用するため、
同じホストOS内にWEBサーバを建てる場合はポート番号を変える必要があります。

※表にはもう少し細かい違いが書かれていますので、後で読んでみてください。

6.Dockerとは？

　※※※画面の文章を読む※※※

以下は簡単に用語の説明を記載しております。

それではいよいよ次の章から実際にAWSを触っての研修になります。
リスキルCTLのLINEWORKSで連携済みのAWSアカウントリストから、ご自分のアカウント使ってAWSにログインしてみましょう。
パスワードは共通になっていますので、「ReskillAWS@00+」を入力してください。

ここからは、自己学習となりますので、わからないことがありましたら
松原さん、岩佐さん、吉住さん、阿部さん、細田のいずれかのリスキルメンバーに気軽に質問してください。

