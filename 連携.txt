	"ホスト型仮想化
(Virtual Box)"	"ハイパーバイザー型仮想化
(VMWare/Hyper-V)"	"コンテナ型仮想化
(Docker/Podman)"
仮想イメージのサイズ	OS(カーネルを含む)とアプリケーションとデータを保持するため大きい。		データとアプリケーションとOS(カーネルを含まない)
構築にかかる時間	オンプレミスと同様にインストールや設定が必要。		既存のイメージを利用すればアプリケーションの設定のみでよい。
処理速度	ホスト上の仮想化ソフトウェアで動作するため遅い。	ハードウェア上の仮想化ソフトウェアで動作するため速い。	カーネルをホストOSと共有しているため早い。
作成可能なOS環境	仮想サーバ毎に異なるOSを構築可能。		Linux以外のOSで構成できない。
必要となるリソース	仮想サーバ毎に物理サーバと同等のリソースが必要		ホストOSのリソースと同等のリソースが利用可能
強み	構成の自由度が高い。		軽量で可搬性が高い。
コスト	ハードウェアやコロケーション、メンテンナンスコストを抑えられる。	ハードウェアやコロケーション、メンテンナンス費用を抑えられる。	ハードウェアやコロケーション、メンテンナンス費用を抑えられる。
耐障害		スナップショットや冗長化が容易	Kubernetsなどのツールにより対策が可能。
災害対策	オンプレミスと同等レベルのため別途対策が必要。	HAやレプリケーションも容易で復旧、切り替えもスムーズ	Kubernetsなどのツールにより対策が可能。
