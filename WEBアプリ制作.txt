WEBアプリ制作体験

●WEBアプリケーション制作を通じて、WEBの仕組みや構成、仮想化技術を理解しよう！

●Webサイトが表示されるまでの仕組み
　
　ブラウザでURLを入力してから、ブラウザに表示がされるまでに色々なルートを通っています。
　
　HTTP接続の場合
　
　①ブラウザにURLを入力して[Enter]
　②URLがドメインの場合は、複数存在するグローバルDNSサーバからドメイン名に紐づけされたIPアドレスを取得します。
　③取得したグローバルIPアドレスを持つサーバにアクセスする。
　④アクセスされたサーバはWebページや画像データをブラウザに返します。
　※HTTPは非暗号化通信のため、悪意のある第三者から内容を見ることができます。
　
　※図
　
　HTTPS接続の場合
　①ブラウザにURLを入力して[Enter]
　②URLがドメインの場合は、複数存在するグローバルDNSサーバからドメイン名に紐づけされたIPアドレスを取得します。
　③取得したグローバルIPアドレスを持つサーバにアクセスする。
　④アクセスされたサーバはデジタル証明書(公開鍵)をブラウザに送ります。
　⑤ブラウザはデジタル証明書(公開鍵)を使って暗号化した共通鍵をサーバに送ります。
　⑥その後は、共通鍵を使って暗号化された通信プロトコルで、サイトの表示やデータのやり取りをします。
　※共通鍵を使って通信されている内容は暗号化されているため、悪意のある第三者から内容を見ることはできなくなります。
　
　※図

　Google Chromeなどは2017年11月からHTTPSに対応していないウェブサイトへ接続した場合は警告が表示されるようになっています。

●WEBコンテンツの種類はに大きく分けて２つある。
　
　　静的コンテンツ
　　　サイトの画面に動きがないコンテンツではありません！
　　　サイトにアクセスがあった場合、あらかじめ用意したおいたコンテンツを表示する。
　　　
　　　※図
　　　※ユーザがデータをサーバに送ることができないため、決まった内容の表示しか出来ないコンテンツ
　　　サイトにアクセスがされた場合、既に作成されているコンテンツを読み込んで表示します。
　　　代表的な言語：HTML,CSS,Java Script
　　　関連用語：クライアントサイドプログラミング

　　動的コンテンツ
　　　サイトの画面に動きがあるコンテンツではありません！
　　　サイトにアクセスがされるたびに、プログラムが画面を作成して表示します。
　　　※WEBアプリケーション＝動的コンテンツということになります。
　　　
　　　※図
　　　※ユーザから受け取った情報をもとに、結果が変動するコンテンツ
　　　代表的な言語：Java,PHP,R,Python,Perl
　　　関連用語：サーバサイドプログラミング

●クライアントサイド？サーバサイド？とは

　クライアントサイドプログラミング
　　ブラウザで動作するプログラム
　　
　　メリット：開発環境が容易に準備出来る。
　　　　　　　テストが容易に出来る。

　　デメリット：動作が遅い
　　　　　　　　ソースを閲覧されるため分析されやすい。
　　　　　　　　クライアントの環境により動作が変わる可能性がある。
　　　　　　　　ユーザの情報をサーバに保管できない。

※図

　サーバサイドプログラミング
　　サーバで動作するプログラム

　　メリット：動作が速い。
　　　　　　　プログラムを解析される心配がないため、信頼性が高い。
　　　　　　　サーバ側のリソースが使える。(データベースやストレージ等)
　　　　　　　ユーザの情報をサーバ保管できる。
　　　　　　　
　　デメリット：開発コストが高く、構築に時間がかかる。
　　　　　　　　定期的なメンテナンスが必要。

※図

●WEBコンテンツを公開するのにサーバは？
　
　WEBサイトはWEBサーバやAPサーバ、必要に合わせてDBサーバなどで構成されます。
　
　　WEBソフトウェア
　　　静的コンテンツを表示するための仕組みを持ったサーバソフトウェアです。
　　　※モジュール追加やアドオンによりAPサーバ機能を追加することもできます。
　　代表的なサーバ：NGINX,Apache,Cloudflare,LiteSpeed,Microsoft-IIS
　　　
　　AP(Application)サーバもしくはWAS(WEB Application Server)
　　　動的コンテンツを表示するための仕組みを持ったサーバソフトウェアです。
　　　代表的なソフトウェア：Apache Tomcat,GlassFish,WebSphere,JBoss,unicorm,uWSGI
　　
　　DBサーバ
　　　大量のデータを高速に処理するためのソフトウェアです。
　　　代表的なソフトウェア：ORACLE,SQL Server,MySQL,PostgreSQL,MongoDB
　　
　　※図

　
●制作するコンテンツの説明
　「じゃんけん」をWEBアプリケーションで作成します。
　環境
　AWSのEC2サービスを利用して、構築した仮想サーバ上にDockerコンテナをインストール後、
　以下の２つのサーバを構成し、Pythonというプログラム言語でWEBアプリ(動的コンテンツ)を作成します。

●AWSとは

　AWS（Amazon Web Services）とは、Amazonが提供しているWebサービスの総称です
　クラウドコンピューティングを利用して、ストレージやデータベース、サーバなど、さまざまなサービスの貸し出しをしています。

　AWSの90分類、700種類以上あるサービスの中から今回研修で利用するEC2というサービスを紹介します。

　AmazonEC2（Amazon Elastic Compute Cloud）
　EC2は、必要なときにだけ使用できる仮想レンタルサーバで、料金は利用する容量とアクセス量に応じて変化します。
　AWSの中でも特にユーザー数の多いサービスです。
　
　メリット：Webサイトの規模やアクセス量に応じて、サーバ容量や帯域などを変更出来る。

　デメリット：容量とアクセス量で料金が変動するため、見積もりが難しい。

●Dockerコンテナについて

　Linuxのコンテナ技術をベースにDocker社が開発した仮想化技術の一つで、ベースOSのカーネルを共有しつつ、
　Dockerコンテナ内のアプリケーションは分離された環境が提供されます。
　
　メリット：ベースOSのカーネルを共有しているためCPUやメモリの消費が少ない。
　　　　　　イメージをダウンロードして、構築された環境をすぐさま利用出来る。
　　　　　　イメージを他のサーバにアップロードすることで環境の移行が簡単に出来る。

　デメリット：イメージを利用しない場合は、設計や構築の難易度が高い。
　　　　　　　イメージが破損すると動作しなくなるため、データやログの管理が複雑になる。
　　　　　　　ベースOSのカーネルを利用するため選べるOSが少ない。

●Pythonとは？
　可用性と保守性が高く、様々な分野で利用可能なインタプリタ型高級言語として注目されている言語になります。
　分野も広く、以下の先端技術での利用されています。
　・機械学習を使った人工知能の開発
　・自動データ処理や分析などの業務効率化
　・スクレイピングによるWEB上の画像データ・テキストデータの自動収集
　・WEBサービス・WEBアプリケーション制作
　・スマホアプリ（Android）制作
　・デスクトップアプリ制作
　・組み込みアプリケーション制作
　・フィンテック・ブロックチェーン技術の開発
　
　メリット：コードが短く、非常に読みやすい。
　　　　　　インタプリタ型言語であるため、テストが容易。
　　　　　　ライブラリが充実しているため、大半のことが出来る。
　
　デメリット：処理速度が遅い。(ライブラリを利用しない場合)
　　　　　　　インタプリタ型である欠点としてソースが平文になる。
　　　　　　　コーディング規約が厳しめで、慣れが必要。

・チュートリアル
　
　
